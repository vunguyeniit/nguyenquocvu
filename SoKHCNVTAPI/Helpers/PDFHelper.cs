using DocumentFormat.OpenXml.Drawing.Charts;
using DocumentFormat.OpenXml.Office.CustomUI;
using DocumentFormat.OpenXml.Wordprocessing;
using Microsoft.IdentityModel.Tokens;
using Newtonsoft.Json;
using QuestPDF.Drawing;
using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using SoKHCNVTAPI.Entities;
using SoKHCNVTAPI.Migrations;
using System.Collections.Generic;
using System.Diagnostics.Contracts;
using System.Globalization;
namespace SoKHCNVTAPI.Helpers;

public class PDFHelper
{
    public string Filename { set; get; } = DateTime.Now.Ticks + "_BaoCao.pdf";
    public PDFHelper()
    {
        string fontDirectory = Path.Combine("Fonts", "times new roman.ttf");
        FontManager.RegisterFont(File.OpenRead(fontDirectory));
    }
    #region Thong tu 09

    public string XuatMau01TT9(string path, Workflow workflow, DuAn duan)
    {
        var thu = "";
        var ngay = "";
        var thang = "";
        var nam = "";

        var I_1 = "";
        var I_2 = "";
        var I_2_ngay = "";
        var I_2_thang = "";
        var I_2_nam = "";
        var I_3 = "";
        var I_4 = "";
        var I_5 = "";
        var I_6 = "";
        var I_7 = "";
        var I_8 = "";
        var I_9 = "";
        var I_10 = "";
        var I_11 = "";
        var I_12 = "";
        var I_13 = "";

        var II_1_co = false;
        var II_1_khong = false;
        var II_1_ghi_chu = "";

        var II_2_co = false;
        var II_2_khong = false;
        var II_2_ghi_chu = "";


        var II_3_co = false;
        var II_3_khong = false;
        var II_3_ghi_chu = "";

        var II_4_co = false;
        var II_4_khong = false;
        var II_4_ghi_chu = "";


        var II_5_co = false;
        var II_5_khong = false;
        var II_5_ghi_chu = "";


        var II_6_co = false;
        var II_6_khong = false;
        var II_6_ghi_chu = "";

        var II_7_co = false;
        var II_7_khong = false;
        var II_7_ghi_chu = "";

        var II_8_co = false;
        var II_8_khong = false;
        var II_8_ghi_chu = "";

        var III_1_1_TT = "";
        var III_1_1_TĐ = "";
        var III_1_2_TT = "";
        var III_1_2_TĐ = "";
        var III_1_3_TT = "";
        var III_1_3_TĐ = "";
        var III_1_4_TT = "";
        var III_1_4_TĐ = "";
        var III_1_5_TT = "";
        var III_1_5_TĐ = "";
        var III_1_6_TT = "";
        var III_1_6_TĐ = "";
        var III_1_7_TT = "";
        var III_1_7_TĐ = "";

        var III_2_TT = "";
        var III_2_TĐ = "";

        var III_3_TT = "";
        var III_3_TĐ = "";

        var III_4_TT = "";
        var III_4_TĐ = "";

        var III_5_TT = "";
        var III_5_TĐ = "";

        var III_6_TT = "";
        var III_6_TĐ = "";

        var III_7_TT = "";
        var III_7_TĐ = "";

        var III_8_1_TT = "";
        var III_8_1_TĐ = "";

        var III_8_2_TT = "";
        var III_8_2_TĐ = "";

        var III_8_3_TT = "";
        var III_8_3_TĐ = "";

        var III_8_4_TT = "";
        var III_8_4_TĐ = "";

        var IV_Y_KIEN = "";
        var IV_CHU_KY = "";
 
        var V_Y_KIEN = "";
        var V_CHU_KY = "";
        var V_HO_TEN = "";

        var ngayKy = "";
        var thangKy = "";
        var namKy = "";
        var hoVaTen = "";

        // Xuat quy trinh 1 -> có 5 bước
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
        dynamic? step4;
        dynamic? step5;

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    I_1 = data1.TenCoQuan;
                    I_2 = data1.VanBanDeNghiSo;

                    string ngaythangnam = data1.ThoiGian.ToString();
                    string[] thoiGian = ngaythangnam.Split(' ');
                    ngaythangnam = thoiGian[0];
                    string[] ThoiGian = ngaythangnam.Split('/');
      
                    // Kiểm tra mảng ThoiGian có đủ phần tử trước khi gán giá trị
                    I_2_thang = ThoiGian.Length > 0 ? ThoiGian[0] : DateTime.Now.Month.ToString();
                    I_2_ngay = ThoiGian.Length > 1 ? ThoiGian[1] : DateTime.Now.Day.ToString();
                    I_2_nam = ThoiGian.Length > 2 ? ThoiGian[2] : DateTime.Now.Year.ToString();
                    I_3 = data1.TenDuAn ?? "";
                    I_4 = data1.MucTieuDuAn;
                    I_5 = data1.QuyMoDuAn;
                    I_6 = data1.TongMucDauTu;
                    I_7 = data1.ChuDauTu;
                    I_8 = data1.DiaDiemThucHien;
                    I_9 = data1.TienDoThucHien;
                    I_10 = data1.ThoiGianThucHien;
                    I_11 = data1.PhanLoaiDuAn;
                    I_12 = data1.ThamQuyenQuyetDinh;
                    I_13 = data1.DeXuatCoChe;
                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data1 = step2.form.data;
                    int item_index = 1;
                    foreach (var item in data1.NoiDung)
                    {
                        bool yesOrNo = item.yesOrNo;
                        if (item_index == 1)
                        {
                            if (yesOrNo)
                            {
                                II_1_co = true;
                            }
                            else
                            {
                                II_1_khong = true;
                            }
                            II_1_ghi_chu = item.description;
                        }
                        else if (item_index == 2)
                        {
                            if (yesOrNo)
                            {
                                II_2_co = true;
                            }
                            else
                            {
                                II_2_khong = true;
                            }
                            II_2_ghi_chu = item.description;
                        }
                        else if (item_index == 3)
                        {
                            if (yesOrNo)
                            {
                                II_3_co = true;
                            }
                            else
                            {
                                II_3_khong = true;
                            }
                            II_3_ghi_chu = item.description;
                        }
                        else if (item_index == 4)
                        {
                            if (yesOrNo)
                            {
                                II_4_co = true;
                            }
                            else
                            {
                                II_4_khong = true;
                            }
                            II_4_ghi_chu = item.description;
                        }
                        else if (item_index == 5)
                        {
                            if (yesOrNo)
                            {
                                II_5_co = true;
                            }
                            else
                            {
                                II_5_khong = true;
                            }
                            II_5_ghi_chu = item.description;
                        }
                        else if (item_index == 6)
                        {
                            if (yesOrNo)
                            {
                                II_6_co = true;
                            }
                            else
                            {
                                II_6_khong = true;
                            }
                            II_6_ghi_chu = item.description;
                        }
                        else if (item_index == 7)
                        {
                            if (yesOrNo)
                            {
                                II_7_co = true;
                            }
                            else
                            {
                                II_7_khong = true;
                            }
                            II_7_ghi_chu = item.description;
                        }
                        else if (item_index == 8)
                        {
                            if (yesOrNo)
                            {
                                II_8_co = true;
                            }
                            else
                            {
                                II_8_khong = true;
                            }
                            II_8_ghi_chu = item.description;
                        }
                        else
                        {
                            break;
                        }
                        item_index++;
                    }

                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;
                    III_1_1_TT = data3.TomTat.d1.a;
                    III_1_1_TĐ = data3.YKien.d1.a;

                    III_1_2_TT = data3.TomTat.d1.b;
                    III_1_2_TĐ = data3.YKien.d1.b;

                    III_1_3_TT = data3.TomTat.d1.c;
                    III_1_3_TĐ = data3.YKien.d1.c;

                    III_1_4_TT = data3.TomTat.d1.d;
                    III_1_4_TĐ = data3.YKien.d1.d;

                    III_1_5_TT = data3.TomTat.d1.dd;
                    III_1_5_TĐ = data3.YKien.d1.dd;

                    III_1_6_TT = data3.TomTat.d1.e;
                    III_1_6_TĐ = data3.YKien.d1.e;

                    III_2_TT = data3.TomTat.d2;
                    III_2_TĐ = data3.YKien.d2;

                    III_3_TT = data3.TomTat.d3;
                    III_3_TĐ = data3.YKien.d3;

                    III_4_TT = data3.TomTat.d4;
                    III_4_TĐ = data3.YKien.d4;

                    III_5_TT = data3.TomTat.d5;
                    III_5_TĐ = data3.YKien.d5;

                    III_6_TT = data3.TomTat.d6;
                    III_6_TĐ = data3.YKien.d6;

                    III_7_TT = data3.TomTat.d7;
                    III_7_TĐ = data3.YKien.d7;

                    III_8_1_TT = data3.TomTat.d8.a;
                    III_8_1_TĐ = data3.YKien.d8.a;

                    III_8_2_TT = data3.TomTat.d8.b;
                    III_8_2_TĐ = data3.YKien.d8.b;

                    III_8_3_TT = data3.TomTat.d8.c;
                    III_8_3_TĐ = data3.YKien.d8.c;
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
            {
                step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step4 != null)
                {
                    dynamic? data4 = step4.form.data;
                    IV_Y_KIEN = data4.NhanXet;
                    IV_CHU_KY = data4.KyTen.MaChuKy;
                    if (data4.KyTen != null)
                    {
                        string thoiGian = data4.KyTen.KyNgay.ToString();
                        string[] partsFull = thoiGian.Split(' ');
                        string partThoiGian = partsFull[0];
                        string[] part = partThoiGian.Split('/');
                        ngayKy = part[0];
                        thangKy = part[1];
                        namKy = part[2];
                        hoVaTen = data4.KyTen.NguoiKy;
                    }
                }
           
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
            {
                step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step5 != null)
                {
                    dynamic? data5 = step5.form.data;
                    if (data5 != null)
                    {
                        V_Y_KIEN = data5.KetLuan ?? "";
                        V_CHU_KY = data5.KyTen.MaChuKy ?? "";
                        V_HO_TEN = data5.KyTen.NguoiKy ?? "";

                    }
                }
            }
        }       
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().AlignRight().Text("Mẫu số 1").FontSize(10);
                        column.Item().AlignRight().Text("09/2020/TT-BKHCN").Light().FontSize(10);

                        column.Item().PaddingTop(5).AlignCenter().Text("                      CƠ QUAN CHỦ QUẢN                                       CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold().FontSize(14);
                        column.Item().AlignCenter().Text("CƠ QUAN THẨM ĐỊNH/CÓ Ý KIẾN                                               Độc lập - Tự do - Hạnh phúc").Bold().FontSize(14);
                        column.Item().AlignCenter().Text("          ___________________________                                             _______________________________  ").Bold().FontSize(14);
                        column.Item().PaddingLeft(350).AlignCenter().Text(thu + ", ngày " + ngay + ", tháng " + thang + ", năm 20" + nam).Light().FontSize(14);
                        //Header    
                        column.Item().PaddingTop(5).AlignCenter().Text("PHIẾU THẨM ĐỊNH HOẶC CÓ Ý KIẾN VỀ CÔNG NGHỆ DỰ ÁN ĐẦU TƯ").Bold().FontSize(14);
                        column.Item().AlignCenter().Text("CỦA CƠ QUAN CÓ THẤM QUYỀN TRONG GIAI ĐOẠN XEM XÉT QUYẾT ĐỊNH CHỦ TRƯƠNG ĐẦU TƯ").Bold().FontSize(14);
                        column.Item().PaddingTop(0).AlignCenter().Text("_______________").FontSize(14);
                        column.Item().PaddingTop(5).AlignLeft().Text("I. CÁC THÔNG TIN CHUNG").Bold().FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("1. Cơ quan, tổ chức đề nghị thẩm định hoặc có ý kiến về công nghệ: ").FontSize(14);
                            text.Span(I_1).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("2. Văn bản đề nghị số:").FontSize(14);
                            text.Span(I_2).SemiBold().FontSize(14);
                            text.Span($"ngày {I_2_ngay} tháng {I_2_thang} năm {I_2_nam}").FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("3. Tên Dự án đầu tư (DAĐT): ").FontSize(14);
                            text.Span(I_3).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("4. Mục tiêu của (DAĐT): ").FontSize(14);
                            text.Span(I_4).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("5. Quy mô DAĐT3: ").FontSize(14);
                            text.Span(I_5).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("6. Tổng mức đầu tư, nguồn vốn đầu tư dự kiến: ").FontSize(14);
                            text.Span(I_6).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("7. Chủ đầu tư: ").FontSize(14);
                            text.Span(I_7).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("8. Địa điểm thực hiện DAĐT: ").FontSize(14);
                            text.Span(I_8).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("9. Tiến độ thực hiện DAĐT: ").FontSize(14);
                            text.Span(I_9).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("10. Thời hạn thực hiện của DAĐT: ").FontSize(14);
                            text.Span(I_10).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("11. Phân loại DAĐT4: ").FontSize(14);
                            text.Span(I_11).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(0).PaddingLeft(15).AlignLeft().Text("_______________").FontSize(14);
                        column.Item().PaddingTop(0).AlignLeft().Text(text =>
                        {
                            text.Span("1").Subscript();
                            text.Span(" Ghi tên cơ quan chủ quản của cơ quan thẩm định hoặc có ý kiến về công nghệ DAĐT").FontSize(8);
                        });
                        column.Item().PaddingTop(0).AlignLeft().Text(text =>
                        {
                            text.Span("2").Subscript();
                            text.Span(" Ghi tên cơ quan thẩm định hoặc có ý kiến về công nghệ DAĐT").FontSize(8);
                        });
                        column.Item().PaddingTop(0).AlignLeft().Text(text =>
                        {
                            text.Span("3").Subscript();
                            text.Span(" Quy mô DAĐT được thể hiện bởi: Công suất thiết kể/Sản phẩm, dịch vụ" +
                                " cung Cấp/Diện tích đất, mặt nước, mặt bằng dự kiến sử dụng/Quy mô kiến trúc" +
                                " xây dựng (diện tích xây dựng, diện tích sàn, số tầng, chiều cao công trình...).").FontSize(8);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("12. Thẩm quyền quyết định chủ trương đầu tư : ").FontSize(14);
                            text.Span(I_12).SemiBold().FontSize(14);
                        });
                        column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                        {
                            text.Span("13. Đề xuất cơ chế, chính sách đặc thù (nếu có ): ").FontSize(14);
                            text.Span(I_13).SemiBold().FontSize(14);
                        });

                        column.Item().PaddingTop(5).AlignLeft().Text("II. RÀ SOÁT VIỆC ĐÁP ỨNG ĐẦY ĐỦ CÁC NỘI DUNG GIẢI TRÌNH VỀ CỒNG NGHỆ TRONG HỒ SƠ DAĐT").Bold().FontSize(14);
                        column.Item().PaddingTop(5).PaddingBottom(10).AlignLeft().Text("(Theo quy định tại khoản 1 Điều 16 Luật Chuyển giao công nghệ)").FontSize(13);


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(350);
                                columns.ConstantColumn(70);
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("NỘI DUNG GIẢI TRÌNH").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("CÓ").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("KHÔNG").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("GHI CHÚ").Bold();

                            //row 2
                            table.Cell().Row(2).Column(1).Element(Title).Text("1");
                            table.Cell().Row(2).Column(2).Element(Block).Text("Phân tích và lựa chọn phương án công nghệ");
                            table.Cell().Row(2).Column(3).Element(Title).Text((II_1_co) ? "X" : "");
                            table.Cell().Row(2).Column(4).Element(Title).Text((II_1_khong) ? "X" : "");
                            table.Cell().Row(2).Column(5).Element(Block).Text(II_1_ghi_chu ?? "");

                            //row 3
                            table.Cell().Row(3).Column(1).Element(Title).Text("2");
                            table.Cell().Row(3).Column(2).Element(Block).Text("Tên, xuất xứ, sơ đồ quy trình công nghệ");
                            table.Cell().Row(3).Column(3).Element(Title).Text((II_2_co) ? "X" : "");
                            table.Cell().Row(3).Column(4).Element(Title).Text((II_2_khong) ? "X" : "");
                            table.Cell().Row(3).Column(5).Element(Block).Text(II_2_ghi_chu ?? "");

                            //row 4
                            table.Cell().Row(4).Column(1).Element(Title).Text("3");
                            table.Cell().Row(4).Column(2).Element(Block).Text("Dự kiến danh mục, tình trạng, thông số kỹ thuật của máy móc thiết bị chính trong dây chuyền công nghệ thuộc phương án công nghệ lựa chọn");
                            table.Cell().Row(4).Column(3).Element(Title).Text((II_3_co) ? "X" : "");
                            table.Cell().Row(4).Column(4).Element(Title).Text((II_3_khong) ? "X" : "");
                            table.Cell().Row(4).Column(5).Element(Block).Text(II_3_ghi_chu ?? "");

                            //row 5
                            table.Cell().Row(5).Column(1).Element(Title).Text("4");
                            table.Cell().Row(5).Column(2).Element(Block).Text("Tài liệu chứng minh công nghệ đã được kiểmchứng (nếu có)");
                            table.Cell().Row(5).Column(3).Element(Title).Text((II_4_co) ? "X" : "");
                            table.Cell().Row(5).Column(4).Element(Title).Text((II_4_khong) ? "X" : "");
                            table.Cell().Row(5).Column(5).Element(Block).Text(II_4_ghi_chu ?? "");

                            //row 6
                            table.Cell().Row(6).Column(1).Element(Title).Text("5");
                            table.Cell().Row(6).Column(2).Element(Block).Text("Dự kiến kế hoạch đào tạo, hỗ trợ kỹ thuật đểvận hành dây chuyền công nghệ (nếu có)");
                            table.Cell().Row(6).Column(3).Element(Title).Text((II_5_co) ? "X" : "");
                            table.Cell().Row(6).Column(4).Element(Title).Text((II_5_khong) ? "X" : "");
                            table.Cell().Row(6).Column(5).Element(Block).Text(II_5_ghi_chu ?? "");

                            //row 7
                            table.Cell().Row(7).Column(1).Element(Title).Text("6");
                            table.Cell().Row(7).Column(2).Element(Block).Text("Điều kiện sử dụng công nghệ(1)");
                            table.Cell().Row(7).Column(3).Element(Title).Text((II_6_co) ? "X" : "");
                            table.Cell().Row(7).Column(4).Element(Title).Text((II_6_khong) ? "X" : "");
                            table.Cell().Row(7).Column(5).Element(Block).Text(II_6_ghi_chu ?? "");

                            //row 8
                            table.Cell().Row(8).Column(1).Element(Title).Text("7");
                            table.Cell().Row(8).Column(2).Element(Block).Text("Đánh giá sơ bộ tác động của công nghệ đến môi trường (nếu có)");
                            table.Cell().Row(8).Column(3).Element(Title).Text((II_7_co) ? "X" : "");
                            table.Cell().Row(8).Column(4).Element(Title).Text((II_7_khong) ? "X" : "");
                            table.Cell().Row(8).Column(5).Element(Block).Text(II_7_ghi_chu ?? "");

                            //row 9
                            table.Cell().Row(9).Column(1).Element(Title).Text("8");
                            table.Cell().Row(9).Column(2).Element(Block).Text("Dự thảo hợp đồng chuyển giao công nghệ trong trường họp góp vốn bằng công nghệ");
                            table.Cell().Row(9).Column(3).Element(Title).Text((II_8_co) ? "X" : "");
                            table.Cell().Row(9).Column(4).Element(Title).Text((II_8_khong) ? "X" : "");
                            table.Cell().Row(9).Column(5).Element(Block).Text(II_8_ghi_chu);
                        });
                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(40)
                                .PaddingLeft(7)
                                .PaddingRight(7)
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                // .MinWidth(50)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(5).AlignLeft().Text("___________________________________________________________").FontSize(14);
                        column.Item().PaddingTop(5).AlignLeft().Text(text =>
                        {
                            text.Span("4").Subscript();
                            text.Span(" Phân loại DAĐT theo quy định của Luật Đầu tư công.").FontSize(8);
                        });
                        column.Item().PaddingTop(5).AlignLeft().Text(text =>
                        {
                            text.Span("5").Subscript();
                            text.Span(" Điều kiện sử dụng công nghệ là điều kiện chuyên ngành" +
                                " cho việc sử dụng công nghệ. Ví dụ: công nghệ bức xạ, hạt nhân trong lĩnh vực y" +
                                " tế thì để sử dụng công nghệ phải đáp ửng điều kiện về cơ sở hạ tầng, về an toàn," +
                                " về chât lượng nguồn nhân lực trong quá trình sử dụng công nghệ đó.").FontSize(8);
                        });

                        column.Item().PaddingTop(5).PaddingBottom(10).AlignLeft().Text(" III. NỘI DUNG THẨM ĐỊNH HOẶC CÓ Ý KIẾN VỀ CÔNG NGHỆ").Bold().FontSize(14);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn();
                                columns.ConstantColumn(110);
                                columns.ConstantColumn(150);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(Title).Text("NỘI DUNG THẨM ĐỊNH").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(Title).Text("TÓM TẮT THEO HỒ SƠ DAĐT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(Title).Text("Ý KIÉN THẨM ĐỊNH").Bold().FontSize(14);


                            //row 2
                            table.Cell().RowSpan(7).Row(2).Column(1).Element(Title).Text("1").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(Block).Text("Sự phù hợp của phương án công nghệ được lựa chọn").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(Block).Text(III_1_1_TT ?? "").FontSize(14);
                            table.Cell().Row(2).Column(4).Element(Block).Text(III_1_1_TĐ ?? "").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(Block).Text("a) Xem xét phương án lựa chọn công nghệ nêu trong hồ sơ DAĐT: phân tích, so sánh ưu nhược điểm của từng phương án  (tính hoàn thiện, thích hợp, tiên tiến...) để nhận xét về phương án công nghệ được chọn.").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(Block).Text(III_1_2_TT ?? "").FontSize(14);
                            table.Cell().Row(3).Column(4).Element(Block).Text(III_1_2_TĐ ?? "").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(Block).Text("b) Xem xét công nghệ thuộc Danh mục công nghệ (khuyến khích chuyển giao, hạn chế chuyển giao hoặc cấm chuyển giao) theo quy định của pháp luật về chuyển giao công nghệ").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(Block).Text(III_1_3_TT ?? "").FontSize(14);
                            table.Cell().Row(4).Column(4).Element(Block).Text(III_1_3_TĐ ?? "").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(Block).Text("c) Xem xét sự phù hợp của phương án công nghệ được lựa chọn với mục tiêu, quy mô, công suất của dự án").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(Block).Text(III_1_4_TT ?? "").FontSize(14);
                            table.Cell().Row(5).Column(4).Element(Block).Text(III_1_4_TĐ ?? "").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(Block).Text("d) Xem xét sự phù hợp của phương án công nghệ được lựa chọn với các yêu cầu, quy định của quy chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thẩm quyền (nếu có).").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(Block).Text(III_1_5_TT ?? "").FontSize(14);
                            table.Cell().Row(6).Column(4).Element(Block).Text(III_1_5_TĐ ?? "").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(Block).Text("đ) Xem xét máy móc, thiết bị chính có tính năng, thông số kỹ thuật, công suất, chất lượng phù hợp với phương án công nghệ được lựa chọn trong dự án.").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(Block).Text(III_1_6_TT ?? "").FontSize(14);
                            table.Cell().Row(7).Column(4).Element(Block).Text(III_1_6_TĐ ?? "").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(Block).Text("e) Xem xét sự phù họp của máy móc, thiết bị chính trong dây chuyền công nghệ với các yêu cầu, quy định của quy chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thẩm quyền (nếu có).").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(Block).Text(III_1_7_TT ?? "").FontSize(14);
                            table.Cell().Row(8).Column(4).Element(Block).Text(III_1_7_TĐ ?? "").FontSize(14);
                            table.Cell().Row(9).Column(1).Element(Title).Text("2").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(Block).Text("Việc kiểm chứng sử dụng công nghệ tại các quốc gia phát triển (nếu có)").FontSize(14);
                            table.Cell().Row(9).Column(3).Element(Block).Text(III_2_TT ?? "").FontSize(14);
                            table.Cell().Row(9).Column(4).Element(Block).Text(III_2_TĐ ?? "").FontSize(14);
                            table.Cell().Row(10).Column(1).Element(Title).Text("3").FontSize(14);
                            table.Cell().Row(10).Column(2).Element(Block).Text("Việc đào tạo, hỗ trợ kỹ thuật cho vận hành dây chuyền công nghệ của DAĐT (nếu có)").FontSize(14);
                            table.Cell().Row(10).Column(3).Element(Block).Text(III_3_TT ?? "").FontSize(14);
                            table.Cell().Row(10).Column(4).Element(Block).Text(III_3_TĐ ?? "").FontSize(14);
                            table.Cell().Row(11).Column(1).Element(Title).Text("4").FontSize(14);
                            table.Cell().Row(11).Column(2).Element(Block).Text("Việc đáp ứng các điều kiện sử dụng công nghệ").FontSize(14);
                            table.Cell().Row(11).Column(3).Element(Block).Text(III_4_TT ?? "").FontSize(14);
                            table.Cell().Row(11).Column(4).Element(Block).Text(III_4_TĐ ?? "").FontSize(14);
                            table.Cell().Row(12).Column(1).Element(Title).Text("5").FontSize(14);
                            table.Cell().Row(12).Column(2).Element(Block).Text("Sơ bộ tác động ảnh hưởng của công nghệ đến môi trường (môi trường tự nhiên, kinh tế và xã hội, sức khỏe cộng đồng...)").FontSize(14);
                            table.Cell().Row(12).Column(3).Element(Block).Text(III_5_TT ?? "").FontSize(14);
                            table.Cell().Row(12).Column(4).Element(Block).Text(III_5_TĐ ?? "").FontSize(14);
                            table.Cell().Row(13).Column(1).Element(Title).Text("6").FontSize(14);
                            table.Cell().Row(13).Column(2).Element(Block).Text("Dự thảo hợp đồng chuyển giao công nghệ (nếu có)").FontSize(14);
                            table.Cell().Row(13).Column(3).Element(Block).Text(III_6_TT ?? "").FontSize(14);
                            table.Cell().Row(13).Column(4).Element(Block).Text(III_6_TĐ ?? "").FontSize(14);
                            table.Cell().Row(13).Column(1).Element(Title).Text("7").FontSize(14);
                            table.Cell().Row(13).Column(2).Element(Block).Text("Đối với DAĐT trong khu công nghệ cao đồng thòi phải đáp ứng các tiêu chí, tiêu chuẩn theo quy định của pháp luật về công nghệ cao").FontSize(14);
                            table.Cell().Row(13).Column(3).Element(Block).Text(III_7_TT ?? "").FontSize(14);
                            table.Cell().Row(13).Column(4).Element(Block).Text(III_7_TĐ ?? "").FontSize(14);
                            table.Cell().RowSpan(4).Row(14).Column(1).Element(Title).Text("8");
                            table.Cell().Row(14).Column(2).Element(Block).Text("Những vấn đề khác có liên quan (nếu có)").FontSize(14);
                            table.Cell().Row(14).Column(3).Element(Block).Text(III_8_1_TT ?? "").FontSize(14);
                            table.Cell().Row(14).Column(4).Element(Block).Text(III_8_1_TĐ ?? "").FontSize(14);
                            table.Cell().Row(15).Column(2).Element(Block).Text("- Xem xét, đánh giá sơ bộ các lợi ích kinh tế - xã hội do DAĐT mang lại (khả năng tạo năng lực sản xuất mới, ngành nghề mới, sản phẩm mới, mở rộng thị trường, tạo việc làm cho người lao động, khả năng sử dụng phụ tùng, linh kiện, nguyên liệu sản xuất trong nước, đóng góp cho ngân sách nhà nước, lợi ích kinh tế của chủ đầu tư...)").FontSize(14);
                            table.Cell().Row(15).Column(3).Element(Block).Text(III_8_2_TT ?? "").FontSize(14);
                            table.Cell().Row(15).Column(4).Element(Block).Text(III_8_2_TĐ ?? "").FontSize(14);
                            table.Cell().Row(16).Column(2).Element(Block).Text("- Xem xét, đánh giá sơ bộ hiệu quả của công nghệ đối với sự phát triển của địa phương, ngành (góp phần đổi mới công nghệ sản xuất của địa phương, gia tăng giá trị sản phẩm, tạo sản phẩm chủ lực của địa phương; nâng cao trình độ công nghệ sản xuất của ngành):").FontSize(14);
                            table.Cell().Row(16).Column(3).Element(Block).Text(III_8_3_TT ?? "").FontSize(14);
                            table.Cell().Row(16).Column(4).Element(Block).Text(III_8_3_TĐ ?? "").FontSize(14);
                            table.Cell().Row(17).Column(2).Element(Block).Text("- Các vấn đề khác:").FontSize(14);
                            table.Cell().Row(17).Column(3).Element(Block).Text(III_8_4_TT ?? "").FontSize(14);
                            table.Cell().Row(17).Column(4).Element(Block).Text(III_8_4_TĐ ?? "").FontSize(14);
                            //row 3

                        });

                        column.Item().PaddingTop(15).PaddingLeft(25).AlignLeft().Text("IV. Ý KIẾN NHẬN XÉT, KIẾN NGHỊ CỦA NGƯỜI THẨM ĐỊNH").Bold().FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(25).AlignLeft().Text($"{IV_Y_KIEN}").Bold().FontSize(14);

                        //Ky ten
                        column.Item().PaddingTop(5).PaddingRight(70).AlignRight().Text($"ngày {ngayKy}, tháng {thangKy}, năm {namKy}").Italic().FontSize(14);
                        column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text("NGƯỜI THẨM ĐỊNH").Bold().FontSize(14);
                        column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text("             (Ký, ghi rõ họ và tên)  ").Italic().FontSize(14);
                        //column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text($"{IV_CHU_KY}").Bold().FontSize(14);
                        column.Item().PaddingTop(5).PaddingRight(70).PaddingBottom(50).AlignRight().Text($"{hoVaTen}").Bold().FontSize(14);

                        column.Item().PaddingTop(5).PaddingLeft(25).AlignLeft().Text("V. Ý KIẾN KÉT LUẬN CỦA THỦ TRƯỞNG ĐƠN VỊ THẨM ĐỊNH").Bold().FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(25).AlignLeft().Text($"{V_Y_KIEN}").Bold().FontSize(14);

                        column.Item().PaddingTop(5).PaddingRight(70).AlignRight().Text($"                                                                                                                     ngày {ngayKy}, tháng {thangKy}, năm {namKy}").Italic().FontSize(14);
                        column.Item().PaddingTop(1).PaddingRight(40).AlignRight().Text("THỦ TRƯỞNG ĐƠN VỊ THẨM ĐỊNH").Bold().FontSize(14);
                        column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text("             (Ký, ghi rõ họ và tên)  ").Italic().FontSize(14);
                        //column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text($"{V_CHU_KY}").Bold().FontSize(14);
                        column.Item().PaddingTop(5).PaddingRight(70).AlignRight().Text($"{V_HO_TEN}").Bold().FontSize(14);
                    });

                    
                    page.Footer()
                   .AlignCenter()
                   .Text(x =>
                   {
                       x.CurrentPageNumber();
                   });
                });
            }).GeneratePdf(path);

        return path;
    }
   
    public string XuatMau02TT9(string path, Workflow workflow)
    {
        var thu = "";
        var ngay = "";
        var thang = "";
        var nam = "";

        var I_1 = "";
        var I_2 = "";
        var I_2_ngay = "";
        var I_2_thang = "";
        var I_2_nam = "";
        var I_3 = "";
        var I_4 = "";
        var I_5 = "";
        var I_6 = "";
        var I_7 = "";
        var I_8 = "";
        var I_9 = "";
        var I_10 = "";
        var I_11 = "";
        var I_12 = "";
        var I_13 = "";

        //dòng 1
        var II_1_co = false;
        var II_1_khong = false;
        var II_1_ghi_chu = "";

        //dòng 2
        var II_2_co = false;
        var II_2_khong = false;
        var II_2_ghi_chu = "";


        //dòng 3
        var II_3_co = false;
        var II_3_khong = false;
        var II_3_ghi_chu = "";

        //dòng 5
        var II_4_co = false;
        var II_4_khong = false;
        var II_4_ghi_chu = "";


        //dòng 6
        var II_5_co = false;
        var II_5_khong = false;
        var II_5_ghi_chu = "";


        //dòng 7
        var II_6_co = false;
        var II_6_khong = false;
        var II_6_ghi_chu = "";
        //

        var III_1_1_TT = "";
        var III_1_1_TĐ = "";
        var III_1_2_TT = "";
        var III_1_2_TĐ = "";
        var III_1_3_TT = "";
        var III_1_3_TĐ = "";
        var III_1_4_TT = "";
        var III_1_4_TĐ = "";
        var III_1_5_TT = "";
        var III_1_5_TĐ = "";
        var III_1_6_TT = "";
        var III_1_6_TĐ = "";
        var III_1_7_TT = "";
        var III_1_7_TĐ = "";
        var III_1_8_TT = "";
        var III_1_8_TĐ = "";

        var III_2_1_TT = "";
        var III_2_1_TĐ = "";
        var III_2_2_TT = "";
        var III_2_2_TĐ = "";
        var III_2_3_TT = "";
        var III_2_3_TĐ = "";

        var III_3_1_TT = "";
        var III_3_1_TĐ = "";
        var III_3_2_TT = "";
        var III_3_2_TĐ = "";
        var III_3_3_TT = "";
        var III_3_3_TĐ = "";

        var III_4_TT = "";
        var III_4_TĐ = "";

        var III_5_TT = "";
        var III_5_TĐ = "";

        var III_6_1_TT = "";
        var III_6_1_TĐ = "";

        var III_6_2_TT = "";
        var III_6_2_TĐ = "";

        var III_6_3_TT = "";
        var III_6_3_TĐ = "";

        var III_6_4_TT = "";
        var III_6_4_TĐ = "";

        var IV_Y_KIEN = "";
        var IV_CHU_KY = "";
        var IV_NGUOI_KY = "";

        var V_Y_KIEN = "";
        var V_CHU_KY = "";
        var V_NGUOI_KY = "";

        var ngayKy = "";
        var thangKy = "";
        var namKy = "";
        var hoVaTen = "";

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
        dynamic? step4;
        dynamic? step5;
        
        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    I_1 = data1.TenCoQuan;
                    I_2 = data1.VanBanDeNghiSo;
                    I_3 = data1.TenDuAn;
                    string ngaythangnam = data1.ThoiGian.ToString();
                    string[] thoiGian = ngaythangnam.Split(' ');
                    ngaythangnam = thoiGian[0];
                    string[] ThoiGian = ngaythangnam.Split('/');

                    // Kiểm tra mảng ThoiGian có đủ phần tử trước khi gán giá trị
                    I_2_thang = ThoiGian.Length > 0 ? ThoiGian[0] : DateTime.Now.Month.ToString();
                    I_2_ngay = ThoiGian.Length > 1 ? ThoiGian[1] : DateTime.Now.Day.ToString();
                    I_2_nam = ThoiGian.Length > 2 ? ThoiGian[2] : DateTime.Now.Year.ToString();
                    I_4 = data1.MucTieuDuAn;
                    I_5 = data1.QuyMoDuAn;
                    I_6 = data1.TongMucDauTu;
                    I_7 = data1.ChuDauTu;
                    I_8 = data1.DiaDiemThucHien;
                    I_9 = data1.TienDoThucHien;
                    I_10 = data1.ThoiGianThucHien;
                    I_11 = data1.PhanLoaiDuAn;
                    I_12 = data1.ThamQuyenQuyetDinh;
                    I_13 = data1.DeXuatCoChe;
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data1 = step2.form.data.NoiDung;
                    int item_index = 1;
                    foreach (var item in data1)
                    {
                        bool yesOrNo = item.yesOrNo;
                        if (item_index == 1)
                        {
                            if (yesOrNo)
                            {
                                II_1_co = true;
                            }
                            else
                            {
                                II_1_khong = true;
                            }
                            II_1_ghi_chu = item.description;
                        }
                        else if (item_index == 2)
                        {
                            if (yesOrNo)
                            {
                                II_2_co = true;
                            }
                            else
                            {
                                II_2_khong = true;
                            }
                            II_2_ghi_chu = item.description;
                        }
                        else if (item_index == 3)
                        {
                            if (yesOrNo)
                            {
                                II_3_co = true;
                            }
                            else
                            {
                                II_3_khong = true;
                            }
                            II_3_ghi_chu = item.description;
                        }
                        else if (item_index == 4)
                        {
                            if (yesOrNo)
                            {
                                II_4_co = true;
                            }
                            else
                            {
                                II_4_khong = true;
                            }
                            II_4_ghi_chu = item.description;
                        }
                        else if (item_index == 5)
                        {
                            if (yesOrNo)
                            {
                                II_5_co = true;
                            }
                            else
                            {
                                II_5_khong = true;
                            }
                            II_5_ghi_chu = item.description;
                        }
                        else if (item_index == 6)
                        {
                            if (yesOrNo)
                            {
                                II_6_co = true;
                            }
                            else
                            {
                                II_6_khong = true;
                            }
                            II_6_ghi_chu = item.description;
                        }

                        else
                        {
                            break;
                        }
                        item_index++;
                    }

                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? TomTat = step3.form.data.TomTat;
                    dynamic? YKien = step3.form.data.YKien;

                    III_1_2_TT = TomTat.d1.a;
                    III_1_3_TT = TomTat.d1.b;
                    III_1_4_TT = TomTat.d1.c;
                    III_1_5_TT = TomTat.d1.d;
                    III_1_6_TT = TomTat.d1.dd;
                    III_1_7_TT = TomTat.d1.e;
                    III_1_8_TT = TomTat.d1.g;

                    III_1_2_TĐ = YKien.d1.a;
                    III_1_3_TĐ = YKien.d1.b;
                    III_1_4_TĐ = YKien.d1.c;
                    III_1_5_TĐ = YKien.d1.d;
                    III_1_6_TĐ = YKien.d1.dd;
                    III_1_7_TĐ = YKien.d1.e;
                    III_1_8_TĐ = YKien.d1.g;

                    III_2_2_TT = TomTat.d2.a;
                    III_2_3_TT = TomTat.d2.b;

                    III_2_2_TĐ = YKien.d2.a;
                    III_2_3_TĐ = YKien.d2.b;

                    III_3_2_TT = TomTat.d3.a;
                    III_3_3_TT = TomTat.d3.b;

                    III_3_2_TĐ = YKien.d3.a;
                    III_3_3_TĐ = YKien.d3.b;

                    III_4_TT = TomTat.d4;

                    III_4_TĐ = YKien.d4;

                    III_5_TT = TomTat.d5;
                    III_5_TĐ = YKien.d5;

                    III_6_2_TT = TomTat.d6.a;
                    III_6_3_TT = TomTat.d6.b;
                    III_6_4_TT = TomTat.d6.c;

                    III_6_2_TĐ = YKien.d6.a;
                    III_6_3_TĐ = YKien.d6.b;
                    III_6_4_TĐ = YKien.d6.c;


                }

            }

            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
            {
                step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step4 != null)
                {
                    dynamic? data4 = step4.form.data;
                    if (data4 != null)
                    {
                        IV_Y_KIEN = data4.NhanXet ?? "";
                        IV_CHU_KY = data4.KyTen.MaChuKy ?? "";
                        IV_NGUOI_KY = data4.KyTen.NguoiKy ?? "";

                    }
                }
            }

            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
            {
                step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step5 != null)
                {
                    dynamic? Data1 = step5.form.data;
                    V_Y_KIEN = Data1.KetLuan;
                    V_CHU_KY = Data1.KyTen.MaChuKy;
                    V_NGUOI_KY = Data1.NguoiKy;
                    if (Data1.KyTen != null)
                    {
                        string thoiGian = Data1.KyTen.KyNgay.ToString();
                        string[] partsFull = thoiGian.Split(' ');
                        string partThoiGian = partsFull[0];
                        string[] part = partThoiGian.Split('/');
                        ngayKy = part[0];
                        thangKy = part[1];
                        namKy = part[2];
                        V_NGUOI_KY = Data1.KyTen.NguoiKy;
                    }

                }

            }
        }

        QuestPDF.Fluent.Document
        .Create(container =>
        {
            container.Page(page =>
            {
                page.Size(PageSizes.A4.Landscape());
                page.Margin(2, Unit.Centimetre);
                page.PageColor(Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                page.Header()
                    .Column(column =>
                    {

                    });
                page.Content()
                .Column(column =>
                {
                    column.Item().AlignRight().Text("Mẫu số 2").SemiBold().FontSize(10);
                    column.Item().AlignRight().Text("09/2020/TT-BKHCN").Light().FontSize(10);

                    column.Item().PaddingTop(5).AlignCenter().Text("                      CƠ QUAN CHỦ QUẢN                                       CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold().FontSize(12);
                    column.Item().AlignCenter().Text("CƠ QUAN THẨM ĐỊNH CÔNG NGHỆ                                               Độc lập - Tự do - Hạnh phúc").Bold().FontSize(12);
                    column.Item().AlignCenter().Text("          ___________________________                                             _______________________________  ").Bold().FontSize(12);
                    column.Item().PaddingLeft(350).AlignCenter().Text(thu + ", ngày " + ngay + ", tháng " + thang + ", năm 20" + nam).Light().FontSize(12);
                    //header    
                    column.Item().PaddingTop(5).AlignCenter().Text("PHIẾU THẨM ĐỊNH HOẶC CÓ Ý KIẾN VỀ CÔNG NGHỆ DỰ ÁN ĐẦU TƯ").Bold().FontSize(14);
                    column.Item().AlignCenter().Text("CỦA CƠ QUAN CÓ THẤM QUYỀN TRONG GIAI ĐOẠN XEM XÉT QUYẾT ĐỊNH ĐẦU TƯ").Bold().FontSize(14);
                    column.Item().PaddingTop(0).AlignCenter().Text("_______________").FontSize(12);
                    column.Item().PaddingTop(5).AlignLeft().Text("I. CÁC THÔNG TIN CHUNG").Bold().FontSize(12);
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("1. Cơ quan, tổ chức đề nghị thẩm định hoặc có ý kiến về công nghệ: ").FontSize(12);
                        text.Span(I_1).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("2. Văn bản đề nghị số: ").FontSize(14);
                        text.Span(I_2).SemiBold().FontSize(14);
                        text.Span($"ngày {I_2_ngay} tháng {I_2_thang} năm {I_2_nam}").FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("3. Tên Dự án đầu tư (DAĐT): ").FontSize(14);
                        text.Span(I_3).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("4. Mục tiêu của (DAĐT): ").FontSize(14);
                        text.Span(I_4).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("5. Quy mô DAĐT3: ").FontSize(14);
                        text.Span(I_5).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("6. Tổng mức đầu tư, nguồn vốn đầu tư dự kiến: ").FontSize(14);
                        text.Span(I_6).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("7. Chủ đầu tư : ").FontSize(14);
                        text.Span(I_7).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("8. Địa điểm thực hiện DAĐT: ").FontSize(14);
                        text.Span(I_8).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("9. Tiến độ thực hiện DAĐT: ").FontSize(14);
                        text.Span(I_9).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("10. Thời hạn thực hiện của DAĐT: ").FontSize(14);
                        text.Span(I_10).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("11. Phân loại DAĐT4: ").FontSize(14);
                        text.Span(I_11).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(0).PaddingLeft(15).AlignLeft().Text("_______________").FontSize(12);
                    column.Item().PaddingTop(0).AlignLeft().Text(text =>
                    {
                        text.Span("1").Subscript();
                        text.Span(" Ghi tên cơ quan chủ quản của đơn vị thẩm định hoặc có ý kiến về công nghệ dự án đầu tư").FontSize(8);
                    });
                    column.Item().PaddingTop(0).AlignLeft().Text(text =>
                    {
                        text.Span("2").Subscript();
                        text.Span(" Ghi tên đơn vị thẩm định hoặc có ý kiến về công nghệ dự án đầu tư.").FontSize(8);
                    });
                    column.Item().PaddingTop(0).AlignLeft().Text(text =>
                    {
                        text.Span("3").Subscript();
                        text.Span("Quy mô DAĐT được thể hiện bởi: Công suất thiết ké/Sản phẩm, dịch vụ cung Cấp/Diện tích đất, mặt nước, mặt bằng dự kiến sử dụng/Quy mô kiến trúc xây dựng (diện tích xây dựng, diện tích sàn, số tầng, chiều cao công trình...).").FontSize(8);
                    });
                    column.Item().PaddingTop(0).AlignLeft().Text(text =>
                    {
                        text.Span("4").Subscript();
                        text.Span("Phân loại DAĐT theo quy định của Luật Đầu tư công ").FontSize(8);
                    });

                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("12. Thẩm quyền quyết định đầu tư: ").FontSize(14);
                        text.Span(I_12).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).PaddingLeft(15).AlignLeft().Text(text =>
                    {
                        text.Span("13. Đề xuất cơ chế, chính sách đặc thù (nếu có ): ").FontSize(14);
                        text.Span(I_13).SemiBold().FontSize(14);
                    });

                    column.Item().PaddingTop(5).AlignLeft().Text("II. RÀ SOÁT VIỆC ĐÁP ỨNG ĐẦY ĐỦ CÁC NỘI DUNG GIẢI TRÌNH VỀ CỒNG NGHỆ TRONG HỒ SƠ DAĐT").Bold().FontSize(14);
                    column.Item().PaddingTop(5).PaddingBottom(10).AlignLeft().Text("(Theo quy định tại khoản 2 Điều 16 Luật Chuyển giao công nghệ)").FontSize(13);


                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.ConstantColumn(50);
                            columns.ConstantColumn(350);
                            columns.ConstantColumn(60);
                            columns.ConstantColumn(70);
                            columns.RelativeColumn();
                        });

                        //row 1
                        table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                        table.Cell().Row(1).Column(2).Element(Title).Text("NỘI DUNG GIẢI TRÌNH").Bold();
                        table.Cell().Row(1).Column(3).Element(Title).Text("CÓ").Bold();
                        table.Cell().Row(1).Column(4).Element(Title).Text("KHÔNG").Bold();
                        table.Cell().Row(1).Column(5).Element(Title).Text("GHI CHÚ").Bold();

                        //row 2
                        table.Cell().Row(2).Column(1).Element(Title).Text("1");
                        table.Cell().Row(2).Column(2).Element(Block).Text("Tên, xuất xứ, sơ đồ quy trình công nghệ");
                        table.Cell().Row(2).Column(3).Element(Title).Text((II_1_co) ? "X" : "");
                        table.Cell().Row(2).Column(4).Element(Title).Text((II_1_khong) ? "X" : "");
                        table.Cell().Row(2).Column(5).Element(Block).Text(II_1_ghi_chu ?? "");

                        //row 3
                        table.Cell().Row(3).Column(1).Element(Title).Text("2");
                        table.Cell().Row(3).Column(2).Element(Block).Text("Danh mục, tình trạng, thông số kỹ thuật của máy móc, thiết bị trong dây chuyền công nghệ");
                        table.Cell().Row(3).Column(3).Element(Title).Text((II_2_co) ? "X" : "");
                        table.Cell().Row(3).Column(4).Element(Title).Text((II_2_khong) ? "X" : "");
                        table.Cell().Row(3).Column(5).Element(Block).Text(II_2_ghi_chu ?? "");

                        //row 4
                        table.Cell().Row(4).Column(1).Element(Title).Text("3");
                        table.Cell().Row(4).Column(2).Element(Block).Text("Sản phẩm, tiêu chuẩn, chất lượng sản phẩm");
                        table.Cell().Row(4).Column(3).Element(Title).Text((II_3_co) ? "X" : "");
                        table.Cell().Row(4).Column(4).Element(Title).Text((II_3_khong) ? "X" : "");
                        table.Cell().Row(4).Column(5).Element(Block).Text(II_3_ghi_chu ?? "");

                        //row 5
                        table.Cell().Row(5).Column(1).Element(Title).Text("4");
                        table.Cell().Row(5).Column(2).Element(Block).Text("Khả năng đáp ứng nguyên liệu, nhiên liệu, vật liệu cho dây chuyền công nghệ");
                        table.Cell().Row(5).Column(3).Element(Title).Text((II_4_co) ? "X" : "");
                        table.Cell().Row(5).Column(4).Element(Title).Text((II_4_khong) ? "X" : "");
                        table.Cell().Row(5).Column(5).Element(Block).Text(II_4_ghi_chu ?? "");

                        //row 6
                        table.Cell().Row(6).Column(1).Element(Title).Text("5");
                        table.Cell().Row(6).Column(2).Element(Block).Text("Chương trình đào tạo, hỗ trợ kỹ thuật để vận hành dây chuyền công nghệ");
                        table.Cell().Row(6).Column(3).Element(Title).Text((II_5_co) ? "X" : "");
                        table.Cell().Row(6).Column(4).Element(Title).Text((II_5_khong) ? "X" : "");
                        table.Cell().Row(6).Column(5).Element(Block).Text(II_5_ghi_chu ?? "");

                        //row 7
                        table.Cell().Row(7).Column(1).Element(Title).Text("6");
                        table.Cell().Row(7).Column(2).Element(Block).Text("Chi phí đầu tư cho công nghệ, máy móc, thiết bị, đào tạo, hỗ trợ kỹ thuật");
                        table.Cell().Row(7).Column(3).Element(Title).Text((II_6_co) ? "X" : "");
                        table.Cell().Row(7).Column(4).Element(Title).Text((II_6_khong) ? "X" : "");
                        table.Cell().Row(7).Column(5).Element(Block).Text(II_6_ghi_chu ?? "");

                    });
                    static IContainer Block(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(50)
                            .MinHeight(40)
                            .PaddingLeft(7)
                            .PaddingRight(7)
                            .AlignMiddle();
                    }

                    static IContainer Title(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            // .MinWidth(50)
                            .MinHeight(40)
                            .AlignCenter()
                            .AlignMiddle();
                    }

                    column.Item().PaddingTop(20).PaddingBottom(10).AlignLeft().Text(" III. NỘI DUNG THẨM ĐỊNH HOẶC CÓ Ý KIẾN VỀ CÔNG NGHỆ").SemiBold().FontSize(14);

                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.ConstantColumn(30);
                            columns.RelativeColumn();
                            columns.ConstantColumn(110);
                            columns.ConstantColumn(150);
                        });

                        //row 1
                        table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold().FontSize(14);
                        table.Cell().Row(1).Column(2).Element(Title).Text("NỘI DUNG THẨM ĐỊNH").Bold();
                        table.Cell().Row(1).Column(3).Element(Title).Text("TÓM TẮT THEO HỒ SƠ DAĐT").Bold();
                        table.Cell().Row(1).Column(4).Element(Title).Text("Ý KIÉN THẨM ĐỊNH").Bold();


                        //row 2
                        table.Cell().RowSpan(8).Row(2).Column(1).Element(Title).Text("1").Bold();
                        table.Cell().Row(2).Column(2).Element(Block).Text("Sự phù họp của công nghệ, máy móc, thiết bị" +
                            " với phương án được lựa chọn trong giai đoạn quyết định chủ trương đầu tư; tiêu chuẩn, quy chuẩn kỹ thuật và quy định khác của pháp luật có liên quan").Bold();
                        table.Cell().Row(2).Column(3).Element(Block).Text(" " + III_1_1_TT ?? "");
                        table.Cell().Row(2).Column(4).Element(Block).Text(" " + III_1_1_TĐ ?? "");
                        table.Cell().Row(3).Column(2).Element(Block).Text("a) Xem xét công nghệ thuộc Danh mục công nghệ (khuyến khích chuyển giao, hạn chế chuyển giao hoặc" +
                            " cấm chuyển giao) theo quy định của pháp luật về chuyển giao công nghệ.");
                        table.Cell().Row(3).Column(3).Element(Block).Text(" " + III_1_2_TT ?? "");
                        table.Cell().Row(3).Column(4).Element(Block).Text(" " + III_1_2_TĐ ?? "");
                        table.Cell().Row(4).Column(2).Element(Block).Text("b) Xem xét sự phù họp của công nghệ với phương án được lựa chọn trong giai đoạn quyết định chủ trương đầu tư");
                        table.Cell().Row(4).Column(3).Element(Block).Text(" " + III_1_3_TT ?? "");
                        table.Cell().Row(4).Column(4).Element(Block).Text(" " + III_1_3_TĐ ?? "");
                        table.Cell().Row(5).Column(2).Element(Block).Text("c) Xem xét sự phù họp của phương án công nghệ được lựa chọn với mục tiêu, quy mô, công suất của dự án.");
                        table.Cell().Row(5).Column(3).Element(Block).Text(" " + III_1_4_TT ?? "");
                        table.Cell().Row(5).Column(4).Element(Block).Text(" " + III_1_4_TĐ ?? "");
                        table.Cell().Row(6).Column(2).Element(Block).Text("d) Xem xét sự phù họp của phương án công nghệ được lựa chọn với các yêu cầu, quy định của quy" +
                            " chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thẩm quyền (nếu có).");
                        table.Cell().Row(6).Column(3).Element(Block).Text(" " + III_1_5_TT ?? "");
                        table.Cell().Row(6).Column(4).Element(Block).Text(" " + III_1_5_TĐ ?? "");
                        table.Cell().Row(7).Column(2).Element(Block).Text("đ) Xem xét máy móc, thiết bị có tính năng, thông số kỹ thuật, công suất, chất lượng phù họp với phương án công nghệ của dự án.");
                        table.Cell().Row(7).Column(3).Element(Block).Text(" " + III_1_6_TT ?? "");
                        table.Cell().Row(7).Column(4).Element(Block).Text(" " + III_1_6_TĐ ?? "");
                        table.Cell().Row(8).Column(2).Element(Block).Text("e) Xem xét tính đồng bộ của máy móc, thiết bị trong dây chuyền công nghệ" +
                            " (danh mục các máy móc, thiết bị của dự án đầu tư có khả năng thực hiện các công đoạn trong dây chuyền công nghệ). Đối" +
                            " với những dự án đầu tư mà bên nước ngoài tham gia góp vốn bằng thiết bị, thiết bị cần bảo đảm tính đồng bộ và phù họp với công nghệ.");
                        table.Cell().Row(8).Column(3).Element(Block).Text(" " + III_1_7_TT ?? "");
                        table.Cell().Row(8).Column(4).Element(Block).Text(" " + III_1_7_TĐ ?? "");
                        table.Cell().Row(9).Column(2).Element(Block).Text("g) Xem xét sự phù họp của máy móc, thiết bị trong dây chuyền công" +
                            " nghệ với các yêu cầu, quy định của quy chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác cùa cơ quan quản lý nhà nước có thẩm quyền (nếu có).");
                        table.Cell().Row(9).Column(3).Element(Block).Text(" " + III_1_8_TT ?? "");
                        table.Cell().Row(9).Column(4).Element(Block).Text(" " + III_1_8_TĐ ?? "");
                        table.Cell().RowSpan(3).Row(10).Column(1).Element(Title).Text("2");
                        table.Cell().Row(10).Column(2).Element(Block).Text("Sản phẩm, tiêu chuẩn, chất lượng sản phẩm").Bold();
                        table.Cell().Row(10).Column(3).Element(Block).Text(" " + III_2_1_TT ?? "");
                        table.Cell().Row(10).Column(4).Element(Block).Text(" " + III_2_1_TĐ ?? "");
                        table.Cell().Row(11).Column(2).Element(Block).Text("a) Xem xét sự phù hợp về đặc tính, quy mô, công suất sản phẩm dự kiến được tạo ra theo phương án công nghệ được lựa chọn.");
                        table.Cell().Row(11).Column(3).Element(Block).Text(" " + III_2_2_TT ?? "");
                        table.Cell().Row(11).Column(4).Element(Block).Text(" " + III_2_2_TĐ ?? "");
                        table.Cell().Row(12).Column(2).Element(Block).Text("b) Xem xét sự phù hợp của việc áp dụng tiêu chuẩn chất lượng sản phẩm với quy định của pháp luật về chất lượng" +
                            " sản phẩm, hàng hóa; quy định của pháp luật về tiêu chuẩn, quy chuẩn kỹ thuật và pháp luật khác có liên quan.");
                        table.Cell().Row(12).Column(3).Element(Block).Text(" " + III_2_3_TT ?? "");
                        table.Cell().Row(12).Column(4).Element(Block).Text(" " + III_2_3_TĐ ?? "");
                        table.Cell().RowSpan(3).Row(13).Column(1).Element(Title).Text("3");
                        table.Cell().Row(13).Column(2).Element(Block).Text("Xem xét sự phù họp, khả năng đáp ứng nguyên liệu, nhiên liệu, vật liệu cho việc vận hành công nghệ, máy móc, thiết bị").Bold();
                        table.Cell().Row(13).Column(3).Element(Block).Text(" " + III_3_1_TT ?? "");
                        table.Cell().Row(13).Column(4).Element(Block).Text(" " + III_3_1_TĐ ?? "");
                        table.Cell().Row(14).Column(2).Element(Title).Text("- Khả năng khai thác, vận chuyển, lưu giữ nguyên, nhiên, vật liệu cho việc vận hành công nghệ, máy móc, thiết bị.");
                        table.Cell().Row(14).Column(3).Element(Block).Text(" " + III_3_2_TT ?? "");
                        table.Cell().Row(14).Column(4).Element(Block).Text(" " + III_3_2_TĐ ?? "");

                        table.Cell().Row(15).Column(2).Element(Block).Text("- Chủng loại, khối lượng, giá trị nguyên, nhiên, vật liệu phải nhập ngoại hoặc sử dụng nguyên" +
                            " liệu tại địa phương hoặc nguyên vật liệu trong nước phục vụ sản xuât. Khả năng sử dụng nguyên, nhiên, vật liệu ít gây ô nhiễm môi trường.");
                        table.Cell().Row(15).Column(3).Element(Block).Text(" " + III_3_3_TT ?? "");
                        table.Cell().Row(15).Column(4).Element(Block).Text(" " + III_3_3_TĐ ?? "");

                        table.Cell().Row(16).Column(1).Element(Title).Text("4").Bold();
                        table.Cell().Row(16).Column(2).Element(Block).Text("Chương trình đào tạo, hỗ trợ kỹ thuật để vận hành dây chuyền công nghệ, máy móc, thiết bị").Bold();
                        table.Cell().Row(16).Column(3).Element(Block).Text(" " + III_4_TT ?? "");
                        table.Cell().Row(16).Column(4).Element(Block).Text(" " + III_4_TĐ ?? "");

                        table.Cell().Row(17).Column(1).Element(Title).Text("5").Bold();
                        table.Cell().Row(17).Column(2).Element(Block).Text("Chi phí đầu tư cho công nghệ, máy móc, thiết bị, đào tạo, hỗ trợ kỹ thuật").Bold();
                        table.Cell().Row(17).Column(3).Element(Block).Text(" " + III_5_TT ?? "");
                        table.Cell().Row(17).Column(4).Element(Block).Text(" " + III_5_TĐ ?? "");

                        table.Cell().RowSpan(4).Row(18).Column(1).Element(Title).Text("6").Bold();
                        table.Cell().Row(18).Column(2).Element(Block).Text("Những vấn đề khác có liên quan (nếu có)").Bold();
                        table.Cell().Row(18).Column(3).Element(Block).Text(" " + III_6_1_TT ?? "");
                        table.Cell().Row(18).Column(4).Element(Block).Text(" " + III_6_1_TĐ ?? "");

                        table.Cell().Row(19).Column(2).Element(Block).Text("- Hiệu quả của công nghệ đối với sự phát triển của địa phương, ngành (góp phần đổi mới" +
                            " công nghệ, đổi mới sản phẩm, gia tăng giá trị của sản phâm, tạo ra sản phẩm chủ lực của địa phương, giúp nâng cao trình độ công nghệ sản xuất của ngành):");
                        table.Cell().Row(19).Column(3).Element(Block).Text(" " + III_6_2_TT ?? "");
                        table.Cell().Row(19).Column(4).Element(Block).Text(" " + III_6_2_TĐ ?? "");

                        table.Cell().Row(20).Column(2).Element(Block).Text("- Đánh giá tác động của công nghệ đến môi trường: tự nhiên, kinh tế - xã hội, sức khỏe cộng đồng:");
                        table.Cell().Row(20).Column(3).Element(Block).Text(" " + III_6_3_TT ?? "");
                        table.Cell().Row(20).Column(4).Element(Block).Text(" " + III_6_3_TĐ ?? "");

                        table.Cell().Row(21).Column(2).Element(Block).Text(" - Các vấn đề khác:");
                        table.Cell().Row(21).Column(3).Element(Block).Text(" " + III_6_4_TT ?? "");
                        table.Cell().Row(21).Column(4).Element(Block).Text(" " + III_6_4_TĐ ?? "");
                    });

                    column.Item().PaddingTop(5).PaddingLeft(25).AlignLeft().Text("IV. Ý KIẾN NHẬN XÉT, KIẾN NGHỊ CỦA NGƯỜI THẨM ĐỊNH").Bold().FontSize(12);
                    column.Item().PaddingTop(5).PaddingLeft(25).AlignLeft().Text($"{IV_Y_KIEN}").FontSize(14);

                    column.Item().PaddingTop(5).PaddingRight(70).AlignRight().Text($"ngày {ngayKy}, tháng {thangKy}, năm {namKy}").Italic().FontSize(12);
                    column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text("NGƯỜI THẨM ĐỊNH").Bold().FontSize(12);
                    column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text("             (Ký, ghi rõ họ và tên)  ").Italic().FontSize(12);
                    //column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text($"{IV_CHU_KY}").Bold().FontSize(14);
                    column.Item().PaddingTop(5).PaddingRight(70).AlignRight().Text($"{IV_NGUOI_KY}").Bold().FontSize(14);

                    column.Item().PaddingTop(5).PaddingLeft(25).AlignLeft().Text("V. Ý KIẾN KÉT LUẬN CỦA THỦ TRƯỞNG ĐƠN VỊ THẨM ĐỊNH").Bold().FontSize(12);
                    column.Item().PaddingTop(5).PaddingLeft(25).AlignLeft().Text($"{V_Y_KIEN}").FontSize(14);

                    column.Item().PaddingTop(5).PaddingRight(70).AlignRight().Text($"                                                                                                                        ngày {ngayKy}, tháng {thangKy}, năm {namKy}").Italic().FontSize(12);
                    column.Item().PaddingTop(1).PaddingRight(40).AlignRight().Text("THỦ TRƯỞNG ĐƠN VỊ THẨM ĐỊNH").Bold().FontSize(12);
                    column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text("             (Ký, ghi rõ họ và tên)  ").Italic().FontSize(12);
                    //column.Item().PaddingTop(1).PaddingRight(70).AlignRight().Text($"{V_CHU_KY}").Bold().FontSize(14);
                    column.Item().PaddingTop(5).PaddingRight(70).AlignRight().Text($"{V_NGUOI_KY}").Bold().FontSize(14);
                  
                });


                page.Footer()
               .AlignCenter()
               .Text(x =>
               {
                   x.CurrentPageNumber();
               });
            });
        }).GeneratePdf(path);
        return path;
    }

    public string XuatMau03TT9(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
        .Create(container =>
        {
            #region Bien
            var thu = "";
            var ngay = "";
            var thang = "";
            var nam = "";

            var DADT = "";

            var I_1 = "";
            var I_2 = "";
            var I_3 = "";
            var I_4_so_dien_thoai = "";
            var I_4_email = "";

            //b?ng
            //dòng 1
            var II_1_1_co = false;
            var II_1_1_khong = false;
            var II_1_1_ghi_chu = "";

            //dòng 2
            var II_1_2_co = false;
            var II_1_2_khong = false;
            var II_1_2_ghi_chu = "";

            //dòng 3
            var II_1_3_co = false;
            var II_1_3_khong = false;
            var II_1_3_ghi_chu = "";

            //dòng 4
            var II_1_4_co = false;
            var II_1_4_khong = false;
            var II_1_4_ghi_chu = "";

            //dòng 5
            var II_1_5_co = false;
            var II_1_5_khong = false;
            var II_1_5_ghi_chu = "";

            //dòng 6
            var II_1_6_co = false;
            var II_1_6_khong = false;
            var II_1_6_ghi_chu = "";

            //dòng 7
            var II_1_7_co = false;
            var II_1_7_khong = false;
            var II_1_7_ghi_chu = "";

            //dòng 8
            var II_1_8_co = false;
            var II_1_8_khong = false;
            var II_1_8_ghi_chu = "";
            //
            var II_2_1 = "";
            var II_2_2_a_1 = "";
            var II_2_2_a_2 = "";
            var II_2_2_a_3 = "";
            var II_2_2_a_4 = "";
            var II_2_2_a_5 = "";
            var II_2_2_a_6 = "";
            var II_2_2_b_1 = "";
            var II_2_2_b_2 = "";
            var II_2_3 = "";
            var II_2_4 = "";
            var II_2_5 = "";
            var II_2_6 = "";
            var II_2_7 = "";
            var II_2_8 = "";
            var II_2_9_1 = "";
            var II_2_9_2 = "";
            var II_2_9_3 = "";
            var III = "";
            var chuKy = "";
            var hoVaTen = "";
            var ngayKy = "";
            var thangKy = "";
            var namKy = "";

            List<WorkflowStep> steps = workflow.WorkflowSteps;
            dynamic? step1;
            dynamic? step2;
            dynamic? step3;
            dynamic? step4;

            foreach (WorkflowStep workflowStep in steps)
            {
                if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                {
                    step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step1 != null)
                    {
                        dynamic? data1 = step1.form.data;
                        I_1 = data1.TenToChuc;
                        I_2 = data1.NoiCongTac;
                        I_3 = data1.ChuyenMon;
                        I_4_so_dien_thoai = data1.SoDienThoai;
                        I_4_email = data1.Email;
                    }

                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                {
                    step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step2 != null)
                    {
                        dynamic? data1 = step2.form.data;

                        int item_index = 1;
                        foreach (var item in data1.NoiDung)
                        {
                            bool yesOrNo = item.yesOrNo;
                            if (item_index == 1)
                            {
                                if (yesOrNo)
                                {
                                    II_1_1_co = true;
                                }
                                else
                                {
                                    II_1_1_khong = true;
                                }
                                II_1_1_ghi_chu = item.description;
                            }
                            else if (item_index == 2)
                            {
                                if (yesOrNo)
                                {
                                    II_1_2_co = true;
                                }
                                else
                                {
                                    II_1_2_khong = true;
                                }
                                II_1_2_ghi_chu = item.description;
                            }
                            else if (item_index == 3)
                            {
                                if (yesOrNo)
                                {
                                    II_1_3_co = true;
                                }
                                else
                                {
                                    II_1_3_khong = true;
                                }
                                II_1_3_ghi_chu = item.description;
                            }
                            else if (item_index == 4)
                            {
                                if (yesOrNo)
                                {
                                    II_1_4_co = true;
                                }
                                else
                                {
                                    II_1_4_khong = true;
                                }
                                II_1_4_ghi_chu = item.description;
                            }
                            else if (item_index == 5)
                            {
                                if (yesOrNo)
                                {
                                    II_1_5_co = true;
                                }
                                else
                                {
                                    II_1_5_khong = true;
                                }
                                II_1_5_ghi_chu = item.description;
                            }
                            else if (item_index == 6)
                            {
                                if (yesOrNo)
                                {
                                    II_1_6_co = true;
                                }
                                else
                                {
                                    II_1_6_khong = true;
                                }
                                II_1_6_ghi_chu = item.description;
                            }
                            else if (item_index == 7)
                            {
                                if (yesOrNo)
                                {
                                    II_1_7_co = true;
                                }
                                else
                                {
                                    II_1_7_khong = false;
                                }
                                II_1_7_ghi_chu = item.description;
                            }
                            else if (item_index == 8)
                            {
                                if (yesOrNo)
                                {
                                    II_1_8_co = true;
                                }
                                else
                                {
                                    II_1_8_khong = true;
                                }
                                II_1_8_ghi_chu = item.description;
                            }
                            else
                            {
                                break;
                            }
                            item_index++;
                        }
                    }
                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                {
                    step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step3 != null)
                    {
                        dynamic? data3 = step3.form.data.YKien;
                        II_2_1 = data3.d1;
                        II_2_2_a_1 = data3.d2.a.a1;
                        II_2_2_a_2 = data3.d2.a.a2;
                        II_2_2_a_3 = data3.d2.a.a3;
                        II_2_2_a_4 = data3.d2.a.a4;
                        II_2_2_a_5 = data3.d2.a.a5;
                        II_2_2_a_6 = data3.d2.a.a6;
                        //
                        II_2_2_b_1 = data3.d2.b.b1;
                        II_2_2_b_2 = data3.d2.b.b2;
                        //
                        II_2_3 = data3.d3;
                        II_2_4 = data3.d4;
                        II_2_5 = data3.d5;
                        II_2_6 = data3.d6;
                        II_2_7 = data3.d7;
                        II_2_8 = data3.d8;
                        //
                        II_2_9_1 = data3.d9.a;
                        II_2_9_2 = data3.d9.b;
                        II_2_9_3 = data3.d9.c;
                    }

                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                {
                    step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step4 != null)
                    {
                        dynamic? data4 = step4.form.data;
                        chuKy = data4.KyTen.MaChuKy ?? "";
                        III = data4.KienNghi;
                        if (data4.KyTen != null)
                        {
                            string thoiGian = data4.KyTen.KyNgay.ToString();
                            string[] partsFull = thoiGian.Split(' ');
                            string partThoiGian = partsFull[0];
                            string[] part = partThoiGian.Split('/');
                            ngayKy = part[0];
                            thangKy = part[1];
                            namKy = part[2];
                            hoVaTen = data4.KyTen.NguoiKy;
                        }
                    }

                }
            }
            #endregion


            container.Page(page =>
            {
                page.Size(PageSizes.A4);
                page.Margin(2, Unit.Centimetre);
                page.PageColor(QuestPDF.Helpers.Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                page.Header()
                    .Column(column =>
                    {

                    });
                page.Content()
                .Column(column =>
                {
                    column.Item().AlignRight().Text("Mẫu số 3").FontSize(10);
                    column.Item().AlignRight().Text("09/2020/TT-BKHCN").Light().FontSize(10);
                    column.Item().PaddingTop(10).AlignCenter().Text("CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold().FontSize(15);
                    column.Item().AlignCenter().Text("Độc lập - Tự do - Hạnh phúc").Bold().FontSize(15);
                    column.Item().AlignCenter().Text("________________________").Bold().FontSize(15);
                    column.Item().AlignCenter().Text(thu + ", ngày " + ngay + ", tháng " + thang + ", năm 20" + nam).Light().FontSize(14);
                    //header

                    column.Item().PaddingTop(35).AlignCenter().Text("PHIẾU Ý KIẾN CỦA TỔ CHỨC, CHUYÊN GIA TƯ VẤN ĐỘC LẬP").Bold().FontSize(15);
                    column.Item().AlignCenter().Text("TRONG GIAI ĐOẠN XEM XÉT QUYẾT ĐỊNH CHỦ TRƯƠNG ĐẦU TƯ").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignCenter().Text("Về công nghệ của Dự án đầu tư (DAĐT) " + DADT).Italic().FontSize(14);
                    column.Item().PaddingTop(5).AlignCenter().Text("_______________").FontSize(14);

                    column.Item().PaddingTop(5).AlignLeft().Text("I. CÁC THÔNG TIN CHUNG").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("1. Tên tổ chức hoặc tên chuyên gia (chức danh, học vị):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- " + I_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2. Nơi công tác của chuyên gia (nếu có)/Địa chỉ của tổ chức/chuyên gia:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- " + I_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("3. Lĩnh vực chuyên môn của chuyên gia").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- " + I_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                        });
                        table.Cell().Row(1).Column(1).Text("4. Số điện thoại: ").FontSize(14);
                        table.Cell().Row(1).Column(2).Text(I_4_so_dien_thoai).SemiBold().Bold().FontSize(14);
                        table.Cell().Row(1).Column(3).Text(" Email: ").FontSize(14);
                        table.Cell().Row(1).Column(4).Text(I_4_email).SemiBold().Bold().FontSize(14);

                    });

                    column.Item().PaddingTop(10).AlignLeft().Text("II.Ý KIẾN VỀ CÔNG NGHỆ CỦA DỰ ÁN").Bold().FontSize(14);
                    column.Item().PaddingTop(5).PaddingBottom(10).AlignLeft().Text("1. Rà soát việc đáp ứng đầy đủ các nội dung giải trình" +
                        " về sử dụng công nghệ trong hồ sơ DAĐT theo quy định tại khoản 1 Điều 16 Luật Chuyển giao công nghệ").SemiBold().FontSize(14);
                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.ConstantColumn(50);
                            columns.RelativeColumn();
                            columns.ConstantColumn(60);
                            columns.ConstantColumn(60);
                            columns.ConstantColumn(80);
                        });

                        //row 1
                        table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold();
                        table.Cell().Row(1).Column(2).Element(BlockHead).Text("NỘI DUNG GIẢI TRÌNH").Bold();
                        table.Cell().Row(1).Column(3).Element(BlockHead).Text("CÓ").Bold();
                        table.Cell().Row(1).Column(4).Element(BlockHead).Text("KHÔNG").Bold();
                        table.Cell().Row(1).Column(5).Element(BlockHead).Text("GHI CHÚ").Bold();

                        //row 2
                        table.Cell().Row(2).Column(1).Element(BlockTT).Text("1");
                        table.Cell().Row(2).Column(2).Element(BlockItem).Text("Phân tích và lựa chọn phương án công nghệ");
                        table.Cell().Row(2).Column(3).Element(BlockTT).Text((II_1_1_co) ? "X" : "");
                        table.Cell().Row(2).Column(4).Element(BlockTT).Text((II_1_1_khong) ? "X" : "");
                        table.Cell().Row(2).Column(5).Element(BlockItem).Text(II_1_1_ghi_chu);

                        //row 3
                        table.Cell().Row(3).Column(1).Element(BlockTT).Text("2").Bold();
                        table.Cell().Row(3).Column(2).Element(BlockItem).Text("Tên, xuất xứ, sơ đồ quy trình công nghệ");
                        table.Cell().Row(3).Column(3).Element(BlockTT).Text((II_1_2_co) ? "X" : "");
                        table.Cell().Row(3).Column(4).Element(BlockTT).Text((II_1_2_khong) ? "X" : "");
                        table.Cell().Row(3).Column(5).Element(BlockItem).Text(II_1_2_ghi_chu);

                        //row 4
                        table.Cell().Row(4).Column(1).Element(BlockTT).Text("3");
                        table.Cell().Row(4).Column(2).Element(BlockItem).Text("Dự kiến danh mục, tình trạng, thông số kỹ thuật của máy móc, thiết bị chính trong dây chuyền công nghệ thuộc phương án công nghệ lựa chọn");
                        table.Cell().Row(4).Column(3).Element(BlockTT).Text((II_1_3_co) ? "X" : "");
                        table.Cell().Row(4).Column(4).Element(BlockTT).Text((II_1_3_khong) ? "X" : "");
                        table.Cell().Row(4).Column(5).Element(BlockItem).Text(II_1_3_ghi_chu);

                        //row 5
                        table.Cell().Row(5).Column(1).Element(BlockTT).Text("4");
                        table.Cell().Row(5).Column(2).Element(BlockItem).Text("Tài liệu chứng minh công nghệ đã được kiểm chứng (nếu có)");
                        table.Cell().Row(5).Column(3).Element(BlockTT).Text((II_1_4_co) ? "X" : "");
                        table.Cell().Row(5).Column(4).Element(BlockTT).Text((II_1_4_khong) ? "X" : "");
                        table.Cell().Row(5).Column(5).Element(BlockItem).Text(II_1_4_ghi_chu);

                        //row 6
                        table.Cell().Row(6).Column(1).Element(BlockTT).Text("5");
                        table.Cell().Row(6).Column(2).Element(BlockItem).Text("Dự kiến kế hoạch đào tạo, hỗ trợ kỹ thuật để vận hành dây chuyền công nghệ (nếu có)");
                        table.Cell().Row(6).Column(3).Element(BlockTT).Text((II_1_5_co) ? "X" : "");
                        table.Cell().Row(6).Column(4).Element(BlockTT).Text((II_1_5_khong) ? "X" : "");
                        table.Cell().Row(6).Column(5).Element(BlockItem).Text(II_1_5_ghi_chu);

                        //row 7
                        table.Cell().Row(7).Column(1).Element(BlockTT).Text("6");
                        table.Cell().Row(7).Column(2).Element(BlockItem).Text("Điều kiện sử dụng công nghệ(1)");
                        table.Cell().Row(7).Column(3).Element(BlockTT).Text((II_1_6_co) ? "X" : "");
                        table.Cell().Row(7).Column(4).Element(BlockTT).Text((II_1_6_khong) ? "X" : "");
                        table.Cell().Row(7).Column(5).Element(BlockItem).Text(II_1_6_ghi_chu);

                        //row 8
                        table.Cell().Row(8).Column(1).Element(BlockTT).Text("7");
                        table.Cell().Row(8).Column(2).Element(BlockItem).Text("Đánh giá sơ bộ tác động của công nghệ đến môi trường (nếu có)");
                        table.Cell().Row(8).Column(3).Element(BlockTT).Text((II_1_7_co) ? "X" : "");
                        table.Cell().Row(8).Column(4).Element(BlockTT).Text((II_1_7_khong) ? "X" : "");
                        table.Cell().Row(8).Column(5).Element(BlockItem).Text(II_1_7_ghi_chu);

                        //row 9
                        table.Cell().Row(9).Column(1).Element(BlockTT).Text("8");
                        table.Cell().Row(9).Column(2).Element(BlockItem).Text("Dự thảo hợp đồng chuyển giao công nghệ trong trường họp góp vốn bằng công nghệ");
                        table.Cell().Row(9).Column(3).Element(BlockTT).Text((II_1_8_co) ? "X" : "");
                        table.Cell().Row(9).Column(4).Element(BlockTT).Text((II_1_8_khong) ? "X" : "");
                        table.Cell().Row(9).Column(5).Element(BlockItem).Text(II_1_8_ghi_chu);
                    });
                    static IContainer BlockTT(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .AlignCenter()
                            .AlignMiddle();
                    }
                    static IContainer BlockHead(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .Padding(5)
                            .AlignTop()
                            .AlignCenter()
                            .AlignMiddle();
                    }
                    static IContainer BlockItem(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .AlignLeft()
                            .PaddingLeft(5)
                            .AlignMiddle();
                    }


                    column.Item().PaddingTop(10).AlignLeft().Text("2. Ý kiến về các nội dung cụ thể").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.1. Công nghệ lựa chọn trong DAĐT thuộc các Danh mục công nghệ theo quy định của Luật Chuyển giao công nghệ và Nghị định số 76/2018/NĐ-CP (công nghệ khuyến khích chuyển giao, công nghệ hạn chế chuyển giao, công nghệ cấm chuyên giao):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.2. Sự phù hợp của phương án công nghệ được lựa chọn").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("a) Về công nghệ: Xem xét phương án lựa chọn công nghệ nếu trong hồ sơ DAĐT, cụ thể:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Phân tích, so sánh ưu, nhược điểm của từng phương án công nghệ nêu trong hồ sơ DAĐT để nhận xét về phương án công nghệ được chọn:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Sự hoàn thiện của công nghệ được lựa chọn:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Công nghệ thuộc loại tiên tiến/hiện đại hoặc trung bình, lạc hậu:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Tính mới của công nghệ:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Sự phù họp của phương án công nghệ được lựa chọn với mục tiêu, quy mô, công suất của dự án:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_5).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Sự phù hợp của phương án công nghệ được lựa chọn với các yêu cầu, quy định của quy chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thẩm quyền (nếu có):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_6).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("b) về máy móc, thiết bị chính trong dây chuyền công nghệ thuộc phương án công nghệ lựa chọn:").FontSize(14);

                    column.Item().PaddingTop(20).AlignLeft().Text("____________________").FontSize(14);
                    column.Item().PaddingTop(20).AlignLeft().Text("(1): Điều kiện sử dụng công nghệ là điều kiện chuyên ngành cho việc sử đụng công nghệ. Ví dụ: công nghệ bức xạ, hạt nhân trong lĩnh vực y tế thì để sử dụng công nghệ phải đáp ứng điều kiện về cơ sở hạ tầng, về an toàn, về chất lượng nguồn nhân lực trong quá trinh sử dụng công nghệ đó.").FontSize(9);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Máy móc, thiết bị chính có tính năng, thông số kỹ thuật, công suất, chất lượng phù họp với phương án công nghệ lựa chọn trong dự án không?").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_b_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Máy móc, thiết bị chính trong dây chuyền công nghệ có phù hợp với các yêu câu, quy định của quy chuân kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thẩm quyền (nếu có):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_b_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.3. Về việc kiểm chứng sử dụng công nghệ tại các quôc gia phát triển (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.4. Về đào tạo, hỗ trợ kỹ thuật cho vận hành dây chuyền công nghệ của DAĐT (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.5. Về việc đáp ứng các điêu kiện sử dụng công nghệ").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_5).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.6. Về sơ bộ tác động ảnh hưởng của công nghệ đến môi trường").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_6).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.7. Về dự thảo hợp đồng chuyển giao công nghệ (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_7).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.8. Về đáp ứng các tiêu chí, tiêu chuẩn theo quy định của pháp luật về công nghệ cao (đối với DAĐT trong khu công nghệ cao)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_8).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.9. Những vấn đề khác có liên quan (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét, đánh giá sơ bộ các lợi ích kinh tế - xã hội do DAĐT mang lại (khả năng tạo năng lực sản xuất mới, ngành nghề mới, sản phẩm mới, mở rộng thị trường, tạo việc làm cho người lao động, khả năng sử dụng phụ tùng, linh kiện, nguyên liệu sản xuất trong nước, đóng góp cho ngân sách nhà nước, lợi ích kinh tế của chủ đầu tư...):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét, đánh giá sơ bộ hiệu quả của công nghệ đối với sự phát triển của địa phương, ngành (góp phần đổi mới công nghệ sản xuất của địa phương, gia tăng giá trị sản phẩm, tạo sản phẩm chủ lực của địa phương; nâng cao trình độ công nghệ sản xuất của ngành):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_2).SemiBold().Italic().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Các vấn đề khác:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("III. KIẾN NGHỊ").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + III).SemiBold().FontSize(14);
                    //
                    column.Item().PaddingTop(20).AlignRight().Text("CHUYÊN GIA, ĐẠI DIỆN TỔ CHỨC").Bold().FontSize(15);
                    column.Item().PaddingTop(1).AlignRight().PaddingRight(30).Text("Ngày " + ngayKy + ", Tháng " + thangKy + ", Năm " + namKy).Italic().FontSize(14);
                    column.Item().PaddingTop(1).AlignRight().PaddingRight(50).Text("(Ký, ghi rõ họ và tên)").Italic().FontSize(14);
                    //column.Item().PaddingTop(10).PaddingRight(60).AlignRight().Text(chuKy).Bold().FontSize(14);
                    column.Item().PaddingTop(10).PaddingRight(60).AlignRight().Text(hoVaTen).Bold().FontSize(14);
                });


                //   page.Footer()
                //  .AlignCenter()
                //  .Text(x =>
                //  {
                //      x.Span("Page ");
                //      x.CurrentPageNumber();
                //   });
            });
        }).GeneratePdf(path);


        return path;
    }

    public string XuatMau04TT9(string path, Workflow workflow)
    {
        var thu = "";
        var ngay = "";
        var thang = "";
        var nam = "";

        QuestPDF.Fluent.Document
        .Create(container =>
        {
            var DADT = "";
            var I_1 = "";
            var I_2 = "";
            var I_3 = "";
            var I_4_so_dien_thoai = "030621158";
            var I_4_email = "";

            //bảng
            //dòng 1
            var II_1_1_co = false;
            var II_1_1_khong = false;
            var II_1_1_ghi_chu = "";

            //dòng 2
            var II_1_2_co = false;
            var II_1_2_khong = false;
            var II_1_2_ghi_chu = "";

            //dòng 3
            var II_1_3_co = false;
            var II_1_3_khong = false;
            var II_1_3_ghi_chu = "";

            //dòng 4
            var II_1_4_co = false;
            var II_1_4_khong = false;
            var II_1_4_ghi_chu = "";

            //dòng 5
            var II_1_5_co = false;
            var II_1_5_khong = false;
            var II_1_5_ghi_chu = "";

            //dòng 6
            var II_1_6_co = false;
            var II_1_6_khong = false;
            var II_1_6_ghi_chu = "";
            //
            var II_2_1 = "";
            var II_2_2 = "";
            var II_2_3_1 = "";
            var II_2_3_2 = "";
            var II_2_3_3 = "";
            var II_2_3_4 = "";
            var II_2_4_1 = "";
            var II_2_4_2 = "";
            var II_2_4_3 = "";
            var II_2_4_4 = "";
            var II_2_4_5 = "";
            var II_2_4_6 = "";
            var II_2_5_1 = "";
            var II_2_5_2 = "";
            var II_2_5_3 = "";
            var II_2_6_1 = "";
            var II_2_6_2 = "";
            var II_2_6_3 = "";
            var II_2_6_4 = "";
            var II_2_7 = "";
            var II_2_8 = "";
            var II_2_9_1 = "";
            var II_2_9_2 = "";
            var II_2_9_3 = "";
            var III = "";

            var chuKy = "";
            var hoVaTen = "";
            var ngayKy = "";
            var thangKy = "";
            var namKy = "";

            List<WorkflowStep> steps = workflow.WorkflowSteps;
            dynamic? step1;
            dynamic? step2;
            dynamic? step3;
            dynamic? step4;

            foreach (WorkflowStep workflowStep in steps)
            {
                if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                {
                    step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step1 != null)
                    {
                        dynamic? data1 = step1.form.data;
                        I_1 = data1.TenToChuc;
                        I_2 = data1.NoiCongTac;
                        I_3 = data1.ChuyenMon;
                        I_4_so_dien_thoai = data1.SoDienThoai;
                        I_4_email = data1.Email;
                    }
                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                {
                    step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step2 != null)
                    {
                        dynamic? data1 = step2.form.data;

                        int item_index = 1;
                        foreach (var item in data1.NoiDung)
                        {
                            bool yesOrNo = item.yesOrNo;
                            if (item_index == 1)
                            {
                                if (yesOrNo)
                                {
                                    II_1_1_co = true;
                                }
                                else
                                {
                                    II_1_1_khong = true;
                                }
                                II_1_1_ghi_chu = item.description;
                            }
                            else if (item_index == 2)
                            {
                                if (yesOrNo)
                                {
                                    II_1_2_co = true;
                                }
                                else
                                {
                                    II_1_2_khong = true;
                                }
                                II_1_2_ghi_chu = item.description;
                            }
                            else if (item_index == 3)
                            {
                                if (yesOrNo)
                                {
                                    II_1_3_co = true;
                                }
                                else
                                {
                                    II_1_3_khong = true;
                                }
                                II_1_3_ghi_chu = item.description;
                            }
                            else if (item_index == 4)
                            {
                                if (yesOrNo)
                                {
                                    II_1_4_co = true;
                                }
                                else
                                {
                                    II_1_4_khong = true;
                                }
                                II_1_4_ghi_chu = item.description;
                            }
                            else if (item_index == 5)
                            {
                                if (yesOrNo)
                                {
                                    II_1_5_co = true;
                                }
                                else
                                {
                                    II_1_5_khong = true;
                                }
                                II_1_5_ghi_chu = item.description;
                            }
                            else if (item_index == 6)
                            {
                                if (yesOrNo)
                                {
                                    II_1_6_co = true;
                                }
                                else
                                {
                                    II_1_6_khong = true;
                                }
                                II_1_6_ghi_chu = item.description;
                            }
                            else
                            {
                                break;
                            }
                            item_index++;
                        }
                    }
                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                {
                    step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step3 != null)
                    {
                        dynamic? data3 = step3.form.data.YKien;
                        II_2_1 = data3.d1;
                        II_2_2 = data3.d2;
                        II_2_3_1 = data3.d3.a;
                        II_2_3_2 = data3.d3.b;
                        II_2_3_3 = data3.d3.c;
                        II_2_3_4 = data3.d3.d;
                        //
                        II_2_4_1 = data3.d4.a;
                        II_2_4_2 = data3.d4.b;
                        II_2_4_3 = data3.d4.c;
                        II_2_4_4 = data3.d4.d.d1;
                        II_2_4_5 = data3.d4.d.d2;
                        II_2_4_6 = data3.d4.d.d3;
                        //
                        II_2_5_1 = data3.d5.a;
                        II_2_5_2 = data3.d5.b;
                        II_2_5_3 = data3.d5.c;
                        //
                        II_2_6_1 = data3.d5.a;
                        II_2_6_2 = data3.d5.b;
                        II_2_6_3 = data3.d5.c;
                        II_2_6_4 = data3.d5.d;
                        //
                        II_2_7 = data3.d7;
                        //
                        II_2_8 = data3.d8;
                        //
                        II_2_9_1 = data3.d9.a;
                        II_2_9_2 = data3.d9.b;
                        II_2_9_3 = data3.d9.c;
                    }

                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                {
                    step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step4 != null)
                    {
                        dynamic? data4 = step4.form.data;
                        III = data4.KienNghi;
                        chuKy = data4.KyTen.MaChuKy;
                        if (data4.KyTen != null)
                        {
                            string thoiGian = data4.KyTen.KyNgay.ToString();
                            string[] partsFull = thoiGian.Split(' ');
                            string partThoiGian = partsFull[0];
                            string[] part = partThoiGian.Split('/');
                            ngayKy = part[0];
                            thangKy = part[1];
                            namKy = part[2];
                            hoVaTen = data4.KyTen.NguoiKy;
                        }
                    }

                }
            }

            container.Page(page =>
            {
                page.Size(PageSizes.A4);
                page.Margin(2, Unit.Centimetre);
                page.PageColor(QuestPDF.Helpers.Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                page.Header()
                    .Column(column =>
                    {

                    });
                page.Content()
                .Column(column =>
                {
                    column.Item().AlignRight().Text("Mẫu số 4").FontSize(10);
                    column.Item().AlignRight().Text("09/2020/TT-BKHCN").Light().FontSize(10);
                    column.Item().PaddingTop(10).AlignCenter().Text("CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold().FontSize(15);
                    column.Item().AlignCenter().Text("Độc lập - Tự do - Hạnh phúc").Bold().FontSize(15);
                    column.Item().AlignCenter().Text("________________________").Bold().FontSize(15);
                    column.Item().AlignCenter().Text(thu + ", ngày " + ngay + ",tháng " + thang + ",năm 20" + nam).Light().FontSize(14);
                    //header

                    column.Item().PaddingTop(35).AlignCenter().Text("PHIẾU Ý KIẾN CỦA TỔ CHỨC, CHUYÊN GIA TƯ VẤN ĐỘC LẬP").Bold().FontSize(15);
                    column.Item().AlignCenter().Text("TRONG GIAI ĐOẠN XEM XÉT QUYẾT ĐỊNH ĐẦU TƯ").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignCenter().Text("về công nghệ của dự án đầu tư (DAĐT): " + DADT).Italic().FontSize(14);
                    column.Item().PaddingTop(5).AlignCenter().Text("_______________").FontSize(14);

                    column.Item().PaddingTop(5).AlignLeft().Text("I. CÁC THÔNG TIN CHUNG").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("1. Tên tổ chức hoặc tên chuyên gia (chức danh, học vị):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- " + I_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2. Nơi công tác của chuyên gia (nếu có)/Địa chỉ của tổ chức/chuyên gia:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- " + I_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("3. Lĩnh vực chuyên môn của chuyên gia:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- " + I_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                        });
                        table.Cell().Row(1).Column(1).Text("4. Số điện thoại: ").FontSize(14);
                        table.Cell().Row(1).Column(2).Text(I_4_so_dien_thoai).SemiBold().FontSize(14);
                        table.Cell().Row(1).Column(3).Text(" Email: ").FontSize(14);
                        table.Cell().Row(1).Column(4).Text(I_4_email).SemiBold().FontSize(14);

                    });

                    column.Item().PaddingTop(10).AlignLeft().Text("II.Ý KIẾN VỀ CÔNG NGHỆ CỦA DỰ ÁN").Bold().FontSize(14);
                    column.Item().PaddingTop(5).PaddingBottom(10).AlignLeft().Text("1. Rà soát việc đáp ứng đầy đủ các nội dung giải trình về sử dụng " +
                        "công nghệ trong hồ sơ DAĐT theo quy định tại khoản 2 Điều 16 Luật Chuyển giao công nghệ").SemiBold().FontSize(14);
                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.ConstantColumn(50);
                            columns.RelativeColumn();
                            columns.ConstantColumn(50);
                            columns.ConstantColumn(60);
                            columns.ConstantColumn(80);
                        });

                        //row 1
                        table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold();
                        table.Cell().Row(1).Column(2).Element(BlockHead).Text("NỘI DUNG GIẢI TRÌNH").Bold();
                        table.Cell().Row(1).Column(3).Element(BlockHead).Text("CÓ").Bold();
                        table.Cell().Row(1).Column(4).Element(BlockHead).Text("KHÔNG").Bold();
                        table.Cell().Row(1).Column(5).Element(BlockHead).Text("GHI CHÚ").Bold();

                        //row 2
                        table.Cell().Row(2).Column(1).Element(BlockTT).Text("1");
                        table.Cell().Row(2).Column(2).Element(BlockItem).Text("Tên, xuất xứ, sơ đồ quy trình công nghệ");
                        table.Cell().Row(2).Column(3).Element(BlockTT).Text((II_1_1_co) ? "X" : "");
                        table.Cell().Row(2).Column(4).Element(BlockTT).Text((II_1_1_khong) ? "X" : "");
                        table.Cell().Row(2).Column(5).Element(BlockItem).Text(II_1_1_ghi_chu);

                        //row 3
                        table.Cell().Row(3).Column(1).Element(BlockTT).Text("2");
                        table.Cell().Row(3).Column(2).Element(BlockItem).Text("Danh mục, tình trạng, thông số kỹ thuật của máy móc, thiết bị trong dây chuyền công nghệ");
                        table.Cell().Row(3).Column(3).Element(BlockTT).Text((II_1_2_co) ? "X" : "");
                        table.Cell().Row(3).Column(4).Element(BlockTT).Text((II_1_2_khong) ? "X" : "");
                        table.Cell().Row(3).Column(5).Element(BlockItem).Text(II_1_2_ghi_chu);

                        //row 4
                        table.Cell().Row(4).Column(1).Element(BlockTT).Text("3");
                        table.Cell().Row(4).Column(2).Element(BlockItem).Text("Sản phẩm, tiêu chuẩn, chất lượng sản phẩm");
                        table.Cell().Row(4).Column(3).Element(BlockTT).Text((II_1_3_co) ? "X" : "");
                        table.Cell().Row(4).Column(4).Element(BlockTT).Text((II_1_3_khong) ? "X" : "");
                        table.Cell().Row(4).Column(5).Element(BlockItem).Text(II_1_3_ghi_chu);

                        //row 5
                        table.Cell().Row(5).Column(1).Element(BlockTT).Text("4");
                        table.Cell().Row(5).Column(2).Element(BlockItem).Text("Khả năng đáp ứng nguyên liệu, nhiên liệu, vật liệu cho dây chuyền công nghệ");
                        table.Cell().Row(5).Column(3).Element(BlockTT).Text((II_1_4_co) ? "X" : "");
                        table.Cell().Row(5).Column(4).Element(BlockTT).Text((II_1_4_khong) ? "X" : "");
                        table.Cell().Row(5).Column(5).Element(BlockItem).Text(II_1_4_ghi_chu);

                        //row 6
                        table.Cell().Row(6).Column(1).Element(BlockTT).Text("5");
                        table.Cell().Row(6).Column(2).Element(BlockItem).Text("Chương trình đào tạo, hỗ trợ kỹ thuật để vận hành dây chuyền công nghệ");
                        table.Cell().Row(6).Column(3).Element(BlockTT).Text((II_1_5_co) ? "X" : "");
                        table.Cell().Row(6).Column(4).Element(BlockTT).Text((II_1_5_khong) ? "X" : "");
                        table.Cell().Row(6).Column(5).Element(BlockItem).Text(II_1_5_ghi_chu);

                        //row 7
                        table.Cell().Row(7).Column(1).Element(BlockTT).Text("6");
                        table.Cell().Row(7).Column(2).Element(BlockItem).Text("Chi phí đầu tư cho công nghệ, máy móc, thiết bị, đào tạo, hỗ trợ kỹ thuật");
                        table.Cell().Row(7).Column(3).Element(BlockTT).Text((II_1_6_co) ? "X" : "");
                        table.Cell().Row(7).Column(4).Element(BlockTT).Text((II_1_6_khong) ? "X" : "");
                        table.Cell().Row(7).Column(5).Element(BlockItem).Text(II_1_6_ghi_chu);
                    });
                    static IContainer BlockTT(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .AlignCenter()
                            .AlignMiddle();
                    }
                    static IContainer BlockHead(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .Padding(5)
                            .AlignTop()
                            .AlignCenter()
                            .AlignMiddle();
                    }
                    static IContainer BlockItem(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .AlignLeft()
                            .PaddingLeft(5)
                            .AlignMiddle();
                    }


                    column.Item().PaddingTop(10).AlignLeft().Text("2. Ý kiến về các nội dung cụ thể").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.1. Xem xét và cho ý kiến công nghệ DAĐT thuộc các Danh mục công nghệ theo quy định của Luật Chuyển giao công" +
                                " nghệ và Nghị định số 76/2018/NĐ-CP (công nghệ khuyến khích chuyển giao, công nghệ hạn chế chuyển giao, công nghệ câm chuyển giao)")
                                .FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.2. Sự phù hợp của công nghệ, máy móc, thiết bị với phương án được lựa chọn trong giai đoạn quyết định chủ trương đầu tư").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.3. Sự phù hợp của phương án công nghệ được lựa chọn với mục tiêu, quy mô, công suất của DAĐT").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét dây chuyền công nghệ bảo đảm sản xuất được các sản phẩm đã dự kiến cả về số lượng và chất lượng:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_3_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét dây chuyền công nghệ bảo đảm các tiêu chuẩn về tiết kiệm năng lượng, vệ sinh công nghiệp, an toàn lao động và vệ sinh môi trường:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_3_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét phương án lựa chọn công nghệ nêu trong hồ sơ DAĐT: phân tích, so sánh ưu nhược điểm của từng phương án và trên cơ sở xem xét tính hoàn thiện của công nghệ, mức độ tiên tiến của dây chuyền công nghệ, tính thích họp của công nghệ để nhận xét về phương án công nghệ được chọn:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_3_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Dự thảo Họp đồng chuyển giao công nghệ (nếu DAĐT có góp vốn bằng công nghệ):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_3_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.4. Sự phù họp của máy móc, thiết bị trong dây chuyền công nghệ").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Máy móc, thiết bị trong dây chuyền công nghệ bảo đảm có tính năng, chất lượng phù họp với yêu cầu của công nghệ nhằm tạo ra sản phẩm có chất lượng và số lượng như dự kiến:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_4_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Tính đồng bộ của máy móc, thiết bị trong dây chuyền công nghệ (danh mục các máy móc, thiết bị của DAĐT có khả năng thực hiện các công đoạn trong dây chuyền công nghệ, đáp ứng yêu cầu về số lượng, chất lượng các sản phẩm). Đối với các dự án đầu tư mà bên nước ngoài tham gia góp vốn bằng máy móc, thiết bị thì cần bảo đảm tính đồng bộ và phù họp với công nghệ:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_4_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Các đặc tính, tính năng kỹ thuật của máy móc, thiết bị; công suất của máy móc, thiết bị; tình trạng thiết bị (mới hay đã qua sử dụng); thời gian bảo hành:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_4_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Đối với dự án đầu tư có liệt kê danh sách máy móc, thiết bị, dây chuyền công nghệ đã qua sử dụng dự kiến nhập khẩu:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("+ Xem xét tình ữạng của máy móc, thiết bị, dây chuyền công nghệ (tuổi thiết bị, thời gian đã sử dụng, thời gian sử dụng còn lại,...):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_4_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("+ Nguồn gốc, xuất xứ của máy móc, thiết bị, dây chuyền công nghệ:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_4_5).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("+ Xem xét mức độ phù họp của các tiêu chuẩn sản xuất máy móc, thiết bị, dây chuyền công nghệ so với quy định của Quy chuẩn kỹ thuật Quốc gia (QCVN) hoặc Tiêu chuẩn Quốc gia (TCVN) của Việt Nam hoặc Tiêu chuẩn của các nước G7 về an toàn, tiết kiệm năng lượng, bảo vệ môi trường và các quy định khác của pháp luật có liên quan:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_4_6).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.5. Sản phẩm, thị trường sản phẩm").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Tiêu chuẩn, chất lượng sản phẩm:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_5_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Dự báo nhu cầu của thị trường (trong nước, khu vực và thế giới); dự báo thị phân của sản phâm, tỷ lệ xuât khâu:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_5_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Khả năng cạnh tranh của sản phẩm (về chất lượng, mẫu mã, giá thành):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_5_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.6. Sự phù họp, khả năng đáp ứng nguyên liệu, nhiên liệu, vật liệu cho việc vận hành công nghệ, máy móc, thiêt bị").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Khả năng khai thác, vận chuyển, lưu giữ nguyên vật liệu để cung cấp cho dự án:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_6_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Chủng loại, khối lượng, giá trị các loại linh kiện, phụ tùng hoặc bán thành phẩm nhập ngoại để gia công, lắp ráp, sản suất ra sản phẩm:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_6_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Chủng loại, khối lượng, giá trị nguyên, nhiên, vật liệu phải nhập ngoại hoặc sử dụng nguyên liệu trong nước phục vụ sản xuất:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_6_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Khả năng sử dụng vật liệu ít gây ô nhiễm môi trường:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_6_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.7. Chương hình đào tạo, hỗ ừợ kỹ thuật để vận hành dây chuyền công nghệ, máy móc, thiết bị").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_7).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.8. Chi phí đầu tư cho công nghệ, máy móc, thiết bị, đào tạo, hỗ trợ kỹ thuật").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_8).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2.9. Những vấn đề khác có liên quan (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Hiệu quả của công nghệ đối với sự phát triển của địa phương, ngành (góp phần đổi mới công nghệ, đổi mới sản phẩm, gia tăng giá trị của sản phẩm, tạo ra sản phẩm chủ lực của địa phương, giúp nâng cao trình độ công nghệ sản xuất của ngành):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Đánh giá tác động của công nghệ đến môi trường: tự nhiên, kinh tế - xã hội, sức khỏe cộng đồng:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Các vấn đề khác:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("III. KIẾN NGHỊ").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + III).SemiBold().FontSize(14);
                    //
                    column.Item().PaddingTop(20).PaddingRight(50).AlignRight().Text("CHUYÊN GIA").Bold().FontSize(15);
                    column.Item().PaddingTop(1).AlignRight().PaddingRight(15).Text("Ngày " + ngayKy + ", Tháng " + thangKy + ", Năm " + namKy).Italic().FontSize(14);
                    column.Item().PaddingTop(1).AlignRight().PaddingRight(35).Text("(Ký, ghi rõ họ và tên)").Italic().FontSize(14);
                    //column.Item().PaddingTop(10).PaddingRight(55).AlignRight().Text(chuKy).Bold().FontSize(14);
                    column.Item().PaddingTop(10).PaddingRight(55).AlignRight().Text(hoVaTen).Bold().FontSize(14);
                });


                //   page.Footer()
                //  .AlignCenter()
                //  .Text(x =>
                //  {
                //      x.Span("Page ");
                //      x.CurrentPageNumber();
                //   });
            });
        }).GeneratePdf(path);
        return path;
    }

    public string XuatMau05TT9(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
    .Create(container =>
    {
        var thu = "";
        var ngay = "";
        var thang = "";
        var nam = "";

        var I_1 = "";
        var I_2 = "";
        var I_3 = "";
        //bảng
        var I_4_chu_tich = false;
        var I_4_pho_chu_tich = false;
        var I_4_uy_vien_phan_bien = false;
        var I_4_uy_vien_hoi_dong = false;
        //
        var I_5 = "";
        var I_6 = "";

        //bảng
        //dòng 1
        var II_1_1_co = false;
        var II_1_1_khong = false;
        var II_1_1_ghi_chu = "";

        //dòng 2
        var II_1_2_co = false;
        var II_1_2_khong = false;
        var II_1_2_ghi_chu = "";

        //dòng 3
        var II_1_3_co = false;
        var II_1_3_khong = false;
        var II_1_3_ghi_chu = "";

        //dòng 4
        var II_1_4_co = false;
        var II_1_4_khong = false;
        var II_1_4_ghi_chu = "";

        //dòng 5
        var II_1_5_co = false;
        var II_1_5_khong = false;
        var II_1_5_ghi_chu = "";

        //dòng 6
        var II_1_6_co = false;
        var II_1_6_khong = false;
        var II_1_6_ghi_chu = "";

        //dòng 7
        var II_1_7_co = false;
        var II_1_7_khong = false;
        var II_1_7_ghi_chu = "";

        //dòng 8
        var II_1_8_co = false;
        var II_1_8_khong = false;
        var II_1_8_ghi_chu = "";

        //
        var II_2_1 = "";
        var II_2_2_a_1 = "";
        var II_2_2_a_2 = "";
        var II_2_2_a_3 = "";
        var II_2_2_a_4 = "";
        var II_2_2_a_5 = "";
        var II_2_2_a_6 = "";
        var II_2_2_b_1 = "";
        var II_2_2_b_2 = "";
        var II_2_3 = "";
        var II_2_4 = "";
        var II_2_5 = "";
        var II_2_6 = "";
        var II_2_7 = "";
        var II_2_8 = "";
        var II_2_9_1 = "";
        var II_2_9_2 = "";
        var II_2_9_3 = "";
        //bảng
        var III_1 = false;
        var III_2 = false;
        var III_3 = false;

        var chuKy = "";
        var hoVaTen = "";
        var ngayKy = "";
        var thangKy = "";
        var namKy = "";

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
        dynamic? step4;
        dynamic? config;

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    I_1 = data1.TenToChuc;
                    I_2 = data1.NoiCongTac;
                    I_3 = data1.ChuyenMon;
                    I_5 = data1.QuyetDinh;
                    I_6 = data1.TenDuAn;

                    if (data1.ChucDanh == "UyVienHoiDong")
                    {
                        I_4_uy_vien_hoi_dong = true;
                    }
                    else if (data1.ChucDanh == "ChuTich")
                    {
                        I_4_chu_tich = true;
                    }
                    else if (data1.ChucDanh == "PhoChuTich")
                    {
                        I_4_pho_chu_tich = true;
                    }
                    else if (data1.ChucDanh == "UyVienPhanBien")
                    {
                        I_4_uy_vien_phan_bien = true;
                    }

                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data1 = step2.form.data;

                    int item_index = 1;
                    foreach (var item in data1.NoiDung)
                    {
                        bool yesOrNo = item.yesOrNo;
                        if (item_index == 1)
                        {
                            if (yesOrNo)
                            {
                                II_1_1_co = true;
                            }
                            else
                            {
                                II_1_1_khong = true;
                            }
                            II_1_1_ghi_chu = item.description;
                        }
                        else if (item_index == 2)
                        {
                            if (yesOrNo)
                            {
                                II_1_2_co = true;
                            }
                            else
                            {
                                II_1_2_khong = true;
                            }
                            II_1_2_ghi_chu = item.description;
                        }
                        else if (item_index == 3)
                        {
                            if (yesOrNo)
                            {
                                II_1_3_co = true;
                            }
                            else
                            {
                                II_1_3_khong = true;
                            }
                            II_1_3_ghi_chu = item.description;
                        }
                        else if (item_index == 4)
                        {
                            if (yesOrNo)
                            {
                                II_1_4_co = true;
                            }
                            else
                            {
                                II_1_4_khong = true;
                            }
                            II_1_4_ghi_chu = item.description;
                        }
                        else if (item_index == 5)
                        {
                            if (yesOrNo)
                            {
                                II_1_5_co = true;
                            }
                            else
                            {
                                II_1_5_khong = true;
                            }
                            II_1_5_ghi_chu = item.description;
                        }
                        else if (item_index == 6)
                        {
                            if (yesOrNo)
                            {
                                II_1_6_co = true;
                            }
                            else
                            {
                                II_1_6_khong = true;
                            }
                            II_1_6_ghi_chu = item.description;
                        }
                        else if (item_index == 7)
                        {
                            if (yesOrNo)
                            {
                                II_1_7_co = true;
                            }
                            else
                            {
                                II_1_7_khong = true;
                            }
                            II_1_7_ghi_chu = item.description;
                        }
                        else if (item_index == 8)
                        {
                            if (yesOrNo)
                            {
                                II_1_8_co = true;
                            }
                            else
                            {
                                II_1_8_khong = true;
                            }
                            II_1_8_ghi_chu = item.description;
                        }
                        else
                        {
                            break;
                        }
                        item_index++;
                    }
                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data.YKien;
                    II_2_1 = data3.d1;
                    II_2_2_a_1 = data3.d2.a.a1;
                    II_2_2_a_2 = data3.d2.a.a2;
                    II_2_2_a_3 = data3.d2.a.a3;
                    II_2_2_a_4 = data3.d2.a.a4;
                    II_2_2_a_5 = data3.d2.a.a5;
                    II_2_2_a_6 = data3.d2.a.a6;
                    //
                    II_2_2_b_1 = data3.d2.b.b1;
                    II_2_2_b_2 = data3.d2.b.b2;
                    //
                    II_2_3 = data3.d3;
                    II_2_4 = data3.d4;
                    II_2_5 = data3.d5;
                    II_2_6 = data3.d6;
                    II_2_7 = data3.d7;
                    II_2_8 = data3.d8;
                    //
                    II_2_9_1 = data3.d9.a;
                    II_2_9_2 = data3.d9.b;
                    II_2_9_3 = data3.d9.c;
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
            {
                step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step4 != null)
                {
                    dynamic? data4 = step4.form.data;
                    config = step4.form.config;

                    int item_index = 1;
                    foreach (var item in config)
                    {
                        if (item.type == "radio")
                        {
                            foreach (var dataValue_item in item.dataValue)
                            {
                                if (dataValue_item.value == data4.KienNghiHoiDong)
                                {
                                    break;
                                }
                                item_index++;
                            }
                        }

                    }
                    if (item_index == 1)
                    {
                        III_1 = true;
                    }
                    else if (item_index == 2)
                    {
                        III_2 = true;
                    }
                    else
                    {
                        III_3 = true;
                    }

                    if (data4.KyTen != null)
                    {
                        string thoiGian = data4.KyTen.KyNgay.ToString();
                        string[] partsFull = thoiGian.Split(' ');
                        string partThoiGian = partsFull[0];
                        string[] part = partThoiGian.Split('/');
                        ngayKy = part[0];
                        thangKy = part[1];
                        namKy = part[2];
                        hoVaTen = data4.KyTen.NguoiKy;
                    }

                }

            }
        }
        container.Page(page =>
        {
            page.Size(PageSizes.A4);
            page.Margin(2, Unit.Centimetre);
            page.PageColor(QuestPDF.Helpers.Colors.White);
            page.DefaultTextStyle(x => x.FontSize(20));
            page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

            page.Header()
                .Column(column =>
                {

                });
            page.Content()
            .Column(column =>
            {
                column.Item().AlignRight().Text("Mẫu số 5").FontSize(10);
                column.Item().AlignRight().Text("09/2020/TT-BKHCN").Light().FontSize(10);
                column.Item().Table(table =>
                {
                    table.ColumnsDefinition(columns =>
                    {
                        columns.RelativeColumn(40);
                        columns.RelativeColumn(60);
                    });

                    //row 1
                    table.Cell().Row(1).Column(1).Text("CƠ QUAN (1) ...").FontSize(14);
                    table.Cell().Row(1).Column(2).Text("CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold();
                    table.Cell().Row(3).Column(1).AlignCenter().Text("VÀ CÔNG NGHỆ").Bold().Underline();

                    //row 2
                    table.Cell().Row(2).Column(1).Text("HỘI ĐỒNG TƯ VẤN KHOA HỌC").Bold();
                    table.Cell().Row(2).Column(2).AlignCenter().Text("Độc lập - Tự do - Hạnh phúc").Bold().Underline();
                });
                column.Item().AlignRight().Text(thu + ", ngày " + ngay + ", tháng " + thang + ", năm 20" + nam).Light().FontSize(14);
                //header

                column.Item().PaddingTop(35).AlignCenter().Text("PHIẾU Ý KIẾN CỦA THÀNH VIÊN HỘI ĐỒNG TƯ VẤN").Bold().FontSize(15);
                column.Item().AlignCenter().Text("KHOA HỌC VÀ CÔNG NGHỆ TRONG GIAI ĐOẠN XEM XÉT").Bold().FontSize(15);
                column.Item().AlignCenter().Text("QUYẾT ĐỊNH CHỦ TRƯƠNG ĐẦU TƯ").Bold().FontSize(15);
                column.Item().AlignCenter().Text("_______________").FontSize(14);

                column.Item().PaddingTop(20).AlignLeft().Text("I. CÁC THÔNG TIN CHUNG").Bold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(text =>
                {
                    text.Span("1. Họ và tên thành viên (chức danh, học vị): ").FontSize(14);
                    text.Span(I_1).SemiBold().FontSize(14);
                });
                column.Item().PaddingTop(5).AlignLeft().Text(text =>
                {
                    text.Span("2. Nơi công tác (nếu có)/Địa chỉ: ").FontSize(14);
                    text.Span(I_2).SemiBold().FontSize(14);
                });
                column.Item().PaddingTop(5).AlignLeft().Text(text =>
                {
                    text.Span("3. Lĩnh vực chuyên môn: ").FontSize(14);
                    text.Span(I_3).SemiBold().FontSize(14);
                });
                column.Item().PaddingTop(5).AlignLeft().Text("4. Chức danh trong Hội đồng:").FontSize(14);
                column.Item().Table(table =>
                {
                    table.ColumnsDefinition(columns =>
                    {
                        columns.RelativeColumn(30);
                        columns.RelativeColumn(5);
                        columns.RelativeColumn(30);
                        columns.RelativeColumn(5);
                    });

                    //row 1
                    table.Cell().Row(1).Column(1).Text("- Chủ tịch").FontSize(14);
                    table.Cell().Row(1).Column(2).Element(Checkbox).Text((I_4_chu_tich) ? "X" : "");
                    table.Cell().Row(1).Column(3).AlignCenter().Text("- Ủy viên phản biện").FontSize(14);
                    table.Cell().Row(1).Column(4).Element(Checkbox).Text((I_4_uy_vien_phan_bien) ? "X" : "");
                    //row 2
                    table.Cell().Row(2).Column(1).Text("- Phó Chủ tịch").FontSize(14);
                    table.Cell().Row(2).Column(2).Element(Checkbox).Text((I_4_pho_chu_tich) ? "X" : "");
                    table.Cell().Row(2).Column(3).AlignCenter().Text("- Ủy viên Hội đồng").FontSize(14);
                    table.Cell().Row(2).Column(4).Element(Checkbox).Text((I_4_uy_vien_hoi_dong) ? "X" : "");
                    static IContainer Checkbox(IContainer container)
                    {
                        return container
                        .Padding(5)
                            .Border(1)
                            .Background(QuestPDF.Helpers.Colors.White)
                            .ShowOnce()
                            .MinWidth(5)
                            .MinHeight(5)
                            .AlignCenter()
                            .AlignMiddle();
                    }
                });
                column.Item().PaddingTop(5).AlignLeft().Text(text =>
                {
                    text.Span("5. Quyết định thành lập hội đồng: ").FontSize(14);
                    text.Span(I_5).SemiBold().FontSize(14);
                });
                column.Item().PaddingTop(5).AlignLeft().Text(text =>
                {
                    text.Span("6. Tên Dự án đầu tư (DAĐT): ").FontSize(14);
                    text.Span(I_6).SemiBold().FontSize(14);
                });
                column.Item().PaddingTop(10).AlignLeft().Text("II.Ý KIẾN VỀ CÔNG NGHỆ CỦA DỰ ÁN").Bold().FontSize(14);
                column.Item().PaddingTop(5).PaddingBottom(10).AlignLeft().Text("1. Rà soát việc đáp ứng đầy đủ các nội dung giải trình về sử dụng công nghệ trong hồ sơ DAĐT " +
                    "theo quy định tại khoản 1 Điều 16 Luật Chuyển giao công nghệ").SemiBold().FontSize(14);
                column.Item().Table(table =>
                {
                    table.ColumnsDefinition(columns =>
                    {
                        columns.ConstantColumn(50);
                        columns.RelativeColumn();
                        columns.ConstantColumn(50);
                        columns.ConstantColumn(60);
                        columns.ConstantColumn(80);
                    });

                    //row 1
                    table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold();
                    table.Cell().Row(1).Column(2).Element(BlockHead).Text("NỘI DUNG GIẢI TRÌNH").Bold();
                    table.Cell().Row(1).Column(3).Element(BlockHead).Text("CÓ").Bold();
                    table.Cell().Row(1).Column(4).Element(BlockHead).Text("KHÔNG").Bold();
                    table.Cell().Row(1).Column(5).Element(BlockHead).Text("GHI CHÚ").Bold();

                    //row 2
                    table.Cell().Row(2).Column(1).Element(BlockTT).Text("1");
                    table.Cell().Row(2).Column(2).Element(BlockItem).Text("Phân tích và lựa chọn phương án công nghệ");
                    table.Cell().Row(2).Column(3).Element(BlockTT).Text((II_1_1_co) ? "X" : "");
                    table.Cell().Row(2).Column(4).Element(BlockTT).Text((II_1_1_khong) ? "X" : "");
                    table.Cell().Row(2).Column(5).Element(BlockItem).Text(II_1_1_ghi_chu);

                    //row 3
                    table.Cell().Row(3).Column(1).Element(BlockTT).Text("2");
                    table.Cell().Row(3).Column(2).Element(BlockItem).Text("Tên, xuất xứ, sơ đồ quy trình công nghệ");
                    table.Cell().Row(3).Column(3).Element(BlockTT).Text((II_1_2_co) ? "X" : "");
                    table.Cell().Row(3).Column(4).Element(BlockTT).Text((II_1_2_khong) ? "X" : "");
                    table.Cell().Row(3).Column(5).Element(BlockItem).Text(II_1_2_ghi_chu);

                    //row 4
                    table.Cell().Row(4).Column(1).Element(BlockTT).Text("3");
                    table.Cell().Row(4).Column(2).Element(BlockItem).Text("Dự kiến danh mục, tinh trạng, thông số kỹ thuật của máy móc, thiết bị chính trong dây chuyền công nghệ thuộc phương án công nghệ lựa chọn");
                    table.Cell().Row(4).Column(3).Element(BlockTT).Text((II_1_3_co) ? "X" : "");
                    table.Cell().Row(4).Column(4).Element(BlockTT).Text((II_1_3_khong) ? "X" : "");
                    table.Cell().Row(4).Column(5).Element(BlockItem).Text(II_1_3_ghi_chu);

                    //row 5
                    table.Cell().Row(5).Column(1).Element(BlockTT).Text("4");
                    table.Cell().Row(5).Column(2).Element(BlockItem).Text("Tài liệu chứng minh công nghệ đã được kiểm chứng (nếu có)");
                    table.Cell().Row(5).Column(3).Element(BlockTT).Text((II_1_4_co) ? "X" : "");
                    table.Cell().Row(5).Column(4).Element(BlockTT).Text((II_1_4_khong) ? "X" : "");
                    table.Cell().Row(5).Column(5).Element(BlockItem).Text(II_1_4_ghi_chu);

                    //row 6
                    table.Cell().Row(6).Column(1).Element(BlockTT).Text("5");
                    table.Cell().Row(6).Column(2).Element(BlockItem).Text("Dự kiến kế hoạch đào tạo, hỗ trợ kỹ thuật để vận hành dây chuyền công nghệ (nếu có)");
                    table.Cell().Row(6).Column(3).Element(BlockTT).Text((II_1_5_co) ? "X" : "");
                    table.Cell().Row(6).Column(4).Element(BlockTT).Text((II_1_5_khong) ? "X" : "");
                    table.Cell().Row(6).Column(5).Element(BlockItem).Text(II_1_5_ghi_chu);

                    //row 7
                    table.Cell().Row(7).Column(1).Element(BlockTT).Text("6");
                    table.Cell().Row(7).Column(2).Element(BlockItem).Text("Điều kiện sử dụng công nghệ (2)");
                    table.Cell().Row(7).Column(3).Element(BlockTT).Text((II_1_6_co) ? "X" : "");
                    table.Cell().Row(7).Column(4).Element(BlockTT).Text((II_1_6_khong) ? "X" : "");
                    table.Cell().Row(7).Column(5).Element(BlockItem).Text(II_1_6_ghi_chu);


                    //row 8
                    table.Cell().Row(8).Column(1).Element(BlockTT).Text("7");
                    table.Cell().Row(8).Column(2).Element(BlockItem).Text("Đánh giá sơ bộ tác động của công nghệ đến môi trường (nếu có)");
                    table.Cell().Row(8).Column(3).Element(BlockTT).Text((II_1_7_co) ? "X" : "");
                    table.Cell().Row(8).Column(4).Element(BlockTT).Text((II_1_7_khong) ? "X" : "");
                    table.Cell().Row(8).Column(5).Element(BlockItem).Text(II_1_7_ghi_chu);


                    //row 9
                    table.Cell().Row(9).Column(1).Element(BlockTT).Text("8");
                    table.Cell().Row(9).Column(2).Element(BlockItem).Text("Dự thảo hợp đồng chuyển giao công nghệ trong trường hợp góp vốn bằng công nghệ");
                    table.Cell().Row(9).Column(3).Element(BlockTT).Text((II_1_8_co) ? "X" : "");
                    table.Cell().Row(9).Column(4).Element(BlockTT).Text((II_1_8_khong) ? "X" : "");
                    table.Cell().Row(9).Column(5).Element(BlockItem).Text(II_1_8_ghi_chu);
                });
                static IContainer BlockTT(IContainer container)
                {
                    return container
                        .Border(1)
                        .Background(Colors.White)
                        .ShowOnce()
                        .MinWidth(28)
                        .MinHeight(28)
                        .AlignCenter()
                        .AlignMiddle();
                }
                static IContainer BlockHead(IContainer container)
                {
                    return container
                        .Border(1)
                        .Background(Colors.White)
                        .ShowOnce()
                        .MinWidth(28)
                        .MinHeight(28)
                        .Padding(5)
                        .AlignTop()
                        .AlignCenter()
                        .AlignMiddle();
                }
                static IContainer BlockItem(IContainer container)
                {
                    return container
                        .Border(1)
                        .Background(Colors.White)
                        .ShowOnce()
                        .MinWidth(28)
                        .MinHeight(28)
                        .AlignLeft()
                        .PaddingLeft(5)
                        .AlignMiddle();
                }


                column.Item().PaddingTop(10).AlignLeft().Text("2. Ý kiến về các nội dung cụ thể").SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.1. Công nghệ lựa chọn trong DAĐT thuộc các Danh mục công nghệ theo quy định của Luật Chuyển giao công nghệ và Nghị định số 76/2018/NĐ-CP (công nghệ khuyên khích chuyên giao, công nghệ hạn chế chuyên giao, công nghệ câm chuyển giao):")
                            .FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_1).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.2. Sự phù hợp của phương án công nghệ được lựa chọn").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("a) Về công nghệ: Xem xét phương án lựa chọn công nghệ nêu trong hồ sơ DAĐT, cụ thể:").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Phân tích, so sánh ưu, nhược điểm của từng phương án công nghệ nêu ừong hồ sơ DAĐT để nhận xét về phương án công nghệ được lựa chọn:").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_1).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Sự hoàn thiện của công nghệ được lựa chọn:").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_2).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Công nghệ thuộc loại tiên tiến/hiện đại hoặc trung bình, lạc hậu:").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_3).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Tính mới của công nghệ:").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_4).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Sự phù hợp của phương án công nghệ được lựa chọn với mục tiêu, quy mô, công suất của dự án:").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_5).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Sự phù hợp của phương án công nghệ được lựa chọn với các yêu cầu, quy định của quy chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thẩm quyền (nếu có):").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_a_6).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("b) Về máy móc, thiết bị chính trong dây chuyền công nghệ thuộc phương án công nghệ lựa chọn:").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Máy móc, thiết bị chính có tính năng, thông số kỹ thuật, công suất, chất lượng phù hợp với phương án công nghệ lựa chọn trong dự án không?").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_b_1).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("-Máy móc, thiết bị chính trong dây chuyền công nghệ có phù hợp với các yêu cầu, quy định của quy chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thẩm quyền (nếu có)").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_2_b_2).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.3. Về việc kiêm chứng sử dụng công nghệ tại các quôc gia phát triên (nêu có)").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_3).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.4. Về đào tạo, hỗ trợ kỹ thuật cho vận hành dây chuyền công nghệ của DAĐT (nếu có)").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_4).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.5. Về việc đáp ứng các điêu kiện sử dụng công nghệ").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_5).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.6. Về sơ bộ tác động ảnh hưởng của công nghệ đến môi trường").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_6).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.7. Về dự thảo hợp đồng chuyển giao công nghệ (nếu có)").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_7).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.8. Về đáp ứng các tiêu chí, tiêu chuẩn theo quy định của pháp luật về công nghệ cao (đối với DAĐT trong khu công nghệ cao)").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_8).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("2.9. Những vấn đề khác có liên quan (nếu có)").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét, đánh giá sơ bộ các lợi ích kinh tế - xã hội do DAĐT mang lại (khả năng tạo năng lực sản xuất mới, ngành nghề mới, sản phẩm mới, mở rộng thị trường, tạo việc làm cho người lao động, khả năng sử dụng phụ tùng, linh kiện, nguyên liệu sản xuất trong nước, đóng góp cho ngân sách nhà nước, lợi ích kinh tế của chủ đầu tư...):").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_1).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét, đánh giá sơ bộ hiệu quả của công nghệ đối với sự phát triển của địa phương, ngành (góp phần đổi mới công nghệ sản xuất của địa phương, gia tăng giá trị sản phẩm, tạo sản phẩm chủ lực của địa phương; nâng cao trình độ công nghệ sản xuất của ngành):").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_2).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("- Các vấn đề khác:").FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2_9_3).SemiBold().FontSize(14);
                column.Item().PaddingTop(5).AlignLeft().Text("III. KIẾN NGHỊ").Bold().FontSize(14);
                column.Item().PaddingTop(5).PaddingBottom(20).AlignLeft().Text("(Thành viên Hội đồng đánh dẩu X vào ô phù hợp):").FontSize(13);
                //
                column.Item().Table(table =>
                {
                    table.ColumnsDefinition(columns =>
                    {
                        columns.RelativeColumn(70);
                        columns.RelativeColumn(30);

                    });

                    //row 1
                    table.Cell().Row(1).Column(1).Element(BlockItem).Text("- Nhất trí thông qua công nghệ sử dụng trong DAĐT");
                    table.Cell().Row(1).Column(2).Element(BlockTT).Text((III_1) ? "X" : "").Bold();

                    //row 2
                    table.Cell().Row(2).Column(1).Element(BlockItem).Text("- Nhất trí thông qua công nghệ sử dụng trong DAĐT sau khi được hoàn thiện chỉnh sửa, " +
                        "bổ sung theo các ý kiến góp ý nêu trên   ");
                    table.Cell().Row(2).Column(2).Element(BlockTT).Text((III_2) ? "X" : "");

                    //row 3
                    table.Cell().Row(3).Column(1).Element(BlockItem).Text("- Không nhất trí công nghệ sử dụng trong DAĐT");
                    table.Cell().Row(3).Column(2).Element(BlockTT).Text((III_3) ? "X" : "");
                });
                column.Item().PaddingTop(20).AlignRight().Text("THÀNH VIÊN HỘI ĐỒNG").Bold().FontSize(15);
                column.Item().PaddingTop(1).AlignRight().Text("Ngày " + ngayKy + ", Tháng " + thangKy + ", Năm " + namKy).Italic().FontSize(14);
                column.Item().PaddingTop(1).AlignRight().Text("(Ký, ghi rõ họ và tên)      ").Italic().FontSize(14);
                column.Item().PaddingTop(1).PaddingRight(40).AlignRight().Text(hoVaTen).Italic().FontSize(14);
            });


            //    page.Footer()
            //        .AlignCenter()
            //        .Text(x =>
            //        {
            //            x.Span("Trang ");
            //            x.CurrentPageNumber();
            //       });
        });
    }).GeneratePdf(path);
        return path;
    }

    public string XuatMau06TT9(string path, Workflow workflow)
    {
        var TenToChuc = "";
        var NoiCongTac = "";
        var ChuyenMon = "";
        bool ChuTich = false;
        bool UVPhanBien = false;
        bool UVHoiDong = false;
        bool PCTich = false;
        var QuyetDinh = "";
        var TenDuAn = "";
        var pageSizes = new List<(int index, string content1, bool content2, string content3)>();


        int day = 00;
        int month = 00;
        int year = 0000;


        var Y_K_2_1 = "";
        var Y_K_2_2 = "";
        var Y_K_2_3_1 = "";
        var Y_K_2_3_2 = "";
        var Y_K_2_3_3 = "";
        var Y_K_2_3_4 = "";

        var Y_K_2_4_1 = "";
        var Y_K_2_4_2 = "";
        var Y_K_2_4_3 = "";
        var Y_K_2_4_4 = "";
        var Y_K_2_4_5 = "";
        var Y_K_2_4_6 = "";

        var Y_K_2_5_1 = "";
        var Y_K_2_5_2 = "";
        var Y_K_2_5_3 = "";


        var Y_K_2_6_1 = "";
        var Y_K_2_6_2 = "";
        var Y_K_2_6_3 = "";
        var Y_K_2_6_4 = "";

        var Y_K_2_7 = "";
        var Y_K_2_8 = "";

        var Y_K_2_9_1 = "";
        var Y_K_2_9_2 = "";
        var Y_K_2_9_3 = "";

        bool Kien_nghi_1 = false;
        bool Kien_nghi_2 = false;
        bool Kien_nghi_3 = false;

        var NguoiKy = "";
        var MaChuKy = "";
        var KyNgay = "";




        // Xuat quy trinh 1 -> có 3 bước
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    TenToChuc = data1.TenToChuc ?? "";
                    NoiCongTac = data1.NoiCongTac ?? "";
                    ChuyenMon = data1.ChuyenMon ?? "";
                    QuyetDinh = data1.QuyetDinh ?? "";
                    TenDuAn = data1.TenDuAn ?? "";

                    if (data1.ChucDanh == "UyVienHoiDong")
                    {
                        UVHoiDong = true;
                    }
                    else if (data1.ChucDanh == "ChuTich")
                    {
                        ChuTich = true;
                    }
                    else if (data1.ChucDanh == "PhoChuTich")
                    {
                        PCTich = true;
                    }
                    else if (data1.ChucDanh == "UyVienPhanBien")
                    {
                        UVPhanBien = true;
                    }

                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;

                    Y_K_2_1 = data2.YKien.d1 ?? "";
                    Y_K_2_2 = data2.YKien.d2 ?? "";

                    Y_K_2_3_1 = data2.YKien.d3.a ?? "";
                    Y_K_2_3_2 = data2.YKien.d3.b ?? "";
                    Y_K_2_3_3 = data2.YKien.d3.c ?? "";
                    Y_K_2_3_4 = data2.YKien.d3.d ?? "";

                    Y_K_2_4_1 = data2.YKien.d4.a ?? "";
                    Y_K_2_4_2 = data2.YKien.d4.b ?? "";
                    Y_K_2_4_3 = data2.YKien.d4.c ?? "";
                    Y_K_2_4_4 = data2.YKien.d4.d.d1 ?? "";
                    Y_K_2_4_5 = data2.YKien.d4.d.d2 ?? "";
                    Y_K_2_4_6 = data2.YKien.d4.d.d3 ?? "";

                    Y_K_2_5_1 = data2.YKien.d5.a ?? "";
                    Y_K_2_5_2 = data2.YKien.d5.b ?? "";
                    Y_K_2_5_3 = data2.YKien.d5.c ?? "";


                    Y_K_2_6_1 = data2.YKien.d6.a ?? "";
                    Y_K_2_6_2 = data2.YKien.d6.b ?? "";
                    Y_K_2_6_3 = data2.YKien.d6.c ?? "";
                    Y_K_2_6_4 = data2.YKien.d6.d ?? "";


                    Y_K_2_7 = data2.YKien.d7 ?? "";
                    Y_K_2_8 = data2.YKien.d8 ?? "";


                    Y_K_2_9_1 = data2.YKien.d9.a ?? "";
                    Y_K_2_9_2 = data2.YKien.d9.b ?? "";
                    Y_K_2_9_3 = data2.YKien.d9.c ?? "";

                    for (var i = 1; i < data2.NoiDung.Count; i++)
                    {
                        pageSizes.Add((i, data2.NoiDung[i].content, data2.NoiDung[i].yesOrNo, data2.NoiDung[i].description));
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;

                    NguoiKy = data3.KyTen.NguoiKy;
                    KyNgay = data3.KyTen.KyNgay;

                    string[] parts = KyNgay.Split(' ');
                    string datePart = parts[0];
                    string[] dateParts = datePart.Split('/');

                    day = int.Parse(dateParts[0]);
                    month = int.Parse(dateParts[1]);
                    year = int.Parse(dateParts[2]);

                    if (data3.KienNghi == "NhatTriThongQuaCongNgheSuDUngtrongDAĐT")
                    {
                        Kien_nghi_1 = true;
                    }
                    else if (data3.KienNghi == "NhatTriThongQuaCongNgheSuDungTrongDADTSauKhiDuocHoanThienChinhSuaBoSungTheoCacYKienGopYNeuTren")
                    {
                        Kien_nghi_2 = true;
                    }
                    else if (data3.KienNghi == "KhongNhatTriCongNgheSuDungTrongDAĐT")
                    {
                        Kien_nghi_3 = true;
                    }
                }

            }

        }



        QuestPDF.Fluent.Document
        .Create(container =>
        {

            container.Page(page =>
            {
                page.Size(PageSizes.A4);
                page.Margin(2, Unit.Centimetre);
                page.PageColor(Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));


                page.Header().ShowOnce()
               .Column(column =>
               {
                   column.Item().Row(

                     row =>
                     {

                         row.RelativeItem()

                         .AlignRight()


                                .Text(text =>
                                {

                                    text.AlignRight();
                                    text.Line("Mẫu số 6");
                                    text.Span("09/2020/TT-BKHCN").LetterSpacing(0);

                                });
                     });
                   column.Item().Row(

                        row =>
                        {

                            row.RelativeItem(3)
                                .AlignLeft()

                                .Text(text =>
                                {

                                    text.AlignCenter();
                                    text.Line("CƠ QUAN ").Bold();
                                    text.Line("HỘI ĐÔNG TƯ VẤN KHOA HỌC");
                                    text.Line("VÀ CÔNG NGHỆ").Underline().Bold();
                                });

                            row.RelativeItem(4)
                                        .AlignRight()
                                        .Text(text =>
                                        {

                                            text.AlignCenter();
                                            text.Line("CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold();
                                            text.Line("Độc lập -Tự do - Hạnh phúc").Underline().Bold();
                                            text.Span("   ,ngày   ,tháng   ,năm 20").Italic().LineHeight(3);
                                        });

                        });

               });
                page.Content()
                               //.PaddingVertical(0, Unit.Centimetre)
                               .Column(column =>
                               {

                                   column.Item().Row(
                                    row =>
                                    {
                                        row.RelativeItem()

                                          .AlignCenter()
                                          .Text(text =>
                                          {

                                              text.AlignCenter();
                                              text.Line("PHIẾU Ý KIẾN CỦA THÀNH VIÊN HỘI ĐỒNG TƯ VẤN KHOA HỌC VÀ ").Bold();
                                              text.Span("CÔNG NGHỆ TRONG GIAI ĐOẠN XEM XÉT QUYẾT ĐỊNH ĐẦU TƯ").Bold().LetterSpacing(0);

                                          });

                                    });
                                   column.Item().
                                   PaddingTop(3)
                                   .AlignCenter()
                                   .Width(40).PaddingVertical(2).
                                   LineHorizontal(1)
                                   .LineColor(Colors.Black);

                                   //nọi dung

                                   column.Item().Row(
                                      row =>
                                      {
                                          row.RelativeItem()
                                          .AlignLeft()
                                          .PaddingVertical(3)

                                                 .Text(text =>
                                                 {
                                                     text.ParagraphSpacing(1);
                                                     text.Line("I.CÁC THÔNG TIN CHUNG").Bold();
                                                     text.Span("1. Họ và tên thành viên(chức danh,học vị: ");
                                                     text.Line(TenToChuc).Bold();
                                                     text.Span("2. Nơi công tác(nếu có)/Địa chỉ: ");
                                                     text.Line(NoiCongTac).Bold();
                                                     text.Span("3. Lĩnh vực chuyên môn: ");
                                                     text.Line(ChuyenMon).Bold();
                                                     text.Span("4. Chức danh trong hội đồng:");
                                                 });

                                          //PHẦN CHECKBOX
                                          column.Item().Row(
                                   row =>
                                   {
                                       row.RelativeItem(3)

                                              .Text(text =>
                                              {
                                                  text.Line("- Chủ tịch");

                                              });
                                       row.RelativeItem(6)
                                    .PaddingVertical(1)
                                      .Background(QuestPDF.Helpers.Colors.White)
                                      .Height(20)
                                      .Width(20)
                                      .Border(1)
                                      .Padding(1)
                                  .Text(text =>
                                  {
                                      text.AlignCenter();
                                      text.Span(ChuTich ? "X" : "");
                                  });
                                       row.RelativeItem(5)
                                       .Text(text =>
                                        {
                                            text.Line("- Ủy viên phản biện:");
                                        });
                                       row.RelativeItem(4)
                                      .PaddingVertical(1)
                                      .Background(QuestPDF.Helpers.Colors.White)
                                      .Height(20)
                                      .Width(20)
                                      .Border(1)
                                      .Padding(1)
                                  .Text(text =>
                                  {
                                      text.AlignCenter();
                                      text.Span(UVPhanBien ? "X" : "");
                                  });
                                   });
                                          column.Item().Row(
                                        row =>
                                        {
                                            row.RelativeItem(3)
                                                   .Text(text =>
                                                   {
                                                       text.Line("- Phó chủ tịch");

                                                   });
                                            row.RelativeItem(6)
                                            .PaddingVertical(1)
                                            .Background(QuestPDF.Helpers.Colors.White)
                                            .Height(20)
                                            .Width(20)
                                             .Border(1)
                                              .Padding(1)
                                        .Text(text =>
                                        {
                                            text.AlignCenter();
                                            text.Span(PCTich ? "X" : "");
                                        });



                                            row.RelativeItem(5)
                                                   .Text(text =>
                                                   {
                                                       text.Line("- Ủy viên Hội đồng");

                                                   });
                                            row.RelativeItem(4)
                                           .PaddingVertical(1)
                                           .Background(QuestPDF.Helpers.Colors.White)
                                           .Height(20)
                                           .Width(20)
                                            .Border(1)
                                             .Padding(1)
                                       .Text(text =>
                                       {
                                           text.AlignCenter();
                                           text.Span(UVHoiDong ? "X" : "");
                                       });

                                        });
                                          //END CHECKBOX
                                          column.Item()
                                          .Padding(0)
                                            .Text(text =>
                                            {

                                                text.Span("5. Quyết định thành lập hội đồng: ");
                                                text.Span(QuyetDinh).Bold();

                                            });
                                          column.Item()
                                              .Padding(0)
                                            .Text(text =>
                                            {
                                                text.Span("6.Tên Dự án đầu tu (DAĐT): ");
                                                text.Span(TenDuAn).Bold();

                                            });
                                          column.Item()
                                            .Text(text =>
                                            {
                                                text.ParagraphSpacing(1);
                                                text.Span("II.Ý KIẾN VỀ CÔNG NGHỆ CỦA DỰ ÁN").Bold();

                                            });
                                          column.Item()

                                            .Text(text =>
                                            {
                                                text.AlignLeft();
                                                text.Line("1. Rà soát việc đáp ứng đầy đủ các nội dung giải trình về sử dụng công nghệ trong hồ sơ DAĐT theo quy định tại khoản 2 Điều 16 Luật Chuyển giao công nghệ:");
                                            });
                                          //START table
                                          column.Item().Table(table =>
                                          {


                                              IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                              {
                                                  return container
                                                      .Border(1)
                                                      .BorderColor(Colors.Black)
                                                      .PaddingVertical(5)
                                                      .PaddingHorizontal(5)
                                                      .AlignMiddle();
                                              }

                                              table.ColumnsDefinition(columns =>
                                              {
                                                  columns.RelativeColumn(20);
                                                  columns.RelativeColumn(110);
                                                  columns.RelativeColumn(25);
                                                  columns.RelativeColumn(35);
                                                  columns.RelativeColumn(35);
                                              });
                                              table.Header(header =>
                                              {
                                                  // please be sure to call the 'header' handler!
                                                  header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                                  header.Cell().Element(CellStyle).AlignCenter().Text("NỘI DUNG GIẢI TRÌNH").Bold();
                                                  header.Cell().Element(CellStyle).AlignCenter().Text("CÓ").Bold();
                                                  header.Cell().Element(CellStyle).AlignCenter().Text("KHÔNG").Bold();
                                                  header.Cell().Element(CellStyle).AlignCenter().Text("GHI CHÚ").Bold();
                                                  // you can extend existing styles by creating additional methods
                                                  IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                              });



                                              foreach (var page in pageSizes)
                                              {
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(page.index);
                                                  table.Cell().Element(CellStyle).Text(page.content1);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(page.content2 == true ? "X" : "");
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(page.content2 == false ? "X" : "");
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);

                                              }

                                              //}

                                              IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                              //}
                                          });
                                          //END table
                                          column.Item()
                                          .PaddingTop(5)
                                          .PaddingBottom(8)
                                             .Text(text =>
                                             {
                                                 text.AlignLeft();
                                                 text.Line("2. Ý kiến về các nội dung cụ thể");
                                                 text.Line("2.1 Xem xét và cho ý kiến công nghệ DAĐT thuộc các Danh mục công nghệ theo quy định của Luật Chuyển giao công nghệ và Nghị định số 76/2018/NĐ-CP (công nghệ khuyên khích chuyên giao, công nghệ hạn chê chuyên giao, công nghệ cấm chuyển giao)");
                                                 text.Span(Y_K_2_1).Bold();


                                             });

                                          column.Item()
                                          .PaddingBottom(8)
                                       .Text(text =>
                                       {
                                           text.AlignLeft();
                                           text.Line("2.2. Sự phù họp của công nghệ, máy móc, thiết bị với phương án được lựa chọn\r\ntrong giai đoạn quyết định chủ trương đầu tư");
                                           text.Span(Y_K_2_2).Bold();


                                       });
                                          column.Item()
                                          .PaddingBottom(8)
                                          .Text(text =>
                                          {
                                              text.AlignLeft();
                                              text.Line("2.3. Sự phù họp của phương án công nghệ được lựa chọn với mục tiêu, quy mô, công suất của DAĐT");
                                              text.Line("- Xem xét dây chuyền công nghệ bảo đảm sản xuất được các sản phẩm đã dự kiến cả về số lượng và chất lượng:");
                                              text.Span(Y_K_2_3_1).Bold();

                                          });
                                          column.Item()
                                          .PaddingBottom(8)
                                         .Text(text =>
                                         {
                                             text.AlignLeft();
                                             text.Line("- Xem xét dây chuyền công nghệ bảo đảm các tiêu chuẩn về tiết kiệm năng lượng, vệ sinh công nghiệp, an toàn lao động và vệ sinh môi trường:");
                                             text.Span(Y_K_2_3_2).Bold();

                                         });


                                          column.Item()
                                         .PaddingBottom(8)
                                          .Text(text =>
                                          {
                                              text.AlignLeft();
                                              text.Line("- Xem xét phương án lựa chọn công nghệ nêu trong hồ sơ DAĐT: phân tích, so sánh ưu nhược điểm của từng phương án và trên cơ sở xem xét tính hoàn thiện của công nghệ, mức độ tiên tiến của dây chuyền công nghệ, tính thích họp của công nghệ để nhận xét về phương án công nghệ được chọn:");
                                              text.Span(Y_K_2_3_3).Bold();

                                          });
                                          column.Item()
                                           .PaddingBottom(8)
                                         .Text(text =>
                                         {
                                             text.AlignLeft();
                                             text.Line("- Dự thảo Họp đồng chuyển giao công nghệ (nếu DAĐT có góp vốn bằng công nghệ):");
                                             text.Span(Y_K_2_3_4).Bold();

                                         });
                                          column.Item()
                                           .PaddingBottom(8)
                                      .Text(text =>
                                      {
                                          text.AlignLeft();
                                          text.Line("2.4. Sự phù họp của máy móc, thiết bị trong dây chuyền công nghệ");
                                          text.Line("- Máy móc, thiết bị trong dây chuyền công nghệ bảo đảm có tính năng, chất lượng phù họp với yêu cầu của công nghệ nhằm tạo ra sản phẩm có chất lượng và số lượng như dự kiên:");
                                          text.Span(Y_K_2_4_1).Bold();

                                      });
                                          column.Item()
                                           .PaddingBottom(8)
                                      .Text(text =>
                                      {
                                          text.AlignLeft();
                                          text.Line("- Tính đồng bộ của máy móc, thiết bị trong dây chuyền công nghệ (danh mục các máy móc, thiết bị của DAĐT có khả năng thực hiện các công đoạn trong dây chuyền công nghệ, đáp ứng yêu cầu về số lượng, chất lượng các sản phẩm). Đối với các dự án đầu tư mà bên nước ngoài tham gia góp vốn bằng máy móc, thiết bị thì cần bảo đảm tính đồng bộ và phù họp với công nghệ:");
                                          text.Span(Y_K_2_4_2).Bold();

                                      });
                                          column.Item()
                                           .PaddingBottom(8)
                                     .Text(text =>
                                     {
                                         text.AlignLeft();
                                         text.Line("- Các đặc tính, tính năng kỹ thuật của máy móc, thiết bị; công suất của máy móc, thiết bị; tình trạng thiết bị (mới hay đã qua sử dụng); thời gian bảo hành:");
                                         text.Span(Y_K_2_4_3).Bold();
                                     });

                                          column.Item()
                                           .PaddingBottom(8)
                                     .Text(text =>
                                     {
                                         text.AlignLeft();
                                         text.Line("- Đối với dự án đầu tư có liệt kê danh sách máy móc, thiết bị, dây chuyền công nghệ đã qua sử dụng dự kiến nhập khẩu, cần thẩm định thêm các nội dung sau:");
                                         text.Line("+ Xem xét tình trạng của máy móc, thiết bị, dây chuyền công nghệ (tuổi thiết bị,thời gian đã sử dụng, thời gian sử dụng còn lại,...):");
                                         text.Span(Y_K_2_4_4).Bold();
                                     });
                                          column.Item()
                                           .PaddingBottom(8)
                                 .Text(text =>
                                 {
                                     text.AlignLeft();
                                     text.Line("+ Nguôn gôc, xuât xứ của máy móc, thiêt bị, dây chuyên công nghệ::");
                                     text.Span(Y_K_2_4_5).Bold();



                                 });

                                          column.Item()
                                          .PaddingBottom(8)
                                     .Text(text =>
                                     {
                                         text.AlignLeft();
                                         text.Line("+ Xem xét mức độ phù họp của các tiêu chuẩn sản xuất máy móc, thiết bị, dây chuyền công nghệ so với quy định của Quy chuẩn kỹ thuật Quốc gia (QCVN) hoặc Tiêu chuẩn Quốc gia (TCVN) của Việt Nam hoặc Tiêu chuẩn của các nước G7 về an toàn, tiết kiệm năng lượng, bảo vệ môi trường và các quy định khác của pháp luật có liên quan:");
                                         text.Span(Y_K_2_4_6).Bold();

                                     });
                                          column.Item()
                                           .PaddingBottom(8)
                                          .Text(text =>
                                          {
                                              text.AlignLeft();
                                              text.Line("2.5. Sản phẩm, thị trường sản phẩm");
                                              text.Line("- Tiêu chuẩn, chất lượng sản phẩm:");
                                              text.Span(Y_K_2_5_1).Bold();

                                          });

                                          column.Item()
                                           .PaddingBottom(8)
                                         .Text(text =>
                                         {
                                             text.AlignLeft();
                                             text.Line("- Dự báo nhu cầu của thị trường (trong nước, khu vực và thế giới); dự báo thị phần của sản phẩm, tỷ lệ xuất khẩu:");

                                             text.Span(Y_K_2_5_2).Bold();


                                         });
                                          //1
                                          column.Item()
                                           .PaddingBottom(8)
                                       .Text(text =>
                                       {
                                           text.AlignLeft();
                                           text.Line("-Khả năng cạnh tranh của sản phẩm (về chất lượng, mẫu mã, giá thành):");
                                           text.Span(Y_K_2_5_3).Bold();


                                       });

                                          column.Item()
                                           .PaddingBottom(8)
                                     .Text(text =>
                                     {
                                         text.AlignLeft();

                                         text.Line("2.6. Sự phù họp, khả năng đáp ứng nguyên liệu, nhiên liệu, vật liệu cho việc vận hành công nghệ, máy móc, thiết bị");
                                         text.Line("- Khả năng khai thác, vận chuyển, lưu giữ nguyên vật liệu để cung cấp cho dự án:");
                                         text.Span(Y_K_2_6_1).Bold();

                                     });

                                          column.Item()
                                           .PaddingBottom(8)
                                 .Text(text =>
                                 {
                                     text.AlignLeft();

                                     text.Line("- Chủng loại, khối lượng, giá tri các loại linh kiện, phụ tùng hoặc bán thành phẩm nhập ngoại để gia công, lắp ráp, sản suất ra sản phẩm:");
                                     text.Span(Y_K_2_6_2).Bold();


                                 });
                                          column.Item()
                                         .PaddingBottom(8)
                                         .Text(text =>
                                         {
                                             text.AlignLeft();

                                             text.Line("- Chủng loại, khối lượng, giá tri nguyên, nhiên, vật liệu phải nhập ngoại hoặc sử dụng nguyên liệu trong nước phục vụ sản xuất:");
                                             text.Span(Y_K_2_6_3).Bold();


                                         });
                                          column.Item()
                                                  .PaddingBottom(8)
                                           .Text(text =>
                                           {
                                               text.AlignLeft();

                                               text.Line("- Khả năng sử dụng vật liệu ít gây ô nhiễm môi trường:");
                                               text.Span(Y_K_2_6_4).Bold();

                                           });

                                          column.Item()
                                           .PaddingBottom(8)

                                    .Text(text =>
                                    {
                                        text.AlignLeft();

                                        text.Line("2.7. Chương trình đào tạo, hỗ trợ kỹ thuật để vận hành dây chuyền công nghệ, máy móc, thiết bị");
                                        text.Span(Y_K_2_7).Bold();



                                    });
                                          column.Item()
                                           .PaddingBottom(8)
                                 .Text(text =>
                                 {
                                     text.AlignLeft();

                                     text.Line("2.8. Chi phí đầu tư cho công nghệ, máy móc, thiết bị, đào tạo, hỗ trợ kỹ thuật");
                                     text.Span(Y_K_2_8).Bold();
                                 });
                                          column.Item()
                                          .PaddingBottom(8)
                                       .Text(text =>
                                       {
                                           text.AlignLeft();

                                           text.Line("2.9. Những vấn đề khác có liên quan (nếu có)");
                                           text.Line("- Hiệu quả của công nghệ đối với sự phát triển của địa phương, ngành (góp phần đôi mới công nghệ, đôi mới sản phẩm, gia tăng giá trị của sản phẩm, tạo ra sản phâm chủ lực của địa phương, giúp nâng cao trình độ công nghệ sản xuât của ngành):");
                                           text.Span(Y_K_2_9_1).Bold();

                                       });


                                          column.Item()
                                           .PaddingBottom(8)
                                            .Text(text =>
                                            {
                                                text.AlignLeft();
                                                text.Line("- Đánh giá tác động của công nghệ đến môi trường: tự nhiên, kinh tế - xã hội,sức khỏe cộng đồng:");
                                                text.Span(Y_K_2_9_2).Bold();
                                            });
                                          column.Item()
                                           .PaddingBottom(8)
                                         .Text(text =>
                                         {
                                             text.AlignLeft();
                                             text.Line("- Các vấn đề khác:");
                                             text.Span(Y_K_2_9_3).Bold();


                                         });

                                          column.Item()
                                           .PaddingBottom(8)
                                          .Text(text =>
                                          {
                                              text.AlignLeft();
                                              text.Line("III.KIẾN NGHỊ").Bold();
                                              text.Line("(Thành viên Hội đồng đánh dấu X vào ô phù hợp):").Italic();



                                          });
                                          column.Item().Table(table =>
                                          {

                                              //const int inchesToPoints = 72;
                                              IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                              {
                                                  return container
                                                      .Border(1)
                                                      .BorderColor(Colors.Black)
                                                      .PaddingVertical(5)
                                                      .PaddingHorizontal(10)
                                                      .AlignMiddle();
                                              }

                                              table.ColumnsDefinition(columns =>
                                              {
                                                  columns.RelativeColumn(70);
                                                  columns.RelativeColumn(20);

                                              });
                                              table.Header(header =>
                                              {
                                                  IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                              });
                                              table.Cell().Element(CellStyle).AlignLeft().Text("- Nhất trí thông qua công nghệ sử dụng trong DAĐT");
                                              table.Cell().Element(CellStyle).AlignCenter().Text(Kien_nghi_1 ? "X" : "");
                                              table.Cell().Element(CellStyle).AlignLeft().Text("- Nhất trí thông qua công nghệ sử dụng ừong DAĐT sau khi được hoàn thiện chỉnh sửa, bổ sung theo các ý kiến góp ý nêu trên");
                                              table.Cell().Element(CellStyle).AlignCenter().Text(Kien_nghi_2 ? "X" : "");
                                              table.Cell().Element(CellStyle).AlignLeft().Text("- Không nhất trí công nghệ sử dụng trong DAĐT");
                                              table.Cell().Element(CellStyle).AlignCenter().Text(Kien_nghi_3 ? "X" : "");
                                              IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();

                                          });

                                      });

                                   column.Item().Row(
                                row =>
                                {
                                    row.RelativeItem(3)
                                      .Text(text =>
                                      {
                                          text.AlignCenter();

                                      });

                                    row.RelativeItem(5)
                                             .PaddingTop(30)

                                      .Text(text =>
                                      {
                                          text.AlignCenter();
                                          text.Line("THÀNH VIÊN HỘI ĐỒNG").Bold();
                                          text.Line($" Ngày {day} Tháng {month} Năm {year}").Italic();
                                          text.Line("(Họ,tên và chữ ký)").Italic();

                                          text.Line(NguoiKy).LineHeight(2);
                                          //text.Line(KyNgay);

                                      });

                                });

                               });
                page.Footer()
          .Column(column =>
          {

              column.Item().PaddingTop(5).Width(100).LineHorizontal(1).LineColor(Colors.Black);
              column.Item()
                 .Text(footerText =>
                 {
                     footerText.AlignLeft();
                     footerText.Line("Ghi tên cơ quan thành lập Hội đồng tư vấn khoa học và công nghệ");
                 });
          });
            });

        })
            .GeneratePdf(path);
        return path;
    }

    public string XuatMau07TT9(string path, Workflow workflow)
    {
        var pageSizes = new List<(string index, string content1, string content2, string content3)>();
        var pageSizes2 = new List<(string index, string content1, string content2)>();
        var pageSizes3 = new List<(string index, string content1, string content2)>();

        var TenDuAn = "";
        var ChuDauTu = "";
        var QuyetDinh = "";
        var ThoiGian = "";
        var DiaDiem = "";
        //var data = "";
        var ho_ten_1 = "";
        var hoc_vi_1 = "";
        var chuc_danh_1 = "";

        var ho_ten_2 = "";
        var hoc_vi_2 = "";
        var chuc_danh_2 = "";


        var ho_ten_3 = "";
        var hoc_vi_3 = "";
        var chuc_danh_3 = "";


        var I_4_3_ho_ten = "";
        var I_4_3_donvicongtac = "";

        var I_4_4_ho_ten = "";
        var I_4_4_donvicongtac = "";


        //
        var II_1 = "";
        var II_2 = "";
        var II_3_1 = "";
        var II_3_2 = "";
        var II_3_3 = "";
        var II_4 = "";
        int II_5_1 = 0;
        int II_5_2 = 0;
        int II_5_3 = 0;
        var II_5_4 = "";


        var KetLuan = "";
        var CT_Nguoiky = "";
        var CT_MaChuKy = "";
        var CT_KyNgày = "";


        var TK_Nguoiky = "";
        var TK_MaChuKy = "";
        var TK_KyNgày = "";

        int CT_day = 00;
        int CT_month = 00;
        int CT_year = 00;

        int TK_day = 00;
        int TK_month = 00;
        int TK_year = 00;

        // Xuat quy trinh 1 -> có 3 bước
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;

                    TenDuAn = data1.TenDuAn ?? "";
                    ChuDauTu = data1.ChuDauTu ?? "";
                    QuyetDinh = data1.QuyetDinh ?? "";
                    ThoiGian = data1.PhienHopHoiDong.ThoiGian ?? "";

                    DiaDiem = data1.PhienHopHoiDong.DiaDiem ?? "";
                    foreach (var page in data1.PhienHopHoiDong.ThanhVien)
                    {
                        pageSizes.Add((page.id ?? "", page.HoVaTen ?? "", page.HocVi ?? "", page.ChucDanh ?? ""));
                    }
                    foreach (var page in data1.DaiBieuThamDu)
                    {
                        pageSizes2.Add((page.id ?? "", page.HoVaTen ?? "", page.DonViCongTac ?? ""));
                    }

                    foreach (var page in data1.PhienHopHoiDong.KhongThamGia)
                    {
                        pageSizes3.Add((page.id ?? "", page.HoVaTen ?? "", page.DonViCongTac ?? ""));

                    }
                }

            }

            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    II_1 = data2.NoiDung.d1 ?? "";
                    II_2 = data2.NoiDung.d2 ?? "";
                    II_3_1 = data2.NoiDung.d3.a ?? "";
                    II_3_2 = data2.NoiDung.d3.b ?? "";
                    II_3_3 = data2.NoiDung.d3.c ?? "";
                    II_4 = data2.NoiDung.d4 ?? "";
                    II_5_4 = data2.NoiDung.d5.LyDo ?? "";

                    dynamic data = data2.NoiDung.d5.KetQua;
                    for (int i = 0; i < data.Count; i++)
                    {
                        dynamic ketQuaItem = data[i];
                        int quantity = (int)ketQuaItem.quantity;

                        if (i == 0)
                        {
                            II_5_1 = quantity;
                        }
                        else if (i == 1)
                        {
                            II_5_2 = quantity;
                        }
                        else if (i == 2)
                        {
                            II_5_3 = quantity;
                        }

                    }


                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;
                    KetLuan = data3.KetLuan ?? "";
                    CT_Nguoiky = data3.KyTen.ChuTich.NguoiKy ?? "";
                    TK_Nguoiky = data3.KyTen.ThuKy.NguoiKy ?? "";
                    CT_KyNgày = data3.KyTen.ChuTich.KyNgay ?? "";

                    string[] parts = CT_KyNgày.Split(' ');
                    string datePart = parts[0];

                    string[] dateParts = datePart.Split('/');

                    CT_day = int.Parse(dateParts[0]);
                    CT_month = int.Parse(dateParts[1]);
                    CT_year = int.Parse(dateParts[2]);

                    TK_KyNgày = data3.KyTen.ThuKy.KyNgay ?? "";

                    string[] parts1 = TK_KyNgày.Split(' ');
                    string datePart1 = parts1[0];
                    string[] dateParts1 = datePart1.Split('/');

                    TK_day = int.Parse(dateParts1[0]);
                    TK_month = int.Parse(dateParts1[1]);
                    TK_year = int.Parse(dateParts1[2]);

                }

            }

        }
        QuestPDF.Fluent.Document
           .Create(container =>
           {

               container.Page(page =>
              {
                  page.Size(PageSizes.A4);

                  page.Margin(2, Unit.Centimetre);
                  page.PageColor(QuestPDF.Helpers.Colors.White);
                  page.DefaultTextStyle(x => x.FontSize(20));
                  page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                  page.Header().ShowOnce()
                 .Column(column =>
                 {
                     column.Item().Row(

                       row =>
                       {
                           row.RelativeItem()
                           .AlignRight()
                                  .Text(text =>
                                  {

                                      text.AlignRight();
                                      text.Line("Mẫu số 7").Bold();
                                      text.Span("09/2020/TT-BKHCN").LetterSpacing(0);

                                  });
                       });
                     column.Item().Row(
                           row =>
                           {

                               row.RelativeItem(3)
                                    .AlignLeft()

                                    .Text(text =>
                                    {

                                        text.AlignCenter();
                                        text.Line("CƠ QUAN ");
                                        text.Line("HỘI ĐÔNG TƯ VẤN KHOA HỌC").Bold();
                                        text.Line("VÀ CÔNG NGHỆ").Underline().Bold();
                                    });
                               row.RelativeItem(4)
                                            .AlignRight()
                                            .Text(text =>
                                            {

                                                text.AlignCenter();
                                                text.Line("CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold();
                                                text.Line("Độc lập -Tự do - Hạnh phúc").Underline().Bold();
                                                text.Span(",  ngày  ,tháng  ,năm 20").Italic().LineHeight(3);
                                            });

                           });
                 });
                  page.Content()
                      .Column(column =>
                      {
                          column.Item().Row(
                           row =>
                           {
                               row.RelativeItem()
                                 .AlignCenter()
                                 .Text(text =>
                                 {
                                     text.AlignCenter();
                                     text.Line("BIÊN BẢN HỌP").Bold();
                                     text.Span("HỘI ĐỒNG TƯ VẮN KHOA HỌC VÀ CÔNG NGHỆ").Bold().LetterSpacing(0);

                                 });

                           });
                          column.Item().
                           AlignCenter()
                          .Width(40).PaddingVertical(2).
                          LineHorizontal(1)
                          .LineColor(Colors.Black);

                          //nọi dung

                          column.Item().Row(
                             row =>
                             {
                                 row.RelativeItem()
                                 .AlignLeft()
                                 .PaddingVertical(3)
                                        .Text(text =>
                                        {

                                            text.ParagraphSpacing(1);
                                            text.Line(" I. CÁC THÔNG TIN CHUNG").Bold();
                                            text.Span("1. Tên Dự án đầu tư (DAĐT): ");
                                            text.Line(TenDuAn).Bold();
                                            text.Span("2. Chủ đầu tư: ");
                                            text.Line(ChuDauTu).Bold();
                                            text.Span("3. Quyết định thành lập Hội đồng: ");
                                            text.Line(QuyetDinh).Bold();
                                            text.Line("4. Phiên họp Hội Đồng:");
                                            text.Span("4.1. Địa điểm họp: ");
                                            text.Line(QuyetDinh).Bold();
                                            text.Span("4.2. Thời gian họp: ");
                                            text.Line(ThoiGian).Bold();
                                            text.Line("4.3. Thành viên Hội đồng").LineHeight(1);
                                        });
                                 //START table
                                 column.Item().Table(table =>
                                 {

                                     //const int inchesToPoints = 72;
                                     IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                     {
                                         return container
                                             .Border(1)
                                             .BorderColor(Colors.Black)
                                             .PaddingVertical(5)
                                             .PaddingHorizontal(10)
                                             .AlignCenter()
                                            .AlignMiddle();
                                     }
                                     table.ColumnsDefinition(columns =>
                                     {
                                         columns.RelativeColumn(20);
                                         columns.RelativeColumn(70);
                                         columns.RelativeColumn(70);
                                         columns.RelativeColumn(50);
                                     });
                                     table.Header(header =>
                                     {
                                         // please be sure to call the 'header' handler!
                                         header.Cell().Element(CellStyle).Text("TT").Bold();
                                         header.Cell().Element(CellStyle).Text("Họ và tên").Bold();
                                         header.Cell().Element(CellStyle).AlignCenter().Text("Học hàm,học vị, Cơ quan công tác").Bold();
                                         header.Cell().Element(CellStyle).AlignCenter().Text("Chức danh trong Hội Đồng").Bold();

                                         // you can extend existing styles by creating additional methods
                                         IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                     });
                                     foreach (var page in pageSizes)
                                     {
                                         table.Cell().Element(CellStyle).Text(page.index);
                                         table.Cell().Element(CellStyle).Text(page.content1);
                                         table.Cell().Element(CellStyle).Text(page.content2);
                                         table.Cell().Element(CellStyle).Text(page.content3);
                                     }

                                     //}

                                     IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                     //}
                                 });

                             });

                          //
                          column.Item().Row(
                                row =>
                                {
                                    row.RelativeItem()
                                   .PaddingVertical(4)

                                   .Text(text =>
                                   {
                                       text.AlignLeft();
                                       text.Line("- Số thành viên Hội đồng có mặt trên tổng số thành viên Hội đồng / ");
                                       text.Span("- Số thành viên vắng mặt: người,gồm các thành viên:").LetterSpacing(0);


                                   });

                                    column.Item().Table(table =>
                                    {

                                        IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                        {
                                            return container
                                                .Border(1)
                                                .BorderColor(Colors.Black)
                                                .PaddingVertical(5)
                                                .PaddingHorizontal(10)
                                                .AlignCenter()
                                                .AlignMiddle();
                                        }

                                        table.ColumnsDefinition(columns =>
                                        {
                                            columns.RelativeColumn(20);
                                            columns.RelativeColumn(70);
                                            columns.RelativeColumn(70);
                                            //columns.RelativeColumn(40);
                                        });
                                        table.Header(header =>
                                        {
                                            // please be sure to call the 'header' handler!
                                            header.Cell().Element(CellStyle).Text("TT").Bold();
                                            header.Cell().Element(CellStyle).Text("Họ và tên").Bold();
                                            header.Cell().Element(CellStyle).Text("Đơn vị công tác").Bold();

                                            // you can extend existing styles by creating additional methods
                                            IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                        });


                                        foreach (var page in pageSizes3)
                                        {
                                            table.Cell().Element(CellStyle).Text(page.index);
                                            table.Cell().Element(CellStyle).Text(page.content1);
                                            table.Cell().Element(CellStyle).Text(page.content2);

                                        }

                                        IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                        //}
                                    });
                                });

                          //
                          column.Item().Row(
                               row =>
                               {
                                   row.RelativeItem()
                                   .PaddingVertical(4)
                                   .Text(text =>
                                   {
                                       //text.ParagraphSpacing(1);
                                       text.AlignLeft();
                                       text.Line("- Số thành viên Hội đồng có mặt trên tổng số thành viên Hội đồng / ");
                                       text.Span("- Số thành viên vắng mặt:  người,gồm các thành viên:").LetterSpacing(0);


                                   });
                                   column.Item().Table(table =>
                                   {
                                       IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                       {
                                           return container
                                               .Border(1)
                                               .BorderColor(Colors.Black)
                                               .PaddingVertical(5)
                                               .PaddingHorizontal(10)
                                               .AlignCenter()
                                               .AlignMiddle();
                                       }

                                       table.ColumnsDefinition(columns =>
                                       {
                                           columns.RelativeColumn(20);
                                           columns.RelativeColumn(70);
                                           columns.RelativeColumn(70);

                                       });
                                       table.Header(header =>
                                       {
                                           // please be sure to call the 'header' handler!
                                           header.Cell().Element(CellStyle).Text("TT").Bold();
                                           header.Cell().Element(CellStyle).Text("Họ và tên").Bold();
                                           header.Cell().Element(CellStyle).Text("Đơn vị công tác").Bold();
                                           // you can extend existing styles by creating additional methods
                                           IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                       });

                                       foreach (var page in pageSizes2)
                                       {
                                           table.Cell().Element(CellStyle).Text(page.index);
                                           table.Cell().Element(CellStyle).Text(page.content1);
                                           table.Cell().Element(CellStyle).Text(page.content2);
                                       }
                                       IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                       //}
                                   });
                                   //--------------------------------page2
                                   column.Item().Row(
                                          row =>
                                          {
                                              row.RelativeItem()
                                              .PaddingTop(5)
                                                  .PaddingBottom(8)
                                                  .Text(text =>
                                                  {
                                                      text.AlignLeft();
                                                      text.Line("II.NỘI DUNG CUỘC HỌP").Bold();
                                                      text.Line("1. Hội đồng thống nhất chương trình làm việc và cử thư ký khoa học của Hội đồng");
                                                      text.Span(II_1).Bold();

                                                  });

                                          });
                                   column.Item()
                                              //
                                              .PaddingBottom(8)
                                    .Text(text =>
                                    {
                                        text.AlignLeft();
                                        text.Line("2. Chủ đầu tư báo cáo tóm tắt dự án đầu tư (nếu có)");
                                        text.Span(II_2).Bold();

                                    });
                                   column.Item()
                                              .PaddingBottom(8)
                                   .Text(text =>
                                   {
                                       text.AlignLeft();
                                       text.Line("3 .Nội dung trao đổi cuộc hợp");
                                       text.Line("3.1.Ý kiến của các ủy viên phản biện");
                                       text.Span(II_3_1).Bold();
                                   });
                                   column.Item()
                                              .PaddingBottom(8)
                                 .Text(text =>
                                 {
                                     text.AlignLeft();
                                     text.Line("3.2.Ý kiến của các thành viên Hội đồng");
                                     text.Span(II_3_2).Bold();

                                 });
                                   column.Item()
                                              //
                                              .PaddingBottom(8)
                               .Text(text =>
                               {
                                   text.AlignLeft();
                                   text.Line("3.3 Ý kiến của đại biểu được mời tham dự (nếu có)");
                                   text.Span(II_3_3).Bold();

                               });

                                   column.Item()
                                      .PaddingBottom(8)
                               .Text(text =>
                               {
                                   text.AlignLeft();
                                   text.Line("4.Giải trình của chủ đầu tư (nếu có)");
                                   text.Span(II_4).Bold();

                               });


                                   column.Item()
                              .Text(text =>
                              {
                                  text.AlignLeft();
                                  text.Line("5.Kết quả ý kiến của các thành viên hội đồng");
                              });
                                   //table
                                   column.Item().Table(table =>
                                   {
                                       IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                       {
                                           return container
                                               .Border(1)
                                               .BorderColor(Colors.Black)
                                               .PaddingVertical(5)
                                               .PaddingHorizontal(10)
                                               .AlignMiddle();
                                       }

                                       table.ColumnsDefinition(columns =>
                                       {

                                           columns.RelativeColumn(70);
                                           columns.RelativeColumn(40);
                                       });
                                       table.Header(header =>
                                       {
                                           // please be sure to call the 'header' handler!

                                           header.Cell().Element(CellStyle).AlignCenter().Text("Nội dung ý kiến").Bold();
                                           header.Cell().Element(CellStyle).AlignCenter().Text("Số lượng /tổng số thành viên có mặt").Bold();
                                           // you can extend existing styles by creating additional methods
                                           IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                       });


                                       table.Cell().Element(CellStyle).AlignLeft().Text("- Nhất chí thông qua công nghệ sử dụng trong DAĐT");
                                       table.Cell().Element(CellStyle).AlignCenter().Text(II_5_1);
                                       table.Cell().Element(CellStyle).Text("- Nhất trí thông qua công nghệ sử dụng trong DAĐT sau khi được hoàn thiện chỉnh sửa, bổ sung thei các ý kiến góp ý nêu trên");
                                       table.Cell().Element(CellStyle).AlignCenter().Text(II_5_2);
                                       table.Cell().Element(CellStyle).Text("- Không nhất trí công nghệ sử dụng trong DAĐT");
                                       table.Cell().Element(CellStyle).AlignCenter().Text(II_5_3);
                                       IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                       //}
                                   });
                                   //kt table
                                   column.Item()
                                   .PaddingTop(5)
                                              .PaddingBottom(8)
                                 .Text(text =>
                                 {
                                     text.AlignLeft();
                                     text.Line("* Nêu rõ lý do trong trường hợp 'Không nhất trí công nghệ sử dụng trong DAĐT':");
                                     text.Span(II_5_4).Bold();

                                 });


                                   column.Item()
                                   .PaddingBottom(15)
                              .Text(text =>
                              {
                                  text.AlignLeft();
                                  text.Line("III. KẾT LUẬN VÀ KIẾN NGHỊ CỦA HỘI ĐỒNG").Bold();
                                  text.Line("(căn cứ kết quả của các thành viên Hội đồng, Chủ tịch Hội đồng đưa ra kết luận và kiến nghị của Hội đồng về công nghệ của dự án đầu tư đối với cơ quan chủ trì thẩm định hoặc có ý kiến về công nghệ dự án đầu tư):").Italic();
                                  text.Span(KetLuan).Bold();


                              });
                                   column.Item().Row(
                                    row =>
                                    {
                                        row.RelativeItem()

                                                     .AlignCenter()
                                                     .Text(text =>
                                                     {
                                                         //text.ParagraphSpacing(1);
                                          text.AlignCenter();
                                          text.Line("THƯ KÝ HỘI ĐỒNG").Bold();
                                          text.Line($"Ngày {TK_day} Tháng {TK_month} Năm {TK_year}").Italic();
                                          text.Line("(Ký, ghi rõ họ và tên)").Italic().LetterSpacing(0);
                                          text.Line(TK_Nguoiky).LineHeight(2);
                                      });
                                        row.RelativeItem()

                                                     .AlignCenter()
                                                     .Text(text =>
                                                     {
                                                         //text.ParagraphSpacing(1);
                                          text.AlignCenter();
                                          text.Line("TM.HỘI ĐÔNG").Bold();
                                          text.Line("CHỦ TỊCH").Bold();
                                          text.Line($"Ngày {CT_day} Tháng {CT_month} Năm {CT_year}").Italic();
                                          text.Line("(Ký, ghi rõ họ và tên)").Italic().LetterSpacing(0);
                                          text.Line(CT_Nguoiky).LineHeight(2);


                                      });
                                    });
                               });

                      });

                  page.Footer()
                 .Column(column =>
                 {

                     column.Item().PaddingTop(5).Width(100).LineHorizontal(1).LineColor(Colors.Black);
                     column.Item()
                        .Text(footerText =>
                        {
                            footerText.AlignLeft();
                            footerText.Line("Ghi tên cơ quan thành lập Hội đồng tư vấn khoa học và công nghệ");
                        });

                 });
              });

           }).GeneratePdf(path);
        return path;
    }

    public string XuatMau08TT9(string path, Workflow workflow)
    {
        var TenDuAn = "";
        var LoaiDuAn = "";
        var MucTieu = "";
        var QuyMo = "";
        var HinhThuc = "";
        var ChuDauTu = "";
        var DiaDiemThucHien = "";
        var TongMucDauTu = "";
        var NguonVon = "";
        var ThamQuyen = "";
        var CapCongTrinh = "";
        var ThoiGianThucHien = "";

        var II_1_1 = "";
        var II_2_1 = "";
        var II_3_1 = "";
        var II_3_2 = "";
        var II_3_3 = "";

        var II_4_1 = "";
        var II_5_1 = "";
        var II_6_1 = "";
        var II_6_2 = "";
        var II_6_2_1 = "";
        var II_6_2_2 = "";
        var II_6_2_3 = "";
        var II_6_2_4 = "";
        var II_6_2_5 = "";
        var II_6_2_6 = "";
        var II_6_2_7 = "";
        var II_6_2_8 = "";

        var II_6_3_1 = "";
        var II_6_4_1 = "";
        var II_6_5_1 = "";
        var II_6_6_1 = "";
        var II_6_7_1 = "";

        var II_6_8_1 = "";
        var II_6_9_1 = "";
        var II_6_9_2 = "";
        var II_6_9_3 = "";

        var KetLuan = "";
        var KienNghi = "";
        var MaChuKy = "";
        var KyTen = "Nguyen";
        var KyNgay = "";
        int day = 00;
        int month = 00;
        int year = 0000;

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    TenDuAn = data1.TenDuAn ?? "";
                    LoaiDuAn = data1.LoaiDuAn ?? "";
                    MucTieu = data1.MucTieu ?? "";
                    QuyMo = data1.QuyMo ?? "";
                    HinhThuc = data1.HinhThuc ?? "";
                    ChuDauTu = data1.ChuDauTu ?? "";
                    DiaDiemThucHien = data1.DiaDiemThucHien ?? "";
                    TongMucDauTu = data1.TongMucDauTu ?? "";
                    NguonVon = data1.NguonVon ?? "";
                    ThamQuyen = data1.ThamQuyen ?? "";
                    CapCongTrinh = data1.CapCongTrinh ?? "";
                    ThoiGianThucHien = data1.ThoiGianThucHien ?? "";

                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data.TomTat;
                    II_1_1 = data2.d1 ?? "";
                    II_2_1 = data2.d2 ?? "";
                    II_3_1 = data2.d3.a ?? "";
                    II_3_2 = data2.d3.b ?? "";
                    II_3_3 = data2.d3.c ?? "";

                    II_4_1 = data2.d4 ?? "";
                    II_5_1 = data2.d5 ?? "";
                    II_6_1 = data2.d6.d1 ?? "";
                    II_6_2 = data2.d6.d2.a.a1 ?? "";
                    II_6_2_1 = data2.d6.d2.a.a2 ?? "";
                    II_6_2_2 = data2.d6.d2.a.a3 ?? "";
                    II_6_2_3 = data2.d6.d2.a.a4 ?? "";
                    II_6_2_4 = data2.d6.d2.a.a5 ?? "";
                    II_6_2_5 = data2.d6.d2.a.a6 ?? "";
                    II_6_2_6 = data2.d6.d2.b.b1 ?? "";
                    II_6_2_7 = data2.d6.d2.b.b2 ?? "";
                    II_6_2_8 = data2.d6.d2.b.b3 ?? "";

                    II_6_3_1 = data2.d6.d3 ?? "";
                    II_6_4_1 = data2.d6.d4 ?? "";
                    II_6_5_1 = data2.d6.d5 ?? "";
                    II_6_6_1 = data2.d6.d6 ?? "";
                    II_6_7_1 = data2.d6.d7 ?? "";

                    II_6_8_1 = data2.d6.d8 ?? "";
                    II_6_9_1 = data2.d6.d9.a ?? "";
                    II_6_9_2 = data2.d6.d9.b ?? "";
                    II_6_9_3 = data2.d6.d9.c ?? "";

                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;

                    KetLuan = data3.KetLuan ?? "";
                    KienNghi = data3.KienNghi ?? "";

                    MaChuKy = data3.KyTen.MaChuKy ?? "";
                    KyNgay = data3.KyTen.KyNgay ?? "";
                    string[] parts = KyNgay.Split(' ');


                    string datePart = parts[0];
                    string[] dateParts = datePart.Split('/');


                    day = int.Parse(dateParts[0]);
                    month = int.Parse(dateParts[1]);
                    year = int.Parse(dateParts[2]);

                }
            }
        }
        QuestPDF.Fluent.Document
        .Create(container =>
        {
            container.Page(page =>
            {
                page.Size(PageSizes.A4);

                page.Margin(2, Unit.Centimetre);
                page.PageColor(Colors.White);

                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                page.Header().ShowOnce()
               .Column(column =>
               {
                   column.Item().Row(
                     row =>
                     {
                         row.RelativeItem()

                          .AlignRight()


                                 .Text(text =>
                                 {

                                     text.AlignRight();
                                     text.Line("Mẫu số 8");
                                     text.Span("09/2020/TT-BKHCN").LetterSpacing(0);

                                 });
                     });
                   column.Item().Row(

                        row =>
                        {

                            row.RelativeItem(3)
                               .AlignLeft()

                                .Text(text =>
                                {

                                    text.AlignCenter();
                                    text.Line("CƠ QUAN").Bold();
                                    text.Line("HỘI ĐÔNG TƯ VẤN KHOA HỌC");
                                    text.Line("VÀ CÔNG NGHỆ").Underline().Bold();
                                });

                            row.RelativeItem(4)
                                        .AlignRight()
                                        .Text(text =>
                                        {

                                            text.AlignCenter();
                                            text.Line("CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold();
                                            text.Line("Độc lập -Tự do - Hạnh phúc").Underline().Bold();
                                            text.Span("  ,ngày   ,tháng   ,năm 20").Italic().LineHeight(3);
                                        });

                        });

               });
                page.Content()
                   .Column(column =>
                        {
                            column.Item().Row(
                             row =>
                             {
                                 row.RelativeItem()

                                   .AlignCenter()
                                   .Text(text =>
                                   {

                                       text.AlignCenter();
                                       text.Line("BÁO CÁO KẾT QUẢ LÀM VIỆC").Bold();
                                       text.Line("CỦA HỘI ĐỒNG TƯ VẤN KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                                       text.Span("TRONG GIAI ĐOẠN XEM XÉT QUYẾT ĐỊNH CHỦ TRƯƠNG ĐẦU TƯ").Bold().LetterSpacing(0);

                                   });

                             });
                            column.Item().
                            PaddingTop(3)
                            .AlignCenter()
                            .Width(40).PaddingVertical(2).
                            LineHorizontal(1)
                            .LineColor(Colors.Black);

                            //nọi dung
                            column.Item().Row(
                               row =>
                               {
                                   row.RelativeItem()
                                   .AlignLeft()
                                   .PaddingVertical(3)
                                          //.Border(1)
                                          .Text(text =>
                                          {
                                              text.ParagraphSpacing(1);
                                              //text.AlignLeft();
                                              text.Line(" I. NHỮNG THÔNG TIN CHUNG VỀ DỰ ÁN ĐẦU TƯ").Bold();
                                              text.Span("1. Tên Dự án đầu tư (DAĐT): ");
                                              text.Line(TenDuAn).Bold();
                                              text.Span("2. Loại dự án: ");
                                              text.Line(LoaiDuAn).Bold();
                                              text.Span("3. Mục tiêu đầu tư dự án: ");
                                              text.Line(MucTieu).Bold();
                                              text.Span("4. Quy mô DAĐT: ");
                                              text.Line(QuyMo).Bold();
                                              text.Span("5. Hình thức đầu tư: ");
                                              text.Line(HinhThuc).Bold();
                                              text.Span("6. Chủ đầu tư: ");
                                              text.Line(ChuDauTu).Bold();
                                              text.Span("7. Địa điểm thực hiện DAĐT: ");
                                              text.Line(DiaDiemThucHien).Bold();
                                              text.Span("8. Tổng mức đầu tư theo phưong án kiến nghị: ");
                                              text.Line(TongMucDauTu).Bold();
                                              text.Span("9. Nguồn vốn đầu tư theo phương án kiến nghị: ");
                                              text.Line(NguonVon).Bold();
                                              text.Span("10. Thẩm quyền quyết định chủ trương đầu tư: ");
                                              text.Line(ThamQuyen).Bold();
                                              text.Span("11. Loại và cấp công trình xây dựng DAĐT: ");
                                              text.Line(CapCongTrinh).Bold();
                                              text.Span("12. Thời gian thực hiện: ").LineHeight(1);
                                              text.Line(ThoiGianThucHien).Bold();
                                          });

                                   column.Item()
                                     .Text(text =>
                                     {
                                         text.ParagraphSpacing(1);
                                         //text.AlignLeft();
                                         text.Span(" II.TÓM TẮT QUẢ TRÌNH THẢM ĐỊNH HOẶC CÓ Ý KIÉN VỀ CÔNG NGHỆ").Bold();

                                     });
                                   column.Item()
                                  .PaddingBottom(8)
                                     .Text(text =>
                                     {
                                         text.AlignLeft();
                                         text.Line("1. Về việc thành lập, hoạt động của Hội đồng tư vấn khoa học và công nghệ");
                                         text.Span(II_1_1).Bold();

                                     });
                                   column.Item()
                                  .PaddingBottom(8)
                                    .Text(text =>
                                    {
                                        text.AlignLeft();
                                        text.Line("2. Chủ đầu tư báo cáo tóm tắt dự án đầu tư (nếu có)");
                                        text.Span(II_2_1).Bold();

                                    });

                                   column.Item()

                                   .PaddingBottom(8)
                                  .Text(text =>
                                  {
                                      text.AlignLeft();
                                      text.Line("3. Nội dung trao đổi tại cuộc họp");
                                      text.Line("3.1. Ý kiến của các ủy viên phản biện");
                                      text.Span(II_3_1).Bold();
                                  });
                                   column.Item()
                                   .PaddingBottom(8)
                                  .Text(text =>
                                  {
                                      text.AlignLeft();
                                      text.Line("3.2. Ý kiến của các thành viên Hội đồng");
                                      text.Span(II_3_2).Bold();
                                  });

                                   column.Item()
                                         .PaddingBottom(8)
                                         .Text(text =>
                                         {
                                             text.AlignLeft();
                                             text.Line("3.3. Ý kiến của đại biểu được mời tham dự (nếu có)");
                                             text.Span(II_3_3).Bold();
                                         });
                                   column.Item()
                                   .PaddingBottom(8)
                                .Text(text =>
                                {
                                    text.AlignLeft();
                                    text.Line("4. Giải trình của chủ đầu tư (nếu có)");
                                    text.Span(II_4_1).Bold();
                                });
                                   column.Item()
                                   .PaddingBottom(8)
                              .Text(text =>
                              {
                                  text.AlignLeft();
                                  text.Line("5. Kết quả ý kiến của các thành viên Hội đồng");
                                  text.Span(II_5_1).Bold();
                              });
                                   column.Item()
                                .Text(text =>
                                {
                                    text.AlignLeft();
                                    text.Span("6. Kết luận và kiến nghị của Hội đồng");
                                    text.Span("(căn cứ kết quả ỷ kiến của các thành viên Hội đồng, Chủ tịch Hội đồng đưa ra kết luận và kiến nghị của Hội đồng về công nghệ của DAĐT đối với cơ quan chủ trì thẩm định hoặc có ỷ kiến về công nghệ DAĐT):").Italic();
                                });
                                   column.Item()

                                   .PaddingBottom(8)
                                  .Text(text =>
                                  {
                                      text.AlignLeft();
                                      text.Line("6.1. Công nghệ lựa chọn trong DAĐT thuộc các Danh mục công nghệ theo quy định của Luật Chuyển giao công nghệ và Nghị định số 76/2018/NĐ-CP (công nghệ khuyến khích chuyển giao, công nghệ hạn chế chuyển giao, công nghệ cấm chuyển giao)");
                                      text.Span(II_6_1).Bold();

                                  });
                                   column.Item()

                                   .PaddingBottom(8)
                               .Text(text =>
                               {
                                   text.AlignLeft();
                                   text.Line("6.2. Sự phù họp của phương án công nghệ được lựa chọn");
                                   text.Line("a) về công nghệ: Xem xét phương án lựa chọn công nghệ nêu trong hồ sơ DAĐT, cụ thể:");
                                   text.Line("- Phân tích, so sánh ưu, nhược điểm của tùng phương án công nghệ nêu trong hồ sơ DAĐT để nhận xét về phương án công nghệ được lựa chọn:");
                                   text.Span(II_6_2).Bold();

                               });
                                   column.Item()
                                .PaddingBottom(8)
                               .Text(text =>
                               {
                                   text.AlignLeft();
                                   text.Line("- Sự hoàn thiện của công nghệ được lựa chọn:");
                                   text.Span(II_6_2_1).Bold();

                               });
                                   column.Item()
                                   .PaddingBottom(8)
                              .Text(text =>
                              {
                                  text.AlignLeft();
                                  text.Line("- Công nghệ thuộc loại tiên tiến/hiện đại hoặc trung bình, lạc hậu:");
                                  text.Span(II_6_2_2).Bold();

                              });

                                   column.Item()
                                          .PaddingBottom(8)
                                        .Text(text =>
                                        {
                                            text.AlignLeft();
                                            text.Line("- Tính mới của công nghệ:");
                                            text.Span(II_6_2_3).Bold();

                                        });
                                   column.Item()
                                   //
                                   .PaddingBottom(8)
                          .Text(text =>
                          {
                              text.AlignLeft();
                              text.Line("- Sự phù họp của phương án công nghệ được lựa chọn với mục tiêu, quy mô,công suất của dự án:");
                              text.Span(II_6_2_4).Bold();

                          });
                                   column.Item()

                                   .PaddingBottom(8)
                                   .Text(text =>
                                   {
                                       text.AlignLeft();
                                       text.Line("- Sự phù họp của phương án công nghệ được lựa chọn với các yêu cầu, quy định của quy chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thâm quyền (nếu có)");
                                       text.Span(II_6_2_5).Bold();

                                   });

                                   column.Item()
                                   .PaddingBottom(8)
                                  .Text(text =>
                                  {
                                      text.AlignLeft();
                                      text.Line("b) Về máy móc, thiết bị chính trong dây chuyền công nghệ thuộc phương án công nghệ lựa chọn:");
                                      text.Line("- Đánh giá sự phù hợp và tính đồng bộ của máy móc, thiết bị chính ừong dây chuyền công nghệ:");

                                      text.Span(II_6_2_6).Bold();

                                  });

                                   column.Item()

                                   .PaddingBottom(8)
                                .Text(text =>
                                {
                                    text.AlignLeft();

                                    text.Line("- Máy móc, thiết bị chính có tính năng, thông số kỹ thuật, công suất, chất lượng phù hợp với phương án công nghệ lựa chọn trong dự án không?");
                                    text.Span(II_6_2_7).Bold();
                                });

                                   column.Item()

                                   .PaddingBottom(8)
                              .Text(text =>
                              {
                                  text.AlignLeft();

                                  text.Line("- Máy móc, thiết bị chính trong dây chuyền công nghệ có phù họp với các yêu cầu, quy định của quy chuẩn kỹ thuật, tiêu chuẩn được áp dụng cho dự án và các quy định khác của cơ quan quản lý nhà nước có thẩm quyền (nếu có):");
                                  text.Span(II_6_2_8).Bold();



                              });

                                   column.Item()
                                   .PaddingBottom(8)
                          .Text(text =>
                          {
                              text.AlignLeft();

                              text.Line("6.3. Vê việc kiêm chứng sử dụng công nghệ tại các quôc gia phát triên (nêu có)");
                              text.Span(II_6_3_1).Bold();



                          });
                                   column.Item()
                                         .PaddingBottom(8)
                                        .Text(text =>
                                        {
                                            text.AlignLeft();

                                            text.Line("6.4. Về đào tạo, hỗ trợ kỹ thuật cho vận hành dây chuyền công nghệ của DAĐT\r\n(nếu có):");
                                            text.Span(II_6_4_1).Bold();



                                        });

                                   column.Item()
                                   //
                                   .PaddingBottom(8)
                             .Text(text =>
                             {
                                 text.AlignLeft();

                                 text.Line("6.5. Vê việc đáp ứng các điêu kiện sử dụng công nghệ");
                                 text.Span(II_6_5_1).Bold();


                             });

                                   column.Item()
                                   //
                                   .PaddingBottom(8)
                             .Text(text =>
                             {
                                 text.AlignLeft();
                                 text.Line("6.6. Về sơ bộ tác động ảnh hưởng của công nghệ đến môi trường");
                                 text.Span(II_6_6_1).Bold();


                             });
                                   column.Item()
                                   .PaddingBottom(8)
                          .Text(text =>
                          {
                              text.AlignLeft();

                              text.Line("6.7. Về dự thảo họp đông chuyên giao công nghệ (nêu có)");
                              text.Span(II_6_7_1).Bold();
                          });
                                   column.Item()
                                   //
                                   .PaddingBottom(8)
                        .Text(text =>
                        {
                            text.AlignLeft();

                            text.Line("6.8. về đáp ứng các tiêu chí, tiêu chuẩn theo quy định của pháp luật về công nghệ cao (đối với DAĐT trong khu công nghệ cao)");
                            text.Span(II_6_8_1).Bold();
                        });
                                   column.Item()
                                   //
                                   .PaddingBottom(8)
                                     .Text(text =>
                                     {
                                         text.AlignLeft();
                                         text.Line("6.9. Những vấn đề khác có liên quan (nếu có)");
                                         text.Line("- Xem xét, đánh giá sơ bộ các lợi ích kinh tế - xã hội do DAĐT mang lại (khả năng tạo năng lực sản xuất mới, ngành nghề mới, sản phẩm mới, mở rộng thị trường, tạo việc làm cho người lao động, khả năng sử dụng phụ tùng, linh kiện,nguyên liệu sản xuất trong nước, đóng góp cho ngân sách nhà nước, lợi ích kinh tế của chủ đầu tư...):");
                                         text.Span(II_6_9_1).Bold();
                                     });
                                   column.Item()
                                   .PaddingBottom(8)
                        .Text(text =>
                        {
                            text.AlignLeft();
                            text.Line("- Xem xét, đánh giá sơ bộ hiệu quả của công nghệ đối vởi sự phát triển của địa phương, ngành (góp phần đổi mới công nghệ sản xuất của địa phương, gia tăng giá trị sản phẩm, tạo sản phẩm chủ lực của địa phương; nâng cao trĩnh độ côngnghệ sản xuất của ngành):");
                            text.Span(II_6_9_2).Bold();
                        });
                                   column.Item()
                                           .PaddingBottom(8)
                                          .Text(text =>
                                          {
                                              text.AlignLeft();
                                              text.Line("- Các vấn đề khác:");
                                              text.Span(II_6_9_3).Bold();
                                          });
                                   column.Item()
                                   //
                                   .PaddingBottom(8)
                     .Text(text =>
                     {
                         text.AlignLeft();
                         text.Line("III.KẾT LUẬN VÀ KIẾN NGHỊ").Bold();
                         text.Line("1. Kết luận");
                         text.Span(KetLuan).Bold();
                     });
                                   column.Item()
                                          .PaddingBottom(8)
                                         .Text(text =>
                                         {
                                             text.AlignLeft();
                                             text.Line("2. Kiến nghị");
                                             text.Span(KienNghi).Bold();
                                         });

                               });
                            column.Item().Row(
                         row =>
                         {
                             row.RelativeItem(4)

                              .Text(text =>
                              {
                                  text.AlignCenter();
                              });
                             row.RelativeItem(5)
                                      .PaddingTop(40)
                               .Text(text =>
                               {
                                   text.AlignCenter();
                                   text.Line("TM. HỘI ĐỒNG").Bold();
                                   text.Line("CHỦ TỊCH").Bold();
                                   text.Line($"Ngày {day} Tháng {month} Năm {year}").Italic();
                                   text.Line("(Ký,ghi rõ họ và tên)").Italic();
                                   text.Line(KyTen).LineHeight(2);
                               });
                         });
                        });

                page.Footer()
               .AlignCenter()
               .Text(x =>
               {
                   x.Span("Page ");
                   x.CurrentPageNumber();
               });
            });
        }).GeneratePdf(path);
        return path;
    }

    public string XuatMau09TT9(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
        .Create(container =>
        {
            var coQuan = "";
            var thu = "";
            var ngay = "";
            var thang = "";
            var nam = "";

            var I_1 = "";
            var I_2 = "";
            var I_3 = "";
            var I_4 = "";
            var I_5 = "";
            var I_6 = "";
            var I_7 = "";
            var I_8 = "";
            var I_9 = "";
            var I_10 = "";

            var II_1 = "";
            var II_2 = "";
            var II_3_1 = "";
            var II_3_2 = "";
            var II_3_3 = "";
            var II_4 = "";
            var II_5 = "";
            var II_6_1 = "";
            var II_6_2 = "";
            var II_6_3_1 = "";
            var II_6_3_2 = "";
            var II_6_3_3 = "";
            var II_6_3_4 = "";
            var II_6_4_1 = "";
            var II_6_4_2 = "";
            var II_6_4_3 = "";
            var II_6_4_4 = "";
            var II_6_4_5 = "";
            var II_6_4_6 = "";
            var II_6_5_1 = "";
            var II_6_5_2 = "";
            var II_6_5_3 = "";
            var II_6_6_1 = "";
            var II_6_6_2 = "";
            var II_6_6_3 = "";
            var II_6_6_4 = "";
            var II_6_7 = "";
            var II_6_8 = "";
            var II_6_9_1 = "";
            var II_6_9_2 = "";
            var II_6_9_3 = "";
            var III_1 = "";
            var III_2 = "";


            var chuKy = "";
            var hoVaTen = "";
            var ngayKy = "";
            var thangKy = "";
            var namKy = "";

            List<WorkflowStep> steps = workflow.WorkflowSteps;
            dynamic? step1;
            dynamic? step2;
            dynamic? step3;

            foreach (WorkflowStep workflowStep in steps)
            {
                if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                {
                    step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step1 != null)
                    {
                        dynamic? data1 = step1.form.data;
                        I_1 = data1.TenDuAn;
                        I_2 = data1.LoaiDuAn;
                        I_3 = data1.HinhThuc;
                        I_4 = data1.ChuDauTu;
                        I_5 = data1.DiaDiemThucHien;
                        I_6 = data1.TongMucDauTu;
                        I_7 = data1.NguonVon;
                        I_8 = data1.ThamQuyen;
                        I_9 = data1.CapCongTrinh;
                        I_10 = data1.ThoiGianThucHien;
                    }
                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                {
                    step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step2 != null)
                    {
                        dynamic? data1 = step2.form.data.TomTat;

                        II_1 = data1.d1;
                        II_2 = data1.d2;

                        II_3_1 = data1.d3.a;
                        II_3_2 = data1.d3.b;
                        II_3_3 = data1.d3.c;

                        II_4 = data1.d4;
                        II_5 = data1.d5;

                        II_6_1 = data1.d6.d1;
                        II_6_2 = data1.d6.d2;

                        II_6_3_1 = data1.d6.d3.a;
                        II_6_3_2 = data1.d6.d3.b;
                        II_6_3_3 = data1.d6.d3.c;
                        II_6_3_4 = data1.d6.d3.d;

                        II_6_4_1 = data1.d6.d4.a;
                        II_6_4_2 = data1.d6.d4.b;
                        II_6_4_3 = data1.d6.d4.c;

                        II_6_4_4 = data1.d6.d4.d.d1;
                        II_6_4_5 = data1.d6.d4.d.d2;
                        II_6_4_6 = data1.d6.d4.d.d3;

                        II_6_5_1 = data1.d6.d5.a;
                        II_6_5_2 = data1.d6.d5.b;
                        II_6_5_3 = data1.d6.d5.c;

                        II_6_6_1 = data1.d6.d6.a;
                        II_6_6_2 = data1.d6.d6.b;
                        II_6_6_3 = data1.d6.d6.c;
                        II_6_6_4 = data1.d6.d6.d;

                        II_6_7 = data1.d6.d7;
                        II_6_8 = data1.d6.d8;

                        II_6_9_1 = data1.d6.d9.a;
                        II_6_9_2 = data1.d6.d9.b;
                        II_6_9_3 = data1.d6.d9.c;
                    }
                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                {
                    step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step3 != null)
                    {
                        dynamic? data3 = step3.form.data;

                        III_1 = data3.KetLuan;
                        III_2 = data3.KienNghi;

                        if (data3.KyTen != null)
                        {
                            string thoiGian = data3.KyTen.KyNgay.ToString();
                            string[] partsFull = thoiGian.Split(' ');
                            string partThoiGian = partsFull[0];
                            string[] part = partThoiGian.Split('/');
                            ngayKy = part[0];
                            thangKy = part[1];
                            namKy = part[2];
                            hoVaTen = data3.KyTen.NguoiKy;
                        }
                    }

                }
            }
            container.Page(page =>
            {
                page.Size(PageSizes.A4);
                page.Margin(2, Unit.Centimetre);
                page.PageColor(Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                page.Header()
                    .Column(column =>
                    {

                    });
                page.Content()
                .Column(column =>
                {
                    column.Item().AlignRight().Text("Mẫu số 9").FontSize(10);
                    column.Item().AlignRight().Text("09/2020/TT-BKHCN").Light().FontSize(10);
                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn(40);
                            columns.RelativeColumn(60);
                        });

                        //row 1
                        table.Cell().Row(1).Column(1).Text("CƠ QUAN (1) " + coQuan).FontSize(14);
                        table.Cell().Row(1).Column(2).Text("CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM").Bold();
                        table.Cell().Row(3).Column(1).AlignCenter().Text("VÀ CÔNG NGHỆ").Bold().Underline();

                        //row 2
                        table.Cell().Row(2).Column(1).Text("HỘI ĐỒNG TƯ VẤN KHOA HỌC").Bold();
                        table.Cell().Row(2).Column(2).AlignCenter().Text("Độc lập - Tự do - Hạnh phúc").Bold().Underline();
                    });
                    column.Item().AlignRight().Text(thu + ", ngày " + ngay + ", tháng " + thang + ", năm 20" + nam).Light().FontSize(14);
                    //header

                    column.Item().PaddingTop(35).AlignCenter().Text("BÁO CÁO KẾT QUẢ LÀM VIỆC CỦA HỘI ĐỒNG TƯ VẤN KHOA HỌC").Bold().FontSize(14);
                    column.Item().AlignCenter().Text("VÀ CÔNG NGHỆ TRONG GIAI ĐOẠN XEM XÉT QUYẾT ĐỊNH ĐẦU TƯ").Bold().FontSize(14);
                    column.Item().AlignCenter().Text("_______________").FontSize(14);

                    column.Item().PaddingTop(20).AlignLeft().Text("I. NHỮNG THÔNG TIN CHUNG VỀ DỰ ÁN ĐẦU TƯ").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("1. Tên Dự án đầu tư (DAĐT): ").FontSize(14);
                        text.Span(I_1).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("2. Loại dự án: ").FontSize(14);
                        text.Span(I_2).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("3. Hình thức đầu tư: ").FontSize(14);
                        text.Span(I_3).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("4. Chủ đầu tư: ").FontSize(14);
                        text.Span(I_4).SemiBold().FontSize(14);
                        ;
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("5. Địa điểm thực hiện DAĐT: ").FontSize(14);
                        text.Span(I_5).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("6. Tổng mức đầu tư theo phương án kiến nghị: ").FontSize(14);
                        text.Span(I_6).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("7. Nguồn vốn đầu tư theo phưong án kiến nghị: ").FontSize(14);
                        text.Span(I_7).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("8. Thẩm quyền quyết định đầu tư: ").FontSize(14);
                        text.Span(I_8).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("9. Loại và cấp công trình xây dựng DAĐT: ").FontSize(14);
                        text.Span(I_9).SemiBold().FontSize(14);
                    });
                    column.Item().PaddingTop(5).AlignLeft().Text(text =>
                    {
                        text.Span("10. Thời gian thực hiện: ").FontSize(14);
                        text.Span(I_10).SemiBold().FontSize(14);
                    });

                    column.Item().PaddingTop(10).AlignLeft().Text("II. TÓM TẮT QUÁ TRÌNH THẨM ĐỊNH HOẶC CÓ Ý KIẾN VỀ CÔNG NGHỆ").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("1. Căn cứ vào Biên bản hợp Hội đồng tư vấn khoa học và công nghệ").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2. Chủ đầu tư báo cáo tóm tắt dự án đầu tư (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("3. Nội dung trao đổi tại cuộc hợp").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("3.1. Ý kiến của các ủy viên phản biện").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_3_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("3.2. Ý kiến của các thành viên Hội đồng").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("(1) Ghi tên cơ quan thành lập Hội đồng tư vấn khoa học và công nghệ").FontSize(9);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_3_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("3.3. Ý kiến của đại biêu được mời tham dự (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_3_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("4. Giải trình của chủ đầu tư (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("5. Kết quả ý kiến của các thành viên Hội đồng").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_5).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6. Kết luận và kiến nghị của Hội đồng (căn cứ kết quả ỷ kiến của các thành viên\r\nHội đồng, Chủ tịch Hội đồng đưa ra kết luận và kiến nghị của Hội đồng về công\r\nnghệ của DAĐT đôi với cơ quan chủ trì thấm định hoặc có ỷ kiến về công nghệ\r\nDAĐT)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.1. Xem xét và cho ý kiến công nghệ DAĐT thuộc các Danh mục công nghệ\r\ntheo quy định của Luật Chuyển giao công nghệ và Nghị định số 76/2018/NĐ-CP\r\n(công nghệ khuyến khích chuyển giao, công nghệ hạn chế chuyển giao, công\r\nnghệ câm chuyên giao)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.2. Sự phù hợp của công nghệ, máy móc, thiết bị với phương án được lựa chọn\r\ntrong giai đoạn quyết định chủ trương đầu tư").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.3. Sự phù hợp của phương án công nghệ được lựa chọn với mục tiêu, quy mô,\r\ncông suất của DAĐT").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét dây chuyền công nghệ bảo đảm sản xuất được các sản phẩm đã dự\r\nkiến cả về số lượng và chất lượng:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_3_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét dây chuyền công nghệ bảo đảm các tiêu chuẩn về tiết kiệm năng\r\nlượng, vệ sinh công nghiệp, an toàn lao động và vệ sinh môi trường:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_3_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Xem xét phương án lựa chọn công nghệ nêu trong hồ sơ DAĐT: phân tích, so\r\nsánh ưu nhược điểm của từng phương án và trên cơ sở xem xét tính hoàn thiện\r\ncủa công nghệ, mức độ tiên tiến của dây chuyền công nghệ, tính thích họp của\r\ncông nghệ để nhận xét về phương án công nghệ được chọn:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_3_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Dự thảo Hợp đồng chuyển giao công nghệ (nếu DAĐT có góp vốn bằng công\r\nnghệ):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_3_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.4. Sự phù hợp của máy móc, thiết bị trong dây chuyền công nghệ").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Máy móc, thiết bị trong dây chuyền công nghệ bảo đảm có tính năng, chất\r\nlượng phù hợp với yêu cầu của công nghệ nhằm tạo ra sản phẩm có chất lượng\r\nvà số lượng như dự kiên:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_4_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Tính đồng bộ của máy móc, thiết bị trong dây chuyền công nghệ (danh mục\r\ncác máy móc, thiết bị của DAĐT có khả năng thực hiện các công đoạn trong dây\r\nchuyền công nghệ, đáp ứng yêu cầu về số lượng, chất lượng các sản phẩm). Đối với các dự án đầu tư mà bên nước ngoài tham gia góp vốn bằng máy móc, thiết bị thì cần bảo đảm tính đông bộ và phù họp với công nghệ:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_4_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Các đặc tính, tính năng kỹ thuật của máy móc, thiết bị; công suất của máy móc, thiết bị; tình trạng thiết bị (mới hay đã qua sử dụng); thời gian bảo hành:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_4_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Đối với dự án đầu tư có liệt kê danh sách máy móc, thiết bị, dây chuyền cồng nghệ đã qua sử dụng dự kiến nhập khẩu:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("+ Xem xét tình trạng của máy móc, thiết bị, dây chuyền công nghệ (tuổi thiết bị, thời gian đã sử dụng, thời gian sử dụng còn lại,...):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_4_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("+ Nguồn gốc, xuất xứ của máy móc, thiết bị, dây chuyền công nghệ:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_4_5).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("+ Xem xét mức độ phù hợp của các tiêu chuẩn sản xuất máy móc, thiết bị, dây chuyền công nghệ so với quy định của Quy chuẩn kỹ thuật Quốc gia (QCVN) hoặc Tiêu chuẩn Quốc gia (TCVN) của Việt Nam hoặc Tiêu chuẩn của các nước G7 về an toàn, tiết kiệm năng lượng, bảo vệ môi trường và các quy định khác của pháp luật có liên quan:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_4_6).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.5. Sản phẩm, thị trường sản phẩm").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Tiêu chuẩn, chất lượng sản phẩm:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_5_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Dự báo nhu cầu của thị trường (trong nước, khu vực và thế giới); dự báo thị phần của sản phẩm, tỷ lệ xuất khẩu:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_5_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Khả năng cạnh tranh của sản phẩm (về chất lượng, mẫu mã, giá thành):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_5_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.6. Sự phù hợp, khả năng đáp ứng nguyên liệu, nhiên liệu, vật liệu cho việc vận hành công nghệ, máy móc, thiết bị").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Khả năng khai thác, vận chuyển, lưu giữ nguyên vật liệu để cung cấp cho dự án:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_6_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Chủng loại, khối lượng, giá trị các loại linh kiện, phụ tùng hoặc bán thành phẩm nhập ngoại để gia công, lắp ráp, sản suất ra sản phẩm:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_6_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Chủng loại, khối lượng, giá trị nguyên, nhiên, vật liệu phải nhập ngoại hoặc sử dụng nguyên liệu trong nước phục vụ sản xuất:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_6_3).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Khả năng sử dụng vật liệu ít gây ô nhiễm môi trường:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_6_4).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.7. Chương trình đào tạo, hỗ trợ kỹ thuật để vận hành dây chuyền công nghệ, máy móc, thiết bị").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_7).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.8. Chi phí đâu tư cho công nghệ, máy móc, thiêt bị, đào tạo, hô trợ kỹ thuật").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_8).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("6.9. Những vấn đề khác có liên quan (nếu có)").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Hiệu quả của công nghệ đối với sự phát triển của địa phưong, ngành (góp phần đổi mới công nghệ, đổi mới sản phẩm, gia tăng giá trị của sản phẩm, tạo ra sản phẩm chủ lực của địa phương, giúp nâng cao trình độ công nghệ sản xuất của ngành):").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_9_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Đánh giá tác động của công nghệ đến môi trường: tự nhiên, kinh tế - xã hội, sức khỏe cộng đồng:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_9_2).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("- Các vấn đề khác:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + II_6_9_3).SemiBold().FontSize(14);

                    column.Item().PaddingTop(5).AlignLeft().Text("III. KẾT LUẬN VÀ KIẾN NGHỊ").Bold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("1. Kết luận:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + III_1).SemiBold().FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text("2. Kiến nghị:").FontSize(14);
                    column.Item().PaddingTop(5).AlignLeft().Text(" " + III_2).SemiBold().FontSize(14);
                    //

                    column.Item().PaddingTop(20).PaddingRight(35).AlignRight().Text("TM. HỘI ĐỒNG").Bold().FontSize(15);
                    column.Item().AlignRight().PaddingRight(50).Text("CHỦ TỊCH").Bold().FontSize(15);
                    column.Item().PaddingTop(1).PaddingRight(2).AlignRight().Text("Ngày " + ngayKy + ", Tháng " + thangKy + ", Năm " + namKy).Italic().FontSize(14);
                    column.Item().PaddingTop(20).PaddingRight(45).AlignRight().Text(hoVaTen).Italic().FontSize(14);
                });

                //    page.Footer()
                //        .AlignCenter()
                //        .Text(x =>
                //        {
                //            x.Span("Trang ");
                //            x.CurrentPageNumber();
                //       });
            });
        }).GeneratePdf(path);

        return path;
    }

    #endregion

    #region Thông tu 13
    public string XuatMau10BTT13(string path, Workflow workflow)
    {

        var tu_ngay = "";
        var tu_thang = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";


        QuestPDF.Fluent.Document
        .Create(container =>
    {
      

        var NUMBER_ROW = 2; // Số hàng cần nhập liệu + 1 trong bảng

        Dictionary<string, string> II_values = new Dictionary<string, string>();

        for (int i = 0; i < NUMBER_ROW; i++)
        {
            for (int col = 2; col <= 12; col++)
            {
                II_values[$"II_{i + 2}_{col}"] = "";
            }
        }
        // Biến động nhập theo hàng và cột trong bảng
  

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;

       

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;

                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 2)
                            {
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay ==null )
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }



                        foreach (var item in data1.d)
                        {
                            if (item != null)
                            {

                                II_values["II_" + NUMBER_ROW + "_2"] = item.DonVi ?? "";
                                II_values["II_" + NUMBER_ROW + "_3"] = item.Tong_GiaiPhap ??"";
                                II_values["II_" + NUMBER_ROW + "_4"] = item.Tong_SangKienCongNhan ?? "";
                                II_values["II_" + NUMBER_ROW + "_5"] = item.Tong_SangKienApDung ??"";
                                II_values["II_" + NUMBER_ROW + "_6"] = item.TongTien_LamLoi ??"";
                                II_values["II_" + NUMBER_ROW + "_7"] = item.TongTien_ThuLao ??"";
                                II_values["II_" + NUMBER_ROW + "_8"] = item.Tong_SangKienChuyenGiao ??"";
                                II_values["II_" + NUMBER_ROW + "_9"] = item.TongTien_ThuDuoc ??"";
                                II_values["II_" + NUMBER_ROW + "_10"] = item.TongCanBo_NangLuong ??"";
                                II_values["II_" + NUMBER_ROW + "_11"] = item.Tong_SangKienCapTinh ??"";
                                II_values["II_" + NUMBER_ROW + "_12"] = item.Tong_SangKienToanQuoc ??"";

                                NUMBER_ROW++;
                            }
                        }


                    }
                
                }          

            }

        }

        container.Page(page =>
        {
            page.Size(PageSizes.A4.Landscape());
            page.Margin(2, Unit.Centimetre);
            page.PageColor(Colors.White);
            page.DefaultTextStyle(x => x.FontSize(20));
            page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

            page.Header()
                .Column(column =>
                {

                });
            page.Content()

            .Column(column =>
            {
                column.Item().Table(table =>
                {
                    table.ColumnsDefinition(columns =>
                    {
                        columns.RelativeColumn();
                        columns.ConstantColumn(350);
                        columns.RelativeColumn();

                    });

                    //row 1
                    table.Cell().Row(1).Column(1).Text("Biểu số 10b/SHTT").Bold();
                    table.Cell().Row(1).Column(2).Element(Center).Text("TÌNH HÌNH TRIỂN KHAI CÁC BIỆN PHÁP THÚC ĐẨY").Bold();
                    table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();


                    table.Cell().Row(2).Column(1).Text("").Bold();
                    table.Cell().Row(2).Column(2).Element(Center).Text("HOẠT ĐỘNG SÁNG KIẾN CỦA BỘ, NGÀNH").Bold();
                    table.Cell().Row(2).Column(3).Text("Bộ, ngành");


                    table.Cell().Row(3).Column(1).Text("").Bold();
                    table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                    table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();


                    table.Cell().Row(4).Column(1).Text("").Bold();
                    table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                    table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công Nghệ");


                });

                column.Item().PaddingBottom(30).AlignCenter().Text("_______________").FontSize(14);

                static IContainer Center(IContainer container)
                {
                    return container
                        .Background(Colors.White)
                        .ShowOnce()
                        .AlignCenter()
                        .AlignMiddle();
                }
                column.Item().Table(table =>
                {
                    table.ColumnsDefinition(columns =>
                    {
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                        columns.RelativeColumn();
                    });

                    //row 1
                    table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                    table.Cell().Row(1).Column(2).Element(Title).Text("Đơn vị").Bold();
                    table.Cell().Row(1).Column(3).Element(Title).Text("Tổng số giải pháp được đề nghị công nhận sáng kiến").Bold();
                    table.Cell().Row(1).Column(4).Element(Title).Text("Tổng số sáng kiến được công nhận").Bold();
                    table.Cell().Row(1).Column(5).Element(Title).Text("Tổng số sáng kiến đang được áp dụng").Bold(); table.Cell().Row(1).Column(5).Element(Title).Text("Tổng số sáng kiến đang được áp dụng").Bold();
                    table.Cell().Row(1).Column(6).Element(Title).Text("Tổng số tiền làm lợi của các sáng kiến được áp dụng").Bold();
                    table.Cell().Row(1).Column(7).Element(Title).Text("Tổng số tiền trả thù lao cho tác giả sáng kiến").Bold();
                    table.Cell().Row(1).Column(8).Element(Title).Text("Tổng số sáng kiến được chuyển giao").Bold();
                    table.Cell().Row(1).Column(9).Element(Title).Text("Tổng số tiền thu được từ các sáng kiến được chuyển giao").Bold();
                    table.Cell().Row(1).Column(10).Element(Title).Text("Tổng số cán bộ được nâng lương trước thời hạn do có sáng kiến được công nhận").Bold();
                    table.Cell().Row(1).Column(11).Element(Title).Text("Tổng số sáng kiến được công nhận có phạm vi ảnh hưởng cấp tỉnh").Bold();
                    table.Cell().Row(1).Column(12).Element(Title).Text("Tổng số sáng kiến được công nhận có phạm vi ảnh hưởng toàn quốc").Bold();

                    for (int rowIndex = 2; rowIndex < NUMBER_ROW; rowIndex++)
                    {
                        
                        if (rowIndex == NUMBER_ROW - 1)
                        {
                            table.Cell().Row((uint)rowIndex).Column(1).Element(Block).Text("Tổng").Bold();
                        }
                        else
                        {
                            table.Cell().Row((uint)rowIndex).Column(1).Element(Block).Text((rowIndex - 1).ToString());
                        }

                        for (int col = 2; col <= 12; col++)
                        {
                            string value = II_values[$"II_{rowIndex}_{col}"];
                            table.Cell().Row((uint)rowIndex).Column((uint)col).Element(Block).Text(value ?? "");
                        }
                        
                    }
                   
                });

                static IContainer Block(IContainer container)
                {
                    return container
                        .Border(1)
                        .Background(Colors.White)
                        .ShowOnce()
                        .MinWidth(50)
                        .MinHeight(30)
                        .PaddingLeft(5)
                        .PaddingRight(5)
                        .AlignCenter()
                        .AlignMiddle();
                }

                static IContainer Title(IContainer container)
                {
                    return container
                        .Border(1)
                        .Background(Colors.White)
                        .ShowOnce()
                        .PaddingLeft(5)
                        .PaddingRight(5)
                    //
                        .PaddingBottom(5)
                        .MinHeight(40)
                        .AlignCenter()
                        .AlignMiddle();
                }
            });

            page.Footer();
        });
    }).GeneratePdf(path);

        return path;
    }

    public string XuatMau10CTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
        .Create(container =>
        {
            var tu_ngay = "";
            var tu_thang = "";
            var nam_ky = "";

            var den_ngay = "";
            var den_thang = "";
            var den_nam = "";

         
            var B2_2_3 = "";
            var B2_2_4 = "";
            var B2_2_5 = "";
            var B2_2_6 = "";
            var B2_2_7 = "";

           
            var B2_3_3 = "";
            var B2_3_4 = "";
            var B2_3_5 = "";
            var B2_3_6 = "";
            var B2_3_7 = "";

          
            var B2_4_3 = "";
            var B2_4_4 = "";
            var B2_4_5 = "";
            var B2_4_6 = "";
            var B2_4_7 = "";

        
            var B2_5_3 = "";
            var B2_5_4 = "";
            var B2_5_5 = "";
            var B2_5_6 = "";
            var B2_5_7 = "";

        
            var B2_6_3 = "";
            var B2_6_4 = "";
            var B2_6_5 = "";
            var B2_6_6 = "";
            var B2_6_7 = "";

        
            var B2_7_3 = "";
            var B2_7_4 = "";
            var B2_7_5 = "";
            var B2_7_6 = "";
            var B2_7_7 = "";

            var B2_8_3 = "";
            var B2_8_4 = "";
            var B2_8_5 = "";
            var B2_8_6 = "";
            var B2_8_7 = "";

            var NUMBER_ROW = 2;
            Dictionary<string, string> II_values = new Dictionary<string, string>();

            for (int i = 0; i < NUMBER_ROW; i++)
            {
                for (int col = 2; col <= 12; col++)
                {
                    II_values[$"II_{i + 2}_{col}"] = "";
                }
            }



            List<WorkflowStep> steps = workflow.WorkflowSteps;
            dynamic? step1;
            dynamic? step2;
            dynamic? step3;

            foreach (WorkflowStep workflowStep in steps)
            {
                if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                {
                    step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step1 != null)
                    {
                        dynamic? data1 = step1.form.data;
                        if (data1 != null)
                        {
                            // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                             nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                            // Xử lý TuNgay
                            if (data1.TuNgay ==null)
                            {
                                tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                            }
                            else
                            {
                                var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                if (tuNgayParts.Length >= 2)
                                {
                                    tu_thang = tuNgayParts[0];
                                    tu_ngay = tuNgayParts[1];
                                }
                                else
                                {
                                    // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                    tu_thang = DateTime.Now.Month.ToString("D2");
                                    tu_ngay = DateTime.Now.Day.ToString("D2");
                                }
                            }

                            // Xử lý DenNgay
                            if (data1.DenNgay == null)
                            {
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                            }
                            else
                            {
                                var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                if (denNgayParts.Length >= 3)
                                {
                                    den_nam = denNgayParts[2];
                                    den_thang = denNgayParts[0];
                                    den_ngay = denNgayParts[1];
                                }
                                else
                                {
                                    // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2");
                                    den_ngay = DateTime.Now.Day.ToString("D2");
                                }
                            }
                        }

                        }
                    }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                {
                    step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step2 != null)
                    {
                        dynamic? data1 = step2.form.data;
                        //var keyCounter = 2;
                      

                        foreach (var item in data1.d)
                        {
      
                            if (item != null)
                            {
                                II_values["II_"+ NUMBER_ROW + "_2"] = item.NoiDung;
                                II_values["II_"+ NUMBER_ROW + "_3"] = item.HinhThuc;
                                II_values["II_"+ NUMBER_ROW + "_4"] = item.DoiTuong;
                                II_values["II_"+ NUMBER_ROW + "_5"] = item.CoQuanToChuc;
                                II_values["II_"+ NUMBER_ROW + "_6"] = item.SoHocVien;
                                II_values["II_"+ NUMBER_ROW + "_7"] = item.ThoiGian;

                                NUMBER_ROW++;

                            }

                        }

                    }
                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                {
                    step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step3 != null)
                    {
                        dynamic? data1 = step3.form.data;

         
                        B2_2_3 = data1.d[0].SoVuViec;
                        B2_2_4 = data1.d[0].KetQua_PhatCanhCao;
                        B2_2_5 = data1.d[0].KetQua_PhatTien;
                        B2_2_6 = data1.d[0].SanPhamXuLy;
                        B2_2_7 = data1.d[0].XinYKien;


                   
                        B2_3_3 = data1.d[1].SoVuViec;
                        B2_3_4 = data1.d[1].KetQua_PhatCanhCao;
                        B2_3_5 = data1.d[1].KetQua_PhatTien;
                        B2_3_6 = data1.d[1].SanPhamXuLy;
                        B2_3_7 = data1.d[1].XinYKien;


                        B2_4_3 = data1.d[2].SoVuViec;
                        B2_4_4 = data1.d[2].KetQua_PhatCanhCao;
                        B2_4_5 = data1.d[2].KetQua_PhatTien;
                        B2_4_6 = data1.d[2].SanPhamXuLy;
                        B2_4_7 = data1.d[2].XinYKien;


                    
                        B2_5_3 = data1.d[3].SoVuViec;
                        B2_5_4 = data1.d[3].KetQua_PhatCanhCao;
                        B2_5_5 = data1.d[3].KetQua_PhatTien;
                        B2_5_6 = data1.d[3].SanPhamXuLy;
                        B2_5_7 = data1.d[3].XinYKien;


                        B2_6_3 = data1.d[4].SoVuViec;
                        B2_6_4 = data1.d[4].KetQua_PhatCanhCao;
                        B2_6_5 = data1.d[4].KetQua_PhatTien;
                        B2_6_6 = data1.d[4].SanPhamXuLy;
                        B2_6_7 = data1.d[4].XinYKien;


                        B2_7_3 = data1.d[5].SoVuViec;
                        B2_7_4 = data1.d[5].KetQua_PhatCanhCao;
                        B2_7_5 = data1.d[5].KetQua_PhatTien;
                        B2_7_6 = data1.d[5].SanPhamXuLy;
                        B2_7_7 = data1.d[5].XinYKien;


                        //Thêm cột Tổng
                         B2_8_3 = data1.d[6].SoVuViec;              
                         B2_8_4 = data1.d[6].KetQua_PhatCanhCao;
                         B2_8_5 = data1.d[6].KetQua_PhatTien;
                         B2_8_6 = data1.d[6].SanPhamXuLy;
                         B2_8_7 = data1.d[6].XinYKien; 
                       
                    }
                }
            }

            container.Page(page =>
            {
                page.Size(PageSizes.A4.Landscape());
                page.Margin(2, Unit.Centimetre);
                page.PageColor(Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                page.Header()
                    .Column(column =>
                    {

                    });
                page.Content()

                .Column(column =>
                {
                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn();
                            columns.ConstantColumn(350);
                            columns.RelativeColumn();

                        });

                        //row 1
                        table.Cell().Row(1).Column(1).Text("Biểu số 10c/SHTT").Bold();
                        table.Cell().Row(1).Column(2).Element(Center).Text("KẾT QUẢ THỰC THI QUYỀN SỞ HỮU CÔNG NGHIỆP").Bold();
                        table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();


                        table.Cell().Row(2).Column(1).Text("").Bold();
                        table.Cell().Row(2).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                        table.Cell().Row(2).Column(3).Text("Bộ Tài chính: Bộ Công thương");

                        table.Cell().Row(3).Column(1).Text("").Bold();
                        table.Cell().Row(3).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                        table.Cell().Row(3).Column(3).Text("Bộ Thông tin và Truyền thông");

                        table.Cell().Row(4).Column(1).Text("").Bold();
                        table.Cell().Row(4).Column(2).Element(Center).Text("_______________").FontSize(12);
                        table.Cell().Row(4).Column(3).Text("Bộ Công an");

                        table.Cell().Row(5).Column(1).Text("");
                        table.Cell().Row(5).Column(1).Text("");
                        table.Cell().Row(5).Column(3).Text("Đơn vị nhận báo cáo:").Bold();

                        table.Cell().Row(6).Column(1).Text("");
                        table.Cell().Row(6).Column(1).Text("");
                        table.Cell().Row(6).Column(3).Text("Bộ Khoa học và Công Nghệ");


                    });

                    static IContainer Center(IContainer container)
                    {
                        return container
                            .Background(Colors.White)
                            .ShowOnce()
                            .AlignCenter()
                            .AlignMiddle();
                    }

                    column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Hoạt động đào tạo, tuyên truyền về sở hữu công nghiệp").Bold().FontSize(12);

                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.ConstantColumn(50);
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();

                        });

                        //row 1
                        table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                        table.Cell().Row(1).Column(2).Element(Title).Text("Nội dung đào tạo, tuyên truyền").Bold();
                        table.Cell().Row(1).Column(3).Element(Title).Text("Hình thức đào tạo, tuyên truyền").Bold();
                        table.Cell().Row(1).Column(4).Element(Title).Text("Đối tượng chính").Bold();
                        table.Cell().Row(1).Column(5).Element(Title).Text("Cơ quan/tổ chức").Bold();
                        table.Cell().Row(1).Column(6).Element(Title).Text("Số học viên").Bold();
                        table.Cell().Row(1).Column(7).Element(Title).Text("Thời gian").Bold();


                        for (int rowIndex = 2; rowIndex < NUMBER_ROW; rowIndex++)
                        {
                            table.Cell().Row((uint)rowIndex).Column(1).Element(Title).Text((rowIndex - 1).ToString());

                            for (int col = 2; col <= 7; col++)
                            {
                                string value = II_values[$"II_{rowIndex}_{col}"];

                                table.Cell().Row((uint)rowIndex).Column((uint)col).Element(Block).Text(value ?? "");
                            }
                        }
                    });

                    static IContainer Block(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(50)
                            .MinHeight(30)
                            .PaddingLeft(15)
                            .PaddingRight(5)
                            .AlignMiddle();
                    }

                    static IContainer Title(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .PaddingLeft(5)
                            .PaddingRight(5)
                            .PaddingTop(5)
                            .MinHeight(40)
                            .AlignCenter()
                            .AlignMiddle();
                    }

                    column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("2. Hoạt động xử lý xâm phạm quyền sở hữu công nghiệp").Bold().FontSize(12);

                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.ConstantColumn(30);
                            columns.ConstantColumn(220);
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();

                        });

                        //row 1
                        table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Đối tượng quyền sở hữu trí tuệ bị xâm phạm").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Số vụ việc").Bold();
                        table.Cell().ColumnSpan(2).Row(1).Column(4).Element(Title).Text("Kết quả").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(6).Element(Title).Text("Sản phẩm bị xử lý").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(7).Element(Title).Text("Số vụ việc cần xin ý kiến chuyên môn hoặc giám định").Bold();

                        table.Cell().Row(2).Column(4).Element(Title).Text("Phạt cảnh cáo").Italic();
                        table.Cell().Row(2).Column(5).Element(Title).Text("Phạt tiền").Italic();

                        table.Cell().Row(3).Column(1).Element(Title).Text("1");
                        table.Cell().Row(3).Column(2).Element(Block).Text("Nhãn hiệu");               
                        table.Cell().Row(3).Column(3).Element(Block).Text(B2_2_3 ?? "");
                        table.Cell().Row(3).Column(4).Element(Block).Text(B2_2_4 ?? "");
                        table.Cell().Row(3).Column(5).Element(Block).Text(B2_2_5 ?? "");
                        table.Cell().Row(3).Column(6).Element(Block).Text(B2_2_6 ?? "");
                        table.Cell().Row(3).Column(7).Element(Block).Text(B2_2_7 ?? "");

                        table.Cell().Row(4).Column(1).Element(Title).Text("2");
                        table.Cell().Row(4).Column(2).Element(Block).Text("Chỉ dẫn địa lý");         
                        table.Cell().Row(4).Column(3).Element(Block).Text(B2_3_3 ?? "");
                        table.Cell().Row(4).Column(4).Element(Block).Text(B2_3_4 ?? "");
                        table.Cell().Row(4).Column(5).Element(Block).Text(B2_3_5 ?? "");
                        table.Cell().Row(4).Column(6).Element(Block).Text(B2_3_6 ?? "");
                        table.Cell().Row(4).Column(7).Element(Block).Text(B2_3_7 ?? "");

                        table.Cell().Row(5).Column(1).Element(Title).Text("3");
                        table.Cell().Row(5).Column(2).Element(Block).Text("Kiểu dáng công nghiệp");   
                        table.Cell().Row(5).Column(3).Element(Block).Text(B2_4_3 ?? "");
                        table.Cell().Row(5).Column(4).Element(Block).Text(B2_4_4 ?? "");
                        table.Cell().Row(5).Column(5).Element(Block).Text(B2_4_5 ?? "");
                        table.Cell().Row(5).Column(6).Element(Block).Text(B2_4_6 ?? "");
                        table.Cell().Row(5).Column(7).Element(Block).Text(B2_4_7 ?? "");

                        table.Cell().Row(6).Column(1).Element(Title).Text("4");
                        table.Cell().Row(6).Column(2).Element(Block).Text("Sáng chế");      
                        table.Cell().Row(6).Column(3).Element(Block).Text(B2_5_3 ?? "");
                        table.Cell().Row(6).Column(4).Element(Block).Text(B2_5_4 ?? "");
                        table.Cell().Row(6).Column(5).Element(Block).Text(B2_5_5 ?? "");
                        table.Cell().Row(6).Column(6).Element(Block).Text(B2_5_6 ?? "");
                        table.Cell().Row(6).Column(7).Element(Block).Text(B2_5_7 ?? "");

                        table.Cell().Row(7).Column(1).Element(Title).Text("5");
                        table.Cell().Row(7).Column(2).Element(Block).Text("Giải pháp hữu ích");             
                        table.Cell().Row(7).Column(3).Element(Block).Text(B2_6_3 ?? "");
                        table.Cell().Row(7).Column(4).Element(Block).Text(B2_6_4 ?? "");
                        table.Cell().Row(7).Column(5).Element(Block).Text(B2_6_5 ?? "");
                        table.Cell().Row(7).Column(6).Element(Block).Text(B2_6_6 ?? "");
                        table.Cell().Row(7).Column(7).Element(Block).Text(B2_6_7 ?? "");

                        table.Cell().Row(8).Column(1).Element(Title).Text("6");
                        table.Cell().Row(8).Column(2).Element(Block).Text("Các đối tượng khác (Thiết kế bố trí mạch tích hợp bán dẫn, tên thương mại ...)");
                        table.Cell().Row(8).Column(3).Element(Block).Text(B2_7_3 ?? "");
                        table.Cell().Row(8).Column(4).Element(Block).Text(B2_7_4 ?? "");
                        table.Cell().Row(8).Column(5).Element(Block).Text(B2_7_5 ?? "");
                        table.Cell().Row(8).Column(6).Element(Block).Text(B2_7_6 ?? "");
                        table.Cell().Row(8).Column(7).Element(Block).Text(B2_7_7 ?? "");

                        table.Cell().Row(9).Column(1).Element(Title).Text("");
                        table.Cell().Row(9).Column(2).Element(Title).Text("Tổng").Bold();
                        table.Cell().Row(9).Column(3).Element(Block).Text(B2_8_3 ?? "");
                        table.Cell().Row(9).Column(4).Element(Block).Text(B2_8_4 ?? "");
                        table.Cell().Row(9).Column(5).Element(Block).Text(B2_8_5 ?? "");
                        table.Cell().Row(9).Column(6).Element(Block).Text(B2_8_6 ?? "");
                        table.Cell().Row(9).Column(7).Element(Block).Text(B2_8_7 ?? "");

                    });
                });

                page.Footer();
            });
        }).GeneratePdf(path);

        return path;
    }

    public string XuatMau5BTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
        .Create(container =>
    {
        //biến gán dữ liệu A1_1_1 = dòng A.1.1 cột 1, A2_1_1 = dòng A.1.1 cột 2

    

        var nam = "";
        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";


        var pageSizes = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7)>();
        // Xuat quy trinh 1 -> có 5 bước
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
   

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                   dynamic? data1 = step1.form.data;

                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        nam = data1.KyBaoCao ?? DateTime.Now.Year.ToString();
                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 2)
                            {
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); 
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }

                

                if (data1.d1 != null)
                    {
                        foreach (var page in data1.d1)
                        {
                            pageSizes.Add((
                            page.tt ?? "",
                            page.TieuChi ?? "",
                            page.KHCNCongLapCT ?? "",
                            page.KHCNCoQuanCT ?? "",
                            page.DoanhNghiepCT ?? "",
                            page.MuaNhanChuyenGiao ?? "",
                            page.CoSo ?? ""

                            ));
                        }
                    }
                   
                }
            }  
         
        }
        container.Page(page =>
        {
            page.Size(PageSizes.A4.Landscape());
            page.Margin(2, Unit.Centimetre);
            page.PageColor(Colors.White);
            page.DefaultTextStyle(x => x.FontSize(20));
            page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

            page.Header()
                .Column(column =>
                {

                });
            page.Content()
            .Column(column =>
            {
                column.Item().Table(table =>
                {
                    table.ColumnsDefinition(columns =>
                    {
                        columns.RelativeColumn(20);
                        columns.RelativeColumn(60);
                        columns.RelativeColumn(20);
                    });

                    //row 1
                    table.Cell().Row(1).Column(1).Text("Biểu số 05b/CCTC").Bold().FontSize(14);
                    table.Cell().Row(1).Column(2).AlignCenter().Text("TÌNH HÌNH THỰC HIỆN CƠ CHẾ TỰ CHỦ CỦA TỔ CHỨC").Bold().FontSize(14);
                    table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);

                    //row 2
                    table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                    table.Cell().Row(2).Column(2).AlignCenter().Text("KHOA HỌC VÀ CÔNG NGHỆ ĐỘC LẬP").Bold().FontSize(14);
                    table.Cell().Row(2).Column(3).AlignCenter().Text("UBND cấp tỉnh").FontSize(13);

                    //row 3
                    table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                    table.Cell().Row(3).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                    table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo:").Bold().FontSize(14);

                    //row 4
                    table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                    table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                    table.Cell().Row(4).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);
                });

                column.Item().PaddingBottom(20).AlignCenter().Text("__________________").Bold().FontSize(15);

                column.Item().Table(table =>
                {
                    IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                    {
                        return container
                             .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                    }
                    table.ColumnsDefinition(columns =>
                    {
                        columns.RelativeColumn(20);
                        columns.RelativeColumn(50);
                        columns.RelativeColumn(30);
                        columns.RelativeColumn(30);
                        columns.RelativeColumn(30);
                        columns.RelativeColumn(30);
                        columns.RelativeColumn(30);
                     
                    });
                    table.Header(header =>
                    {
                        header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold().FontSize(14);
                        header.Cell().Element(CellStyle).AlignCenter().Text("TIÊU CHÍ").Bold();
                        header.Cell().Element(CellStyle).AlignCenter().Text("Tổ chức khoa học và công nghệ công lập trực thuộc UBND cấp tỉnh (*)").Bold().FontSize(14);
                        header.Cell().Element(CellStyle).AlignCenter().Text("Tổ chức khoa học và công nghệ công lập trực thuốc cơ quan chuyên môn thuộc UBND cấp tỉnh (*)").Bold().FontSize(14);
                        header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                        {
                            text.Span("Tổ chức khoa học và công nghệ công lập trực thuộc cơ quan chuyên môn thuộc UBND cấp huyện (*)").Bold().FontSize(14);
                            text.Line("\n(nếu có)").Italic().FontSize(13);
                        });
                        header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                        {
                            text.Span("Tổ chức khoa học và công nghệ công lập trực thuộc đơn vị sự nghiệp và doanh nghiệp trực thuộc UBND cấp tỉnh (**)").Bold().FontSize(14);
                            text.Line("\n(nếu có)").Italic().FontSize(14);
                        });
                        header.Cell().Element(CellStyle).AlignCenter().Text("Cơ sở giáo dục đại học").Bold().FontSize(14);

                        IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                    });

                    foreach (var items in pageSizes)
                    {
                        string[] check = { "A", "B", "1", "2", "3", "4", "5", "6", "7" };

                        if (check.Contains(items.content1))
                        {
                            table.Cell().Element(CellStyle).AlignCenter().Text(items.content1).Bold();
                            table.Cell().Element(CellStyle).AlignLeft().Text(items.content2).Bold();
                        }
                        else
                        {
                            table.Cell().Element(CellStyle).AlignCenter().Text(items.content1);
                            table.Cell().Element(CellStyle).AlignLeft().Text(items.content2);
                        }                    
                        table.Cell().Element(CellStyle).AlignCenter().Text(items.content3);
                        table.Cell().Element(CellStyle).AlignCenter().Text(items.content4);
                        table.Cell().Element(CellStyle).AlignCenter().Text(items.content5);
                        table.Cell().Element(CellStyle).AlignCenter().Text(items.content6);
                        table.Cell().Element(CellStyle).AlignCenter().Text(items.content7);

                       
                    }

                    IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                    //}
                });


                column.Item().PaddingTop(5).PaddingLeft(10).AlignLeft().Text("Ghi chú:").Bold().FontSize(14);
                column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(*) Không bao gồm các tổ chức khoa học và công nghệ thuộc và trực thuộc đơn vị sự nghiệp và doanh nghiệp" +
                    " trực thuộc; Cơ sở giáo dục đại học").Bold().FontSize(14);
                column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(1) Bao gồm các tổ chức khoa học và công nghệ trực thuộc: Bộ, cơ quan ngang bộ, cơ quan thuộc Chính phủ, " +
                    "các cơ quan Quốc gia; tổng cục; học viện; cục; UBND cấp tỉnh; cơ quan chuyên môn thuộc UBND cấp tỉnh.").FontSize(14);
                column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(2) Theo các lĩnh vực nghiên cứu khoa học và công nghệ - Mã cấp I của Bảng phân loại lĩnh vực nghiên cứu khoa " +
                    "học và công nghệ (ban hành tại Quyết định số 12/2008/QĐ-BKHCN ngày 04/9/2008 của Bộ trưởng Bộ khoa học và Công nghệ về các bảng phân loại thống kê khoa học và công " +
                    "nghệ và Quyết định số 37/QĐ-BKHCN ngày 14/1/2009 của Bộ trưởng Bộ Khoa học và Công nghệ đính chính quyết định số 12/2008/QĐ-BKHCN)").FontSize(14);
                column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(3) Theo phân loại tại khoản 1 Điều 5 Thông tư số 02/2021/TT-BKHCN ngày 10/3/2021 của Bộ trưởng Bộ" +
                    "Khoa học và Công nghệ quy định tiêu chí phân loại, điều kiện thành lập, sáp nhập, hợp nhất, giải thể các tổ chức khoa học và công nghệ công lập").FontSize(14);
                column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(4) Theo phân loại tại Điều 9 Nghị định số 60/2021/NĐ-CP ngày 21/6/2021 của chính phủ quy định cơ chế tự chủ" +
                    "của đơn vị sự nghiệp công lập").FontSize(14);
                column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(**) Đơn vị trực thuộc tổ chức khoa học và công nghệ có con dấu và tài khoản riêng, hoạt động độc lập, được phê duyệt phương án tự chủ riêng.").Bold().FontSize(14);
            });
            //    page.Footer()
            //        .AlignCenter()
            //        .Text(x =>
            //        {
            //            x.Span("Trang ");
            //            x.CurrentPageNumber();
            //       });
        });
    }).GeneratePdf(path);

        return path;
    }

    public string XuatMau1ATT13(string path, Workflow workflow)
    {
   
        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";
        //Thêm dữ liệu sẵn

        var contentDict = new Dictionary<string, List<(string, string, string, string, string, string, string, string)>>
        {
       
            { "I", new List<(string, string, string, string, string, string, string, string)>()
                
            },
            { "II", new List<(string, string, string, string, string, string, string, string)>()
               
            }
        };
        var pageSizes2 = new List<(string index, string content2)>()
        {
               ("I", "Văn bản quy phạm pháp luật"),
               ("II", "Chương trình,Đề án,kế hoạch về khoa học và công nghệ"),

        };
        //

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;

                   
                    if (data1 != null)
                    {
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;

                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {
                            contentDict["I"].Add((                       
                            page.id ?? "",
                            page.CoQuanBanHanh ?? "",
                            page.LoaiVanBan ?? "",
                            page.SoKyHieu ?? "",
                            page.NgayBanHanh ?? "",
                            page.TenTrichYeu ?? "",
                            page.LinhVuc ?? "",
                            page.NoiDung ?? ""

                            ));
                        }

                    }
                    if (data2.d2 != null)
                    {
                        foreach (var page in data2.d2)
                        {
                            contentDict["II"].Add((
                            page.id ?? "",
                            page.CoQuanBanHanh ?? "",
                            page.LoaiVanBan ?? "",
                            page.SoKyHieu ?? "",
                            page.NgayBanHanh ?? "",
                            page.TenTrichYeu ?? "",
                            page.LinhVuc ?? "",
                            page.NoiDung ?? ""

                            ));
                        }
                        foreach (var page in data2.total)
                        {
                            contentDict["II"].Add((
                            page.tt ?? "",
                            page.CoQuanBanHanh ?? "",
                            page.LoaiVanBan ?? "",
                            page.SoKyHieu ?? "",
                            page.NgayBanHanh ?? "",
                            page.TenTrichYeu ?? "",
                            page.LinhVuc ?? "",
                            page.NoiDung ?? ""

                            ));
                        }



                    }

                }
            }          
        }

        QuestPDF.Fluent.Document
           .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item()
                      .AlignCenter()
                      .Text(text =>
                      {

                          text.Span("PHẦN B. CÁC BIỂU MẪU BÁO CÁO").Bold();

                          column.Item().PaddingVertical(5).AlignCenter().Width(100).LineHorizontal(1).LineColor(Colors.Black);
                      });

                       column.Item()
                       .AlignLeft()
                      .Text(text =>
                      {

                          text.Line("1.Báo cáo tình hình xây dựng cơ chế, chính sách pháp luật và kết quả công tác thanh tra,kiểm tra trong lĩnh vực khoa học và công nghệ").Bold();
                      });
                       column.Item().Row(

                            row =>
                            {
                              
                                row.RelativeItem(3)
                                              .AlignCenter()
                                              .Text(text =>
                                              {
                                                 
                                                  text.AlignCenter();
                                                  text.Line("Biểu số 01a/XDVB").Bold();


                                              });

                                row.RelativeItem(6)
                                            .AlignCenter()
                                            .Text(text =>
                                            {
                                               
                                                text.AlignCenter();
                                                text.Line("TÌNH HÌNH XÂY DỰNG CƠ CHẾ, CHÍNH SÁCH PHÁP LUẬT").Bold();
                                                text.Line($"Kỳ báo cáo: Năm {nam_ky}").Italic();
                                                text.Span($"(Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic().LineHeight(1);

                                                //
                                                column.Item().PaddingBottom(20).AlignCenter().Width(70).LineHorizontal(1).LineColor(Colors.Black);

                                            });
                                row.RelativeItem(4)
                                        .AlignRight()
                                        .Text(text =>
                                        {
                                            
                                            text.AlignLeft();
                                            text.Line("Đơn vị báo cáo").Bold();
                                            text.Line("- Bộ, ngành;");

                                            text.Line("- UBND cấp tỉnh;");
                                            text.Line("Đơn vị nhận báo cáo").Bold();
                                            text.Span("Bộ Khoa học và Công nghệ");

                                        });
                            });

                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung

                           column.Item().Row(
                              row =>
                              {

                                  //START table
                                  column.Item().Table(table =>
                                  {


                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(45);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(60);
                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!
                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cơ quan ban hành").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Loại văn bản").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Số,ký hiệu").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Ngày ban hành").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tên/trích yếu").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Lĩnh vực").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nội dung về khoa học và công nghệ").Bold();
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });



                                      foreach (var page1 in pageSizes2)
                                      {
                                          // Hiển thị dữ liệu của pageSizes2
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.index).Bold();
                                          table.Cell().ColumnSpan(7).Element(CellStyle).AlignLeft().Text(page1.content2).Bold();

                                          // Kiểm tra xem có dữ liệu tương ứng với mã index không
                                          if (contentDict.TryGetValue(page1.index, out var content))
                                          {
                                              foreach (var tuple in content)
                                              {
                                                  if (tuple.Item1 == "Tổng")
                                                  {
                                                      table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item1).Bold();
                                                  }
                                                  else
                                                  {
                                                      table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item1);
                                                  }
                                                 
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item2);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item3);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item4);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item5);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item6);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item7);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item8);
                                              }
                                          }
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  //END table
                              });
                       });

                    page.Footer()
                   .AlignCenter()
                   .Text(x =>
                   {
                       x.Span("Page ");
                       x.CurrentPageNumber();
                   });
                });
            })
            .GeneratePdf(path);

        return path;
    }

    public string XuatMau1BTT13(string path, Workflow workflow)
    {
        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";
        //Thêm dữ liệu sẵn
        var pageSizes = new List<(string index, string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9, string content10, string content11, string content12, string content13, string content14, string content15, string content16, string content17, string content18, string content19, string content20, string content21, string content22, string content23, string content24, string content25, string content26)>()
        {
            ("MS", "1=2+3","2","3", "4","5","6", "7","8=9+10","9", "10","11=12+13","12", "13","14=15+16","15","16", "17","18=19+20","19","20", "21=22+23","22","23","24=25+26", "25", "26"),
        };

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;

                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }

                    if (data1.d1 != null)
                    {
                        foreach (var page in data1.d1)
                        {

                            pageSizes.Add((
                            
                            page.LinhVuc ?? "",
                            page.TongSo ?? "",
                            page.ThanhLapDoan ?? "",
                            page.ThanhTraDocLap ?? "",
                            page.TienKienNghiThuHoi ?? "",
                            page.CaNhanThanhTra ?? "",
                            page.CaNhanKiemTra ?? "",
                            page.ToChucThanhTra ?? "",
                            page.ToChucKiemTra ?? "",
                           page.TongSoCoViPham ?? "",
                           page.CaNhanCoViPham ?? "",
                           page.ToChucCoViPham ?? "",
                           page.TongSoQuyetDinh ?? "",
                           page.CaNhanQuyetDinh ?? "",
                           page.ToChucQuyetDinh ?? "",
                           page.TongSoTienViPham ?? "",
                           page.CaNhanTienViPham ?? "",
                           page.ToChucTienViPham ?? "",
                           page.TongSoTienTaiSan ?? "",
                           page.TichThu ?? "",
                           page.TieuHuy ?? "",
                           page.TongSoTXPVP ?? "",
                           page.CaNhanTXPVP ?? "",
                           page.ToChucTXPVP ?? "",
                           page.TongSoTDT ?? "",
                           page.CaNhanTDT ?? "",
                           page.ToChucTDT ?? ""

                            ));
                        }

                    }
                  
                }
            }

        }
        QuestPDF.Fluent.Document
        .Create(container =>
        {

            container.Page(page =>
            {
                page.Size(PageSizes.A3);
                page.Margin(1, Unit.Centimetre);
                page.PageColor(Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                page.Header().ShowOnce()
                .Column(column =>
                {
                    column.Item().Row(

                        row =>
                        {
                            //row.Spacing(10);
                            row.RelativeItem(4)
                            .AlignCenter()
                             .Text(text =>
                               {

                                   text.AlignCenter();
                                   text.Line("Biểu số 01b/TTKT").Bold();
                               });

                            row.RelativeItem(7)
                                        .AlignCenter()
                                        .Text(text =>
                                        {
                                            //text.ParagraphSpacing(1);
                                            text.AlignCenter();
                                            text.Line("KẾT QUẢ CÔNG TÁC THANH TRA, KIỂM TRA").Bold();
                                            text.Line("TRONG LĨNH VỰC KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                                            text.Line($"Kỳ báo cáo: Năm {nam_ky}").Italic();
                                            text.Span($"(Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic().LineHeight(1);

                                        });
                                    column.Item().PaddingBottom(20).AlignCenter().Width(70).LineHorizontal(1).LineColor(Colors.Black);
                                    row.RelativeItem(4)
                                    .AlignRight()
                                    .Text(text =>
                                    {
                                        //text.ParagraphSpacing(1);
                                        text.AlignLeft();
                                        text.Line("Đơn vị báo cáo").Bold();
                                        text.Line("UBND cấp tỉnh;");
                                        text.Line("Đơn vị nhận báo cáo").Bold();
                                        text.Span("Bộ Khoa học và Công nghệ");
                                    });
                        });
                });
                page.Content()
                    //.PaddingVertical(0, Unit.Centimetre)
                    .Column(column =>
                    {
                        //nọi dung

                        column.Item().Row(
                            row =>
                            {
                                //START table
                                column.Item().Table(table =>
                                {
                                    IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                    {
                                        return container
                                            .Border(1)
                                            .BorderColor(Colors.Black)
                                            //.Background(backgroundColor)
                                            //.PaddingVertical(5)
                                            .AlignCenter()

                                            .PaddingHorizontal(1);


                                        //.AlignMiddle();
                                    }
                                    table.ColumnsDefinition(columns =>
                                    {
                                        columns.RelativeColumn(3.5f);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        //

                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        //


                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);

                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);


                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);

                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                        columns.RelativeColumn(3);
                                    });
                                    table.Header(header =>
                                    {

                                        header.Cell().RowSpan(4).Element(CellStyle).ExtendHorizontal().AlignLeft().Text("Lĩnh vực").Bold();



                                        header.Cell().ColumnSpan(3).RowSpan(3).Element(CellStyle).Text("Số cuộc thanh tra,kiểm tra").Bold();
                                        header.Cell().ColumnSpan(2).RowSpan(3).Element(CellStyle).Text("Số cá nhân được thanh tra,kiểm tra").Bold();
                                        header.Cell().ColumnSpan(2).RowSpan(3).Element(CellStyle).Text("Số tổ chức được thanh tra,kiểm tra").Bold();
                                        header.Cell().ColumnSpan(19).Element(CellStyle).Text("Kết quả").Bold();
                                        header.Cell().ColumnSpan(3).RowSpan(2).Element(CellStyle).Text("Số có vi phạm").Bold();//

                                        header.Cell().ColumnSpan(3).RowSpan(2).Element(CellStyle).Text("Số Quyết định xử phạt hành chính được ban hành").Bold();
                                        header.Cell().ColumnSpan(3).RowSpan(2).Element(CellStyle).Text("Số tiền vi phạm").Bold();
                                        header.Cell().RowSpan(3).RowSpan(3).Element(CellStyle).Text("Số tiền kiến nghị thu hồi").Bold();
                                        header.Cell().ColumnSpan(3).RowSpan(2).Element(CellStyle).Text("Số tiền xử lý tài sản vi phạm").Bold();

                                        header.Cell().ColumnSpan(3).RowSpan(2).Element(CellStyle).Text("Số tiền xử phạt vi phạm").Bold();

                                        header.Cell().ColumnSpan(3).RowSpan(2).Element(CellStyle).Text("Số tiền đã thu").Bold();

                                        header.Cell().Element(CellStyle).Text("Tổng số").Bold();
                                        header.Cell().Element(CellStyle).Text("Thành lập đoàn").Bold();
                                        header.Cell().Element(CellStyle).Text("Thanh tra độc lập").Bold();
                                        header.Cell().Element(CellStyle).Text("Thanh tra").Italic();
                                        header.Cell().Element(CellStyle).Text("Kiểm tra").Italic();

                                        header.Cell().Element(CellStyle).Text("Thanh tra").Italic();
                                        header.Cell().Element(CellStyle).Text("Kiểm tra");
                                        header.Cell().Element(CellStyle).Text("Tổng số").Bold();

                                        header.Cell().Element(CellStyle).Text("Cá nhân").Italic();
                                        header.Cell().Element(CellStyle).Text("Tổ chức").Italic();
                                        header.Cell().Element(CellStyle).Text("Tổng số").Bold();
                                        //
                                        header.Cell().Element(CellStyle).Text("Cá nhân").Italic();
                                        header.Cell().Element(CellStyle).Text("Tổ chức").Italic();
                                        header.Cell().Element(CellStyle).Text("Tổng số").Bold();

                                        header.Cell().Element(CellStyle).Text("Cá nhân").Italic();
                                        header.Cell().Element(CellStyle).Text("Tổ chức").Italic();
                                        /* header.Cell().RowSpan(1).Element(CellStyle).Text("Height")*/
                                        ;
                                        header.Cell().Element(CellStyle).Text("Tổng số").Bold();
                                        //header.Cell().Element(CellStyle).Text("Tổng số");
                                        header.Cell().Element(CellStyle).Text(text =>
                                        {
                                            text.Line("Tịch thu").Bold();
                                            text.Line("(thành tiền)").Italic();
                                        });

                                        header.Cell().Element(CellStyle).Text(text =>
                                        {
                                            text.Line("Tiêu hủy").Bold();
                                            text.Line("(thành tiền)").Italic();
                                        });
                                        header.Cell().Element(CellStyle).Text("Tổng số").Bold();
                                        header.Cell().Element(CellStyle).Text("Cá nhân").Italic();
                                        header.Cell().Element(CellStyle).Text("Tổ chức").Italic();


                                        header.Cell().Element(CellStyle).Text("Tổng số").Bold();
                                        header.Cell().Element(CellStyle).Text("Cá nhân").Italic();
                                        header.Cell().Element(CellStyle).Text("Tổ chức").Italic();
                                        //

                                        //
                                        //
                                        // you can extend existing styles by creating additional methods
                                        IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                    });

                                    foreach (var page in pageSizes)
                                    {
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.index).Bold();
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content1);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content2);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content3);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content4);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content5);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content6);

                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content7);
                                        //
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content8);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content9);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content10);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content11);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content12);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content13);
                                        //
                                        //
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content14);
                                        //
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content15);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content16);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content17);


                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content18);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content19);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content20);

                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content21);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content22);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content23);

                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content24);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content25);
                                        table.Cell().Element(CellStyle).ExtendHorizontal().AlignCenter().Text(page.content26);
                                        IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                    }
                                });
                                //END table
                            });

                    });
                page.Footer()
                .AlignCenter()
                .Text(x =>
                {
                    x.Span("Page ");
                    x.CurrentPageNumber();
                });
            });
        }).GeneratePdf(path);

        return path;
    }

    public string XuatMau2ATT13(string path, Workflow workflow)
    {
        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";
        //Bảng 1
        var pageSizes = new List<(string index, string content1, string content2, string content3, string content4)>()
        {
        };
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    //var id = "";
                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {
                            pageSizes.Add((
                            page.tt ?? "",
                            page.NoiDung ?? "",
                            page.KinhPhiTrungUong ?? "",
                            page.KinhPhiCapTinh ?? "",
                            page.KinhPhiThucHien ?? ""
                            ));
                        }
                    }
                    if (data2.d2 != null)
                    {
                        foreach (var page in data2.d2)
                        {
                           
                            pageSizes.Add((
                            page.tt ?? "",
                            page.NoiDung ?? "",
                            page.KinhPhiTrungUong ?? "",
                            page.KinhPhiCapTinh ?? "",
                            page.KinhPhiThucHien ?? ""

                            ));
                        }
                    }
                                    if (data2.total != null)
                                    {

                                        foreach (var page in data2.total)
                                        {
                                            pageSizes.Add(("", "Tổng số (I+II)", page.KinhPhiTrungUong, page.KinhPhiCapTinh, page.KinhPhiThucHien));
                                        }                                   }

                }          
            }
           
        }
        //-------------------------------------------------------------
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().PaddingVertical(5).AlignLeft()
                       .Text(text =>
                       {
                           text.Line("2. Báo cáo kết quả phân bố và sử dụng kinh phí khoa học và công nghệ").Bold();
                       });
                       column.Item().Row(

                            row =>
                            {
                                //row.Spacing(10);
                                row.RelativeItem(4)
                                             .AlignLeft()
                                             .Text(text =>
                                              {
                                                  //text.ParagraphSpacing(1);
                                                  text.AlignCenter();
                                                  text.Line("Biểu số 02a/KP").Bold();
                                              });
                                row.RelativeItem(7)
                                            .AlignCenter()
                                            .Text(text =>
                                            {
                                                //text.ParagraphSpacing(1);
                                                text.AlignCenter();
                                                text.Line("KẾT QUẢ PHÂN BỐ VÀ SỬ DỤNG KINH PHÍ NGÂN SÁCH NHÀ NƯỚC CHI CHO").Bold();
                                                text.Line("KHOA HỌC VÀ CÔNG NGHỆ CỦA ĐỊA PHƯƠNG").Bold();
                                                text.Line($"Kỳ báo cáo: Năm {nam_ky} ").Italic();
                                                text.Span($"(Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic().LineHeight(1);
                                                //
                                                column.Item().PaddingVertical(5).AlignCenter().Width(90).LineHorizontal(1).LineColor(Colors.Black);
                                            });

                                row.RelativeItem(4)
                                        .AlignRight()
                                        .Text(text =>
                                        {
                                            //text.ParagraphSpacing(1);
                                            text.AlignLeft();
                                            text.Line("Đơn vị báo cáo").Bold();
                                            text.Line("UBND cấp tỉnh");
                                            text.Line("Đơn vị nhận báo cáo").Bold();
                                            text.Span("Bộ Khoa học và Công nghệ");

                                        });
                            });
                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung
                           column.Item().Row(
                              row =>
                              {
                                  row.RelativeItem()
                                  .AlignRight()
                                  .PaddingVertical(3)
                                    //.Border(1)
                                    .Text(text =>
                                    {
                                        text.ParagraphSpacing(1);
                                        text.Span("Đơn vị trính:triệu đồng").Italic();
                                    });
                                  //START table
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(100);
                                          columns.RelativeColumn(45);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);

                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!
                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nội Dung").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Kinh phí trung ương thông báo").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Kinh phí do UBND cấp tỉnh phê duyệt").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Kinh phí thực hiện").Bold();

                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page in pageSizes)
                                      {
                                          // Kiểm tra xem có dữ liệu tương ứng với mã index không
                                          if (page.index == "I" || page.index == "II")
                                          {
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.index).Bold();
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content1).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          }
                                          else if (page.index == "")
                                          {
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.index).Bold();
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content1).Bold();

                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          }
                                          else
                                          {
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.index);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          }
                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  //END table
                              });
                       });
                    page.Footer()
                   .AlignCenter()
                   .Text(x =>
                   {
                       x.Span("Page ");
                       x.CurrentPageNumber();
                   });
                });
            })
            .GeneratePdf(path);

        return path;
    }

    public string XuatMau2BTT13(string path, Workflow workflow)
    {
        var Tong_C2 = "";
        var Tong_C3 = "";

        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";

        //Bảng 1
        var contentDict = new Dictionary<string, List<(string, string, string, string)>>
        {
            { "I", new List<(string, string, string, string)>()            
            },
            { "II", new List<(string, string, string, string)>()         
            },          
              { "B", new List<(string, string, string, string)>()
                {
                    ("I", "Dự án 1", "", ""),
                    ("II", "Dự án 2", "", ""),                
                }
            }
        };
        var pageSizes = new List<(string content1, string content2, string content3, string content4)>()
                {
                       ("A", "Tổng kinh phí sự nghiệp khoa học và công nghệ(I+II)","",""),
                       ("I", "Nhiệm vụ cấp quốc gia (chi tiết tưng nhiệm vụ)","",""),
                       ("II", "Nhiệm vụ cấp Bộ","",""),             
                       ("B", "Tổng kinh phí đầu tư và phát triển","",""),
                };


        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
              

                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {

                            contentDict["I"].Add((
                            page.id ?? "",
                            page.NoiDung ?? "",
                            page.KinhPhiTrungUong ?? "",
                            page.KinhPhiTrucTiep ?? ""
                           
                            ));
                        }
                    }
                    if (data2.d2 != null)
                    {
                        foreach (var page in data2.d2)
                        {
                            contentDict["II"].Add((
                             page.tt ?? "",
                            page.NoiDung ?? "",
                            page.KinhPhiTrungUong ?? "",
                            page.KinhPhiTrucTiep ?? ""


                            ));
                        }


                    }
                    if (data2.d3 != null)
                    {
                        foreach (var page in data2.d3)
                        {
                           
                            contentDict["II"].Add((
                            page.id,
                            page.NoiDung ?? "",
                            page.KinhPhiTrungUong ?? "",
                            page.KinhPhiTrucTiep ?? ""


                            ));
                        }
                    }
                
                    if (data2.total != null)
                    {
                        foreach (var page in data2.total)
                        {
                            contentDict["B"].Add(("", page.NoiDung, page.KinhPhiTrungUong, page.KinhPhiTrucTiep));
                        }
                    }
                }

            }
           
        }

        //-------------------------------------------------------------
        QuestPDF.Fluent.Document.Create(container =>
        {

            container.Page(page =>
            {
                page.Size(PageSizes.A4);
                page.Margin(2, Unit.Centimetre);
                page.PageColor(Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                page.Header().ShowOnce()
               .Column(column =>
               {
                   column.Item().Row(
                     row =>
                     {
                     });


                   column.Item().Row(

                        row =>
                        {
                            //row.Spacing(10);
                            row.RelativeItem(4)
                                         .AlignLeft()
                                          .Text(text =>
                                          {
                                              //text.ParagraphSpacing(1);
                                              text.AlignCenter();
                                              text.Line("Biểu số 02b/KP").Bold();


                                          });
                            row.RelativeItem(7)
                                        .AlignCenter()
                                        .Text(text =>
                                        {
                                            //text.ParagraphSpacing(1);
                                            text.AlignCenter();
                                            text.Line("KẾT QUẢ PHÂN BỐ VÀ SỬ DỤNG KINH PHÍ NGÂN SÁCH NHÀ NƯỚC CHI CHO").Bold();
                                            text.Line("KHOA HỌC VÀ CÔNG NGHỆ CỦA BỘ,NGÀNH").Bold();
                                            text.Line($"Kỳ báo cáo: Năm {nam_ky} ").Italic();
                                            text.Span($"(Từ ngày {tu_ngay}  tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic().LineHeight(1);
                                            column.Item().PaddingVertical(5).AlignCenter().Width(90).LineHorizontal(1).LineColor(Colors.Black);
                                        });

                            row.RelativeItem(4)
                                    .AlignRight()
                                    .Text(text =>
                                    {
                                        //text.ParagraphSpacing(1);
                                        text.AlignLeft();
                                        text.Line("Đơn vị báo cáo").Bold();
                                        text.Line("Bộ, ngành;");
                                        text.Line("Đơn vị nhận báo cáo").Bold();
                                        text.Span("Bộ Khoa học và Công nghệ");

                                    });
                        });
               });
                page.Content()
                   //.PaddingVertical(0, Unit.Centimetre)
                   .Column(column =>
                   {
                       //nọi dung

                       column.Item().Row(
                          row =>
                          {
                              row.RelativeItem()
                              .AlignRight()
                              .PaddingVertical(3)
                                     //.Border(1)
                                     .Text(text =>
                                     {
                                         text.ParagraphSpacing(1);
                                         text.Span("Đơn vị trính:triệu đồng").Italic();
                                     });
                              //START table
                              column.Item().Table(table =>
                              {
                                  IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                  {
                                      return container
                                          .Border(1)
                                          .BorderColor(Colors.Black)
                                          //.Background(backgroundColor)
                                          .PaddingVertical(5)
                                          .PaddingHorizontal(5)
                                          .AlignMiddle();
                                  }
                                  table.ColumnsDefinition(columns =>
                                  {
                                      columns.RelativeColumn(30);
                                      columns.RelativeColumn(90);
                                      columns.RelativeColumn(45);
                                      columns.RelativeColumn(35);

                                  });
                                  table.Header(header =>
                                  {
                                      // please be sure to call the 'header' handler!
                                      header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                      header.Cell().Element(CellStyle).AlignCenter().Text("Nội Dung").Bold();
                                      header.Cell().Element(CellStyle).AlignCenter().Text("Kinh phí trung ương giao").Bold();
                                      header.Cell().Element(CellStyle).AlignCenter().Text("Kinh phí thực hiện").Bold();

                                      // you can extend existing styles by creating additional methods
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                  });

                                  foreach (var page in pageSizes)
                                  {
                                      // Hiển thị dữ liệu của pageSizes2
                                      table.Cell().Element(CellStyle).AlignCenter().Text(page.content1).Bold();
                                      table.Cell().Element(CellStyle).AlignLeft().Text(page.content2).Bold();
                                      table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                      table.Cell().Element(CellStyle).AlignLeft().Text(page.content4);

                                      if (contentDict.TryGetValue(page.content1, out var content))
                                      {
                                          foreach (var tuple in content)
                                          {
                                              

                                              if (tuple.Item1 == "")
                                              {
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item1);
                                                  table.Cell().Element(CellStyle).AlignLeft().Text(tuple.Item2).Bold();
                       
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item3);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item4);
                                              }else if(tuple.Item1 == "I" || tuple.Item1 == "II")
                                              {
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item1).Bold();
                                                  table.Cell().Element(CellStyle).AlignLeft().Text(tuple.Item2);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item3);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item4);
                                              }

                                              else {
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item1);
                                                  table.Cell().Element(CellStyle).AlignLeft().Text(tuple.Item2);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item3);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item4);
                                              }
                            
                                            
                                          }
                                      }
                                  }
                                  IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                  //}
                              });
                              //END table
                          });
                   });
                page.Footer()
               .AlignCenter()
               .Text(x =>
               {
                   x.Span("Page ");
                   x.CurrentPageNumber();
               });
            });
        })
       .GeneratePdf(path);

        return path;
    }

    public string XuatMau2CTT13(string path, Workflow workflow)
    {

        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";

        //Thêm dữ liệu sẵn
        var pagesizes = new List<(string index, string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9, string content10, string content11, string content12, string content13)>()
        {
          
        };
        var pagesizes1 = new List<(string index, string content1, string content2, string content3, string content4, string content5, string content6)>()
        {
            
        };
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
    

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;


                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {

                            pagesizes.Add((

                            page.tt ?? "",
                            page.NoiDungHoatDong ?? "",
                            page.SoLuong ?? "",
                            page.PheDuyet ?? "",
                            page.ThucHien ?? "",
                            page.DuThaoChinhSach ?? "",
                            page.KetQuaDuThao ?? "",
                            page.QuyTrinhQuyPham ?? "",
                            page.MoHinh ?? "",
                            page.PhuongPhapNghienCuu ?? "",
                            page.BaiBao ?? "",
                           page.SoDoBanDo ?? "",
                           page.CoSoDuLieu ?? "",
                            page.CacSanPhamKhac ?? ""

                            ));
                        }
                       

                    }

                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;

                    if (data3.d1 != null)
                    {
                        foreach (var page in data3.d1)
                        {
                            pagesizes1.Add((
                              page.tt ?? "",
                              page.NoiDungHoatDong ?? "",
                              page.SoDuAn ?? "",
                              page.PheDuyet ?? "",
                              page.ThucHien ?? "",
                              page.DuAnVanHanh ?? "",
                              page.DuAnTraNoThay?? ""
                              ));
                        }
                      

                    }


                }

            }
        }

        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(1, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().Row(

                            row =>
                            {
                                //row.Spacing(10);
                                                row.RelativeItem(4)
                                              .AlignCenter()
                                              .Text(text =>
                                              {
                                                  //text.ParagraphSpacing(1);
                                                  text.AlignCenter();
                                                  text.Line("Biểu số 02c/QUY").Bold();
                                              });
                                            row.RelativeItem(7)
                                            .AlignCenter()
                                            .Text(text =>
                                            {
                                                //text.ParagraphSpacing(1);
                                                text.AlignCenter();
                                                text.Line("KẾT QUẢ HOẠT ĐỘNG VÀ SỬ DỤNG KINH PHÍ").Bold();
                                                text.Line("CỦA QUỸ PHÁT TRIỂN KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                                                text.Line($"Kỳ báo cáo: Năm {nam_ky}").Italic();
                                                text.Span($"(Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic().LineHeight(1);
                                                //


                                            });
                            column.Item().PaddingBottom(20).AlignCenter().Width(70).LineHorizontal(1).LineColor(Colors.Black);

                            column.Item().
                            PaddingVertical(4)
                            .Text(text =>
                            {

                                text.Span("1.Hoạt động tài trợ các nhiệm vụ khoa học và công nghệ").Bold();
                            });
                                row.RelativeItem(4)
                                        .AlignRight()
                                        .Text(text =>
                                        {
                                            //text.ParagraphSpacing(1);
                                            text.AlignLeft();
                                            text.Line("Đơn vị báo cáo").Bold();
                                            text.Line("- Bộ,ngành");
                                            text.Line("- UBND cấp tỉnh;");
                                            text.Line("Đơn vị nhận báo cáo").Bold();
                                            text.Span("Bộ Khoa học và Công nghệ");

                                        });
                            });

                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung

                           column.Item().Row(
                              row =>
                              {
                                  //START table
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(5)
                                              .AlignCenter()
                                              .PaddingHorizontal(1)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {


                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(90);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          //

                                      });
                                      table.Header(header =>
                                      {

                                          header.Cell().RowSpan(2).Element(CellStyle).ExtendHorizontal().AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).Text("Nội dung hoạt động").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).Text("Số lượng").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).Text(Text =>
                                          {
                                              Text.Line("Kinh phí").Bold();
                                              Text.Line("(Triệu đồng)").Italic();
                                          });
                                          header.Cell().ColumnSpan(9).Element(CellStyle).Text(Text =>
                                          {
                                              Text.Line("Kết quả").Bold();
                                              Text.Line("(Số lượng)").Italic();
                                          });
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Phê duyệt").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Thực hiện").Bold();

                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự thảo cơ chế chính sách").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Kết quả dự báo").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Quy trình/Quy phạm").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Mô hình").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Phương pháp nghiên cứu").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Bài báo").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Sơ đồ/bản đồ").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cơ sở dữ liệu").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Các sản phẩm khác").Bold();



                                          foreach (var page in pagesizes)
                                          {
                                              table.Cell().Element(CellStyle).Text(page.index);
                                              if (page.content1 == "Tổng")
                                              {
                                                  table.Cell().Element(CellStyle).Text(page.content1).Bold();
                                              }
                                              else { table.Cell().Element(CellStyle).Text(page.content1); }

                                         
                                              table.Cell().Element(CellStyle).Text(page.content2);
                                              table.Cell().Element(CellStyle).Text(page.content3);
                                              table.Cell().Element(CellStyle).Text(page.content4);
                                              table.Cell().Element(CellStyle).Text(page.content5);
                                              table.Cell().Element(CellStyle).Text(page.content6);
                                              table.Cell().Element(CellStyle).Text(page.content7);
                                              table.Cell().Element(CellStyle).Text(page.content8);
                                              table.Cell().Element(CellStyle).Text(page.content9);
                                              table.Cell().Element(CellStyle).Text(page.content10);
                                              table.Cell().Element(CellStyle).Text(page.content11);
                                              table.Cell().Element(CellStyle).Text(page.content12);
                                              table.Cell().Element(CellStyle).Text(page.content13);

                                          }
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });


                                  });
                                  //END table



                                  column.Item().
                                      PaddingVertical(4)
                                      .Text(text =>
                                      {

                                          text.Span("2.Hoạt động bão lãnh,cho vay").Bold();
                                      });

                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(5)

                                              .PaddingHorizontal(5)
                                          .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {


                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);

                                      });
                                      table.Header(header =>
                                      {

                                          header.Cell().RowSpan(2).Element(CellStyle).ExtendHorizontal().AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Nội dung hoạt động").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(" Số dự án").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text(Text =>
                                          {
                                              Text.Line("Kinh phí").Bold();
                                              Text.Line("(triệu đồng)").Italic();
                                          });
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text(Text =>
                                          {
                                              Text.Line("Kết quả").Bold();
                                              Text.Line("(số lượng)").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Phê duyệt").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Thực hiện").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Số dự án đang vận hành").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Số dự án đã trả nợ thay").Bold();
                                          foreach (var page in pagesizes1)
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.index);

                                              if(page.content1 == "Tổng")
                                              {
                                                  table.Cell().Element(CellStyle).Text(page.content1).Bold();
                                              }
                                              else { table.Cell().Element(CellStyle).Text(page.content1); }                         
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                          }
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });


                                  });



                              });

                       });

                    page.Footer()
                   .AlignCenter()
                   .Text(x =>
                   {
                       x.Span("Page ");
                       x.CurrentPageNumber();
                   });
                });
            })
            .GeneratePdf(path);

        return path;
    }
    //
    public string XuatMau3ATT13(string path, Workflow workflow)
    {
        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";
        //Bảng 1
        //
        var contentDict = new Dictionary<string, List<(string, string, string, string, string, string, string)>>
        {
            { "I", new List<(string, string, string, string, string, string, string)>()},
            { "II", new List<(string, string, string, string, string, string, string)>()},
            { "III", new List<(string, string, string, string, string, string, string)>()}
        };

        var pageSizes2 = new List<(string index, string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8)>()
        {                   
        };
        var pageSizes3 = new List<(string index, string content2)>()
        {
               ("I", "Bài báo,công bố,giải pháp,kiến nghị,ấn phẩm khoa học"),
               ("II", "Sáng chế,giải pháp hữu ích,các loại giống mới,chế phẩm mới;các văn bản vẽ thiết kế mới,mẫu máy,thiết bị mới"),
               ("III", "Kết quả khác"),
        };

        var pageSizes4 = new List<(string index, string content1, string content2, string content3)>()
        {           
        };

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
        dynamic? step4;
 

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;


                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {

                            contentDict["I"].Add((
                            page.id ?? "",
                            page.NoiDung ?? "",
                            page.CoQuanThamQuyen ?? "",
                            page.NgayThangNam ?? "",
                            page.DonViChuTri ?? "",
                            page.TacGia ?? "",
                            page.TomTatNoiDung ?? ""

                            ));
                        }

                    }
                    //
                    if (data2.d2 != null)
                    {
                        foreach (var page in data2.d2)
                        {

                            contentDict["II"].Add((
                            page.id ?? "",
                            page.NoiDung ?? "",
                            page.CoQuanThamQuyen ?? "",
                            page.NgayThangNam ?? "",
                            page.DonViChuTri ?? "",
                            page.TacGia ?? "",
                            page.TomTatNoiDung ?? ""

                            ));
                        }

                    }
                    //
                    if (data2.d3 != null)
                    {
                        foreach (var page in data2.d3)
                        {
                            contentDict["III"].Add((
                              page.id ?? "",
                              page.NoiDung ?? "",
                              page.CoQuanThamQuyen ?? "",
                              page.NgayThangNam ?? "",
                              page.DonViChuTri ?? "",
                              page.TacGia ?? "",
                              page.TomTatNoiDung ?? ""
                              ));
                        }

                    }

                }
            }               
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3= JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {


                    dynamic? data3 = step3.form.data;

                    if (data3.d1 != null)
                    {
                        foreach (var page in data3.d1)
                        {
                            pageSizes2.Add((
                              page.tt ?? "",
                              page.LoaiHinhNhiemVu ?? "",
                              page.KhoaHocTuNhien ?? "",
                              page.KyThuatCongNghe ?? "",
                              page.KhoaHocNongNghiep ?? "",
                              page.KhoaHocGiaoDuc ?? "",
                              page.KhoaHocXaHoi ?? "",
                              page.KhoaHocNhanVan ?? "",
                              page.TongSo ?? ""
                              ));
                        }

                      

                    }


                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
            {
                step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step4 != null)
                {


                    dynamic? data4 = step4.form.data;

                    if (data4.d1 != null)
                    {
                        foreach (var page in data4.d1)
                        {
                            pageSizes4.Add((
                              page.id ?? "",
                              page.TenSanPham ?? "",
                              page.CoQuanChuTri ?? "",
                              page.HieuQuaKinhTe ?? ""                      

                              ));
                        }

                    }


                }

            }

        }
        //-------------------------------------------------------------
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().Row(
                         row =>
                         {
                         });

                       column.Item()
                       .AlignLeft()
                      .Text(text =>
                      {

                          text.Line("3.Báo cáo kết quả nghiên cứu khoa học,phát triển công nghệ và kết quả hoạt động chuyển giao,ứng dụng,đổi mới công nghệ,thông tin khoa học và công nghệ").Bold();
                      });
                       column.Item().Row(

                            row =>
                            {
                                //row.Spacing(10);
                                row.RelativeItem(4)
                                             .AlignLeft()
                                              .Text(text =>
                                              {
                                                  //text.ParagraphSpacing(1);
                                                  text.AlignCenter();
                                                  text.Line("Biểu số 03a/NCKH").Bold();


                                              });
                                row.RelativeItem(7)
                                            .AlignCenter()
                                            .Text(text =>
                                            {
                                                //text.ParagraphSpacing(1);
                                                text.AlignCenter();
                                                text.Line("KẾT QUẢ NGHIÊN CỨU KHOA HỌC").Bold();
                                                text.Line("VÀ PHÁT TRIỂN CÔNG NGHỆ").Bold();
                                                text.Line($"Kỳ báo cáo: Năm {nam_ky}").Italic();
                                                text.Span($"(Từ ngày {tu_ngay} tháng  {tu_thang} năm  {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm  {den_nam} )").Italic().LineHeight(1);

                                                //
                                                column.Item().PaddingVertical(5).AlignCenter().Width(70).TranslateY(-35).LineHorizontal(1).LineColor(Colors.Black);

                                            });

                                row.RelativeItem(4)
                                        .AlignRight()
                                        .Text(text =>
                                        {
                                            //text.ParagraphSpacing(1);
                                            text.AlignLeft();
                                            text.Line("Đơn vị báo cáo").Bold();
                                            text.Line("- Bộ, ngành;");
                                            text.Line("- Đại học quốc gia;");
                                            text.Line("- UBND cấp tỉnh;");
                                            text.Line("Đơn vị nhận báo cáo").Bold();
                                            text.Span("Bộ Khoa học và Công nghệ");

                                        });
                            });

                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung

                           column.Item().Row(
                              row =>
                              {
                                  row.RelativeItem()
                                  .AlignLeft()
                                  .PaddingVertical(3)
                                         //.Border(1)
                                         .Text(text =>
                                         {
                                             text.ParagraphSpacing(1);
                                             text.Span("1. Kết quả hoạt động nghiên cứu khoa học và phát triển công nghệ").Bold();
                                         });
                                  //START table
                                  column.Item().Table(table =>
                                  {


                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(90);
                                          columns.RelativeColumn(45);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(35);
                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!
                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nội Dung").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cơ quan có thẩm quyền công nhận/đăng bài").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Ngày,tháng,năm,công nhận/đăng bài").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Đơn vị chủ trì").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tác giả").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tóm tắt nội dung").Bold();
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page1 in pageSizes3)
                                      {
                                          // Hiển thị dữ liệu của pageSizes2
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.index).Bold();
                                          table.Cell().ColumnSpan(6).Element(CellStyle).AlignLeft().Text(page1.content2).Bold();

                                          // Kiểm tra xem có dữ liệu tương ứng với mã index không
                                          if (contentDict.TryGetValue(page1.index, out var content))
                                          {
                                              foreach (var tuple in content)
                                              {
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item1);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item2);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item3);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item4);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item5);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item6);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item7);

                                              }
                                          }
                                          //}


                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  //END table


                                  column.Item()
                                  .PaddingTop(10)
                                 .Text(text =>
                                 {
                                     text.AlignLeft();
                                     text.Span("2.Tổng hợp các nhiệm vụ khoa học và công nghệ được triển khai").Bold();
                                 });


                                  column.Item().Table(table =>
                                  {


                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(65);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!
                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Loại hình nhiệm vụ").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Khoa học tự nhiên").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Khoa học Kỹ thuật và công nghệ").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Khoa học nông nghiệp").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Khoa học giáo dục, đào tạo,y dược").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Khoa học xã hội").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Khoa học nhân văn").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tổng số").Bold();
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page in pageSizes2)
                                      {
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.index);
                                          if (page.content1 == "Tổng")
                                          {
                                              table.Cell().Element(CellStyle).Text(page.content1).Bold();
                                          }
                                          else
                                          {
                                              table.Cell().Element(CellStyle).Text(page.content1);
                                          }                               
                                         
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);

                                      }
                                      //}

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  column.Item()
                                   .PaddingTop(8)
                                            .Text(text =>
                                            {
                                                text.AlignLeft();

                                                text.Span("3.Kết quả nổi bật về ứng dụng khoa học và công nghệ").Bold();

                                            });

                              }); column.Item().Table(table =>
                              {

                                  IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                  {
                                      return container
                                          .Border(1)
                                          .BorderColor(Colors.Black)
                                          //.Background(backgroundColor)
                                          .PaddingVertical(5)
                                          .PaddingVertical(5)
                                          .PaddingHorizontal(5)
                                          .AlignMiddle();
                                  }
                                  table.ColumnsDefinition(columns =>
                                  {
                                      columns.RelativeColumn(10);
                                      columns.RelativeColumn(40);
                                      columns.RelativeColumn(35);
                                      columns.RelativeColumn(45);
                                  });
                                  table.Header(header =>
                                  {
                                      // please be sure to call the 'header' handler!
                                      header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                      header.Cell().Element(CellStyle).AlignCenter().Text("Tên sản phẩm/công trình/công nghệ").Bold();
                                      header.Cell().Element(CellStyle).AlignCenter().Text("Cơ quan chủ trì xây dựng công trình/công nghệ").Bold();
                                      header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                      {
                                          text.Line("Hiệu quả kinh tế-xã hội").Bold();
                                          text.Line("(Giải trình chi tiết giá trị làm lợi so sánh với sản phẩm công nghệ cùng loại,ý nghĩa kinh tế xã hội,môi trường...)").Italic();
                                      });

                                      // you can extend existing styles by creating additional methods
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                  });
                                  foreach (var page in pageSizes4)
                                  {
                                      table.Cell().Element(CellStyle).AlignCenter().Text(page.index);
                                      table.Cell().Element(CellStyle).Text(page.content1);
                                      table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                      table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                  }
                                  //}

                                  IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                  //}
                              });
                       });

                    page.Footer()
                   .AlignCenter()
                   .Text(x =>
                   {
                       x.Span("Page ");
                       x.CurrentPageNumber();
                   });
                });
            })
            .GeneratePdf(path);

        return path;
    }
    public string XuatMau3BTT13(string path, Workflow workflow)
    {

        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";

        var pageSizes1 = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8)>()
{         
};
        //-------------------------------------------------------
        var pageSizes2 = new List<(string content1, string content2, string content3, string content4, string content5, string content6)>()
{
};
        //--------------------
        var pageSizes3 = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9)>()
{
};
        //-------------------------------
        var pageSizes4 = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7)>()
{
};
        //-----------------
        var pageSizes5 = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8)>()
        {
        };
        //---------------------
        var pageSizes6 = new List<(string content1, string content2, string content3, string content4)>()
{
};


        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
     
        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    };
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {

                            pageSizes1.Add((

                            page.tt ?? "",
                            page.LinhVuc ?? "",
                            page.KinhPhiDauTu ?? "",
                            page.CongNgheTienTien ?? "",
                            page.TuNghienCuu ?? "",
                            page.PhoiHopNghienCuu ?? "",
                            page.MuaNhanChuyenGiao ?? "",
                            page.ThongQuaDuAn ?? ""

                            ));
                        }
                     
                    }
                    if (data2.d2 != null)
                    {
                        foreach (var page in data2.d2)
                        {

                            pageSizes2.Add((
                            page.tt ?? "",
                            page.LinhVuc ?? "",
                            page.TongGiaSanPham ?? "",
                            page.NangSuatLaoDong ?? "",
                            page.KinhPhiCongNghe ?? "",
                            page.SoLaoDong ?? ""
                           
                            ));
                        }
                       
                    }
                    if (data2.d3 != null)
                    {
                        foreach (var page in data2.d3)
                        {

                            pageSizes3.Add((
                            page.tt ?? "",
                            page.DoanhNghiepSanXuat ?? "",
                            page.MaSoThue ?? "",
                            page.DoanhThu ?? "",
                            page.TongSoLaoDong ?? "",
                            page.LaoDongPhatTrien ?? "",
                            page.TuDoanhNghiep ?? "",
                            page.HoTroNganSach ?? "",
                            page.NguonKhac ?? ""
                            ));
                        }
                 

                    }
                    if (data2.d4 != null)
                    {
                        foreach (var page in data2.d4)
                        {

                            pageSizes4.Add((
                            page.id ?? "",
                            page.TenCongNghe ?? "",
                            page.MucDichQuyMo ?? "",
                            page.NghienCuuPhatTrien ?? "",
                            page.PhoiHopNghienCuu ?? "",
                            page.MuaNhanChuyenGiao ?? "",
                            page.KeuGoiDauTu ?? ""
                        
                            ));
                        }
                    }
                    if (data2.d5 != null)
                    {
                        foreach (var page in data2.d5)
                        {

                            pageSizes5.Add((
                            page.tt ?? "",
                            page.TenDoanhNghiep ?? "",
                            page.MaSoThue ?? "",
                            page.CongNgheNghienCuu ?? "",
                            page.KinhPhiUngDung ?? "",
                            page.DoanhThu ?? "",
                            page.SoLaoDongNghienCuu ?? "",
                            page.TongSoLaoDong ?? ""
                            ));
                        }
                      
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {


                    dynamic? data3 = step3.form.data;

                    if (data3.d1 != null)
                    {
                        foreach (var page in data3.d1)
                        {
                            pageSizes6.Add((

                              page.tt ?? "",
                              page.NoiDung ?? "",
                              page.DonViTinh ?? "",
                              page.SoLuong ?? ""
                              ));
                        }

                    }


                }

            }
        }
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()

                   .Column(column =>

                   {

                       column.Item().Row(
                       row =>
                       {

                           //row.Spacing(10);
                           row.RelativeItem(4)
                                        .AlignLeft()
                                         .Text(text =>
                                         {
                                             //text.ParagraphSpacing(1);
                                             text.AlignCenter();
                                             text.Line("Biểu số 03b/ƯDCN").Bold();
                                         });
                           row.RelativeItem(6)
                      .AlignCenter()
                      .Text(text =>
                      {
                          //text.ParagraphSpacing(1);
                          text.AlignCenter();
                          text.Line("KẾT QUẢ HOẠT ĐỘNG ỨNG DỤNG VÀ PHÁT TRIỂN CÔNG NGHỆ").Bold();
                          text.Span($"Kỳ báo cáo: Năm {nam_ky} (Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic();
                          column.Item().PaddingVertical(5).AlignCenter().Width(90).LineHorizontal(1).LineColor(Colors.Black);
                      });

                           row.RelativeItem(4)
                                   .AlignRight()
                                   .Text(text =>
                                   {
                                       //text.ParagraphSpacing(1);
                                       text.AlignLeft();
                                       text.Line("Đơn vị báo cáo:").Bold();
                                       text.Line("UBND cấp tỉnh");
                                       text.Line("Đơn vị nhận báo cáo:").Bold();
                                       text.Span("Bộ Khoa học và Công nghệ");
                                   });

                       });
                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung
                           column.Item().PaddingTop(5).Text(text =>
                           {
                               text.Line("1.Hoạt động ứng dụng công nghệ mới,công nghệ tiên tiến phục vụ sản xuất kinh doanh trong các lĩnh vực").Bold();
                           });

                           column.Item().Row(
                              row =>
                              {


                                  //START table
                                  //


                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);

                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Lĩnh vực ").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Kinh phí đầu tư ứng dụng công nghệ mới,công nghệ tiên tiến").Bold();
                                              text.Line("(Triệu đồng)").Italic();

                                          });
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Một số công nghệ mới,công nghệ tiên tiến đã được ứng dụng").Bold();
                                          header.Cell().ColumnSpan(4).Element(CellStyle).AlignCenter().Text("Dự kiến phương án phát triển ứng dụng").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tự nghiên cứu,phát triển").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Phối hợp nghiên cứu").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Mua/nhận chuyển giao").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Thông qua dự án đầu tư").Bold();

                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page1 in pageSizes1)
                                      {
                                          if (page1.content2 == "Tổng")
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content2).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content5);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page1.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content8);

                                          }
                                          else
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content1);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page1.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content5);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page1.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page1.content8);

                                          }


                                          //}
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  column.Item().PaddingTop(5).Text(text =>
                                  {
                                      text.Line("2.Hoạt động ứng dụng, chuyển giao công nghệ").Bold();
                                  });




                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);


                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Lĩnh vực ").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Tổng giá trị sản phẩm/dịch vụ").Bold();
                                              text.Line("(Triệu đồng)").Italic();

                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Năng suất lao động").Bold();
                                              text.Line("(Triệu đồng/lao động)").Italic();

                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Kinh phí đầu tư ứng dụng,chuyển giao trang thiết bị công nghệ").Bold();
                                              text.Line("(Triệu đồng)").Italic();

                                          });

                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Số lao động nghiên cứu,ứng dụng,chuyển giao công nghệ").Bold();
                                              text.Line("(người)").Italic();

                                          });
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page2 in pageSizes2)
                                      {
                                          if (page2.content2 == "Tổng")
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content2).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content5);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content6);
                                          }
                                          else
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content1);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page2.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content5);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page2.content6);
                                          }
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });


                                  column.Item().PaddingTop(5).Text(text =>
                                  {
                                      text.Line("3.Hoạt động phát triển công nghệ của doanh nghiệp sản xuất sản phẩm chủ lực,sản phẩm trọng điểm").Bold();
                                  });

                                  //END table
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);

                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Doanh nghiệp sản xuất sản phẩm chủ lực,trọng điểm").Bold();

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Mã số thuế").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Kinh phí đầu tư phát triển,đổi mới công nghệ").Bold();
                                              text.Line("(Triệu đồng)").Italic();

                                          });
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Doanh thu").Bold();
                                              text.Line("(Triệu đồng)").Italic();

                                          }); ;
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Tổng số lao động").Bold();
                                              text.Line("(người)").Italic();

                                          }); ;

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Số lao động phát triển,đổi mới công nghệ").Bold();
                                              text.Line("(người)").Italic();

                                          });

                                          header.Cell().Element(CellStyle).AlignCenter().Text("Từ doanh nghiệp").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Hỗ trợ từ ngân sách").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nguồn khác").Bold();
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page3 in pageSizes3)
                                      {
                                          if (page3.content2 == "Tổng")
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content2).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content5);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page3.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content8);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content9);
                                          }
                                          else
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content5);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page3.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content8);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page3.content9);

                                          }
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });

                                  column.Item().PaddingTop(5).Text(text =>
                                  {
                                      text.Line("4.Định hướng công nghệ ưu tiên ứng dụng,phát triển").Bold();
                                      text.Line("(Căn cứ vào kế hoạch,chiến lược phát triển của địa phương để xuất các công nghệ định hướng ưu tiên ứng dụng phát triển và đổi mới trong giai đoạn sắp tới)").Italic();
                                  });


                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);


                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Tên công nghệ").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Mục đích,quy mô dự kiến ứng dụng").Bold();
                                          header.Cell().ColumnSpan(4).Element(CellStyle).AlignCenter().Text("Dự kiến phương án phát triển, chuyển giao,ứng dụng công nghệ").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tự nghiên cứu,phát triển").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Phối hợp nghiên cứu").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Mua/nhận chuyển giao").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Kêu gọi đầu tư").Bold();
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page4 in pageSizes4)
                                      {

                                          table.Cell().Element(CellStyle).AlignCenter().Text(page4.content1);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page4.content2);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page4.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page4.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page4.content5);
                                          table.Cell().Element(CellStyle).AlignLeft().Text(page4.content6);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page4.content7);

                                          //}
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });


                                  column.Item().PaddingTop(5).Text(text =>
                                  {


                                      text.Line("5.Doanh nghiệp điển hình về ứng dụng,phát triển công nghệ").Bold();

                                  });

                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);

                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tên doanh nghiệp").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Mã số thuế").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Công nghệ được nghiên cứu,ứng dụng,chuyên giao").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Kinh phí ứng dụng,đổi mới công nghệ").Bold();
                                              text.Line("(Triệu đồng)").Italic();

                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Doanh thu").Bold();
                                              text.Line("(Triệu đồng)").Italic();

                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Số lao động nghiên cứu, phát triển công nghệ").Bold();
                                              text.Line("(người)").Italic();

                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Tổng số lao động").Bold();
                                              text.Line("(người)").Italic();

                                          });

                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page5 in pageSizes5)
                                      {
                                          if (page5.content2 == "Tổng")
                                          {

                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content2).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content5);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page5.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content8);
                                          }
                                          else
                                          {

                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content5);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page5.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page5.content8);


                                          }
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  column.Item().PaddingTop(5).Text(text =>
                                  {


                                      text.Line("II.Kết quả hoạt động ứng dụng,đổi mới công nghệ").Bold();

                                  });

                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);


                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nội dung").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Đơn vị tính").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Số lượng").Bold();



                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page6 in pageSizes6)
                                      {

                                          table.Cell().Element(CellStyle).AlignCenter().Text(page6.content1);
                                          table.Cell().Element(CellStyle).AlignLeft().Text(page6.content2);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page6.content3).Italic();
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page6.content4);


                                          //}
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                              });
                       });
                    page.Footer()
           .Column(column =>
           {
               ;
               column.Item().Width(150).PaddingVertical(5).LineHorizontal(1).LineColor(Colors.Black);
               column.Item()
                  .Text(footerText =>
                  {



                      footerText.Span("Đánh dấu (x) vào phương án dự kiến,có thể chọn nhiều phương án").Italic();

                  });
           });
                });
            })
         .GeneratePdf(path);

        return path;

    }
    public string XuatMau3CTT13(string path, Workflow workflow)
    {
        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";

        var pageSizes = new List<(string index, string content1, string content2, string content3)>()
        {         
        };

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
 

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;

                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }

                    if (data1.d1 != null)
                    {
                        foreach (var page in data1.d1)
                        {
                            pageSizes.Add((
                            page.tt ?? "",
                            page.NoiDung ?? "",
                            page.DonViTinh ?? "",
                            page.SoLuong ?? ""                        
                            ));
                        }                    
                    }
                }

            }
          
        }
        //-------------------------------------------------------------
        QuestPDF.Fluent.Document
           .Create(container =>
           {

               container.Page(page =>
               {
                   page.Size(PageSizes.A4);
                   page.Margin(2, Unit.Centimetre);
                   page.PageColor(Colors.White);
                   page.DefaultTextStyle(x => x.FontSize(20));
                   page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                   page.Header().ShowOnce()
                  .Column(column =>
                  {

                      column.Item().Row(

                           row =>
                           {
                               //row.Spacing(10);
                               row.RelativeItem(4)
                                            .AlignLeft()
                                             .Text(text =>
                                             {
                                                 //text.ParagraphSpacing(1);
                                                 text.AlignCenter();
                                                 text.Line("Biểu số 03c/ĐMCN").Bold();


                                             });
                               row.RelativeItem(7)
                                           .AlignCenter()
                                           .Text(text =>
                                           {
                                               //text.ParagraphSpacing(1);
                                               text.AlignCenter();
                                               text.Line("KẾT QUẢ HOẠT ĐỘNG ĐỔI MỚI CÔNG NGHỆ TRÊN CẢ NƯỚC").Bold();
                                               text.Line($"Kỳ báo cáo: Năm {tu_nam} đến năm {den_nam}").Italic();
                                               text.Span($"(Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic().LineHeight(1);

                                               //

                                               column.Item().PaddingVertical(5).AlignCenter().Width(90).LineHorizontal(1).LineColor(Colors.Black);
                                           });

                               row.RelativeItem(4)
                                       .AlignRight()
                                       .Text(text =>
                                       {

                                           text.AlignLeft();
                                           text.Line("Đơn vị báo cáo:").Bold();
                                           text.Line("Bộ Khoa học và Công nghệ");
                                           text.Line("Đơn vị nhận báo cáo:").Bold();
                                           text.Span("Chính phủ");

                                       });
                           });
                  });
                   page.Content()

                      .Column(column =>
                      {
                          //nọi dung

                          column.Item().Row(
                             row =>
                             {

                                 //START table
                                 column.Item().Table(table =>
                                 {
                                     IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                     {
                                         return container
                                             .Border(1)
                                             .BorderColor(Colors.Black)
                                             //.Background(backgroundColor)
                                             .PaddingVertical(5)
                                             .PaddingHorizontal(5)
                                             .AlignMiddle();
                                     }
                                     table.ColumnsDefinition(columns =>
                                     {
                                         columns.RelativeColumn(20);
                                         columns.RelativeColumn(100);
                                         columns.RelativeColumn(45);
                                         columns.RelativeColumn(35);

                                     });
                                     table.Header(header =>
                                     {
                                         // please be sure to call the 'header' handler!
                                         header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                         header.Cell().Element(CellStyle).AlignCenter().Text("Nội Dung").Bold();
                                         header.Cell().Element(CellStyle).AlignCenter().Text("Đơn vị tính").Bold();
                                         header.Cell().Element(CellStyle).AlignCenter().Text("Số lượng").Bold();
                                         // you can extend existing styles by creating additional methods
                                         IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                     });
                                     foreach (var page in pageSizes)
                                     {
                                         // Kiểm tra xem có dữ liệu tương ứng với mã index không
                                         table.Cell().Element(CellStyle).AlignCenter().Text(page.index).Bold();
                                         table.Cell().Element(CellStyle).AlignLeft().Text(page.content1);
                                         table.Cell().Element(CellStyle).AlignCenter().Text(page.content2).Italic();
                                         table.Cell().Element(CellStyle).AlignLeft().Text(page.content3);
                                     }
                                     IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                     //}
                                 });
                                 //END table
                             });
                      });
                   page.Footer()
                  .AlignCenter()
                  .Text(x =>
                  {
                      x.Span("Page ");
                      x.CurrentPageNumber();
                  });
               });
           })
            .GeneratePdf(path);
        return path;
    }
    public string XuatMau3DTT13(string path, Workflow workflow)
    {
        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";

        var contentDict = new Dictionary<string, List<(string, string, string, string, string, string , string, string, string, string, string, string, string)>>
{
    { "I", new List<(string, string, string, string, string, string, string ,string, string, string, string, string, string)>()    
    },
    { "II", new List<(string, string, string, string, string, string, string,string, string, string, string, string, string)>()   
    },
     { "III", new List<(string, string, string, string, string, string, string,string, string, string, string, string, string)>()    
    }
};
        var pageSizes3 = new List<(string index, string content2)>()
{
       ("I", "Cấp mới Giấy chứng nhận đăng ký chuyển giao công nghệ"),
       ("II", "Cấp Giấy chứng nhận đăng ký sửa đổi,bổ sung chuyển giao công nghệ"),
       ("III", "Cấp Giấy chứng nhận đăng ký gia hạn chuyển giao công nghệ"),
};
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
        dynamic? step4;
   
        foreach (WorkflowStep workflowStep in steps)         
        {
            string DuAnDauTu;
            string MuaBanDocLap;
            string VonDauTuNuocNgoai;

            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;

                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    if (data2.d1 != null)
                    {

                        foreach (var page in data2.d1)
                        {
                            if (page.tt == "Tổng")
                            {
                                DuAnDauTu = page.DuAnDauTu  ?? "";
                                MuaBanDocLap = page.MuaBanDocLap ?? "";
                                VonDauTuNuocNgoai = page.VonDauTuNuocNgoai ?? "";

                            }
                            else
                            {
                                DuAnDauTu = page.DuAnDauTu.ToString().ToLower() == "true" ? "X" : "";
                                MuaBanDocLap = page.MuaBanDocLap.ToString().ToLower() == "true" ? "X" : "";
                                VonDauTuNuocNgoai = page.VonDauTuNuocNgoai.ToString().ToLower() == "true" ? "X" : "";
                            }
                            contentDict["I"].Add((
                            page.tt ?? "",
                            page.VanBanThoaThuan ?? "",
                            page.BenGiaoCongNghe ?? "",
                            page.BenNhanCongNghe ?? "",
                            page.TongGiaTriCongNghe ?? "",
                            DuAnDauTu,
                            MuaBanDocLap,
                            page.HinhThucKhac ?? "",
                            page.DoiTuongChuyenGiao ?? "",
                            page.LinhVucChuyenGiao ?? "",
                            page.SanPhamChuyenGiao ?? "",
                            page.ThoiHanVanBan ?? "",
                            VonDauTuNuocNgoai ?? ""

                            ));
                        }

                    }


                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;

                    if (data3.d1 != null)
                    {

                        foreach (var page in data3.d1)
                        {

                            if (page.tt == "Tổng")
                            {
                                DuAnDauTu = page.DuAnDauTu ?? "";
                                MuaBanDocLap = page.MuaBanDocLap?? "";
                                VonDauTuNuocNgoai = page.VonDauTuNuocNgoai?? "";

                            }
                            else
                            {
                                DuAnDauTu = page.DuAnDauTu.ToString().ToLower() == "true" ? "X" : "";
                                MuaBanDocLap = page.MuaBanDocLap.ToString().ToLower() == "true" ? "X" : "";
                                VonDauTuNuocNgoai = page.VonDauTuNuocNgoai.ToString().ToLower() == "true" ? "X" : "";
                            }

                            contentDict["II"].Add((
                            page.tt ?? "",
                            page.VanBanThoaThuan ?? "",
                            page.BenGiaoCongNghe ?? "",
                            page.BenNhanCongNghe ?? "",
                            page.TongGiaTriCongNghe ?? "",
                            DuAnDauTu,
                            MuaBanDocLap,
                            page.HinhThucKhac ?? "",
                            page.DoiTuongChuyenGiao ?? "",
                            page.LinhVucChuyenGiao ?? "",
                            page.SanPhamChuyenGiao ?? "",
                            page.ThoiHanVanBan ?? "",
                            VonDauTuNuocNgoai ?? ""

                            ));
                        }
                    }
                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
            {
                step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step4 != null)
                {
                    dynamic? data4 = step4.form.data;

                    if (data4.d1 != null)
                    {
                        foreach (var page in data4.d1)
                        {
                            if (page.tt == "Tổng")
                            {
                                DuAnDauTu = page.DuAnDauTu ?? "";
                                MuaBanDocLap = page.MuaBanDocLap ?? "";
                                VonDauTuNuocNgoai = page.VonDauTuNuocNgoai ?? "";

                            }
                            else
                            {
                                DuAnDauTu = page.DuAnDauTu.ToString().ToLower() == "true" ? "X" : "";
                                MuaBanDocLap = page.MuaBanDocLap.ToString().ToLower() == "true" ? "X" : "";
                                VonDauTuNuocNgoai = page.VonDauTuNuocNgoai.ToString().ToLower() == "true" ? "X" : "";
                            }

                            contentDict["III"].Add((
                            page.tt ?? "",
                            page.VanBanThoaThuan ?? "",
                            page.BenGiaoCongNghe ?? "",
                            page.BenNhanCongNghe ?? "",
                            page.TongGiaTriCongNghe ?? "",
                            DuAnDauTu,
                            MuaBanDocLap,
                            page.HinhThucKhac ?? "",
                            page.DoiTuongChuyenGiao ?? "",
                            page.LinhVucChuyenGiao ?? "",
                            page.SanPhamChuyenGiao ?? "",
                            page.ThoiHanVanBan ?? "",
                            VonDauTuNuocNgoai ?? ""

                            ));
                        }



                    }


                }

            }
        }
        //-------------------------------------------------------
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A3);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().Row(
                       row =>
                       {
                           //row.Spacing(10);
                           row.RelativeItem(4)
                                        .AlignLeft()
                                         .Text(text =>
                                         {
                                             //text.ParagraphSpacing(1);
                                             text.AlignCenter();
                                             text.Line("Biểu số 03d/CGCN").Bold();
                                         });
                           row.RelativeItem(6)
                      .AlignCenter()
                      .Text(text =>
                      {
                          //text.ParagraphSpacing(1);
                          text.AlignCenter();
                          text.Line("KẾT QUẢ HOẠT ĐỘNG ĐĂNG KÝ CHUYỂN GIAO CÔNG NGHỆ").Bold();
                          text.Span($"Kỳ báo cáo: Năm {nam_ky} (Từ ngày {tu_ngay} tháng  {tu_thang} năm  {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic();
                          column.Item().PaddingVertical(5).AlignCenter().Width(90).LineHorizontal(1).LineColor(Colors.Black);
                      });
                           row.RelativeItem(4)
                                   .AlignRight()
                                   .Text(text =>
                                   {
                                       //text.ParagraphSpacing(1);
                                       text.AlignLeft();
                                       text.Line("Đơn vị báo cáo:").Bold();
                                       text.Line("UBND cấp tỉnh");
                                       text.Line("Đơn vị nhận báo cáo:").Bold();
                                       text.Span("Bộ Khoa học và Công nghệ");
                                   });
                       });
                   });
                    page.Content()

                       .Column(column =>
                       {
                           //nọi dung
                           column.Item().Row(
                              row =>
                              {
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(40);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(60);

                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Tên văn bản thỏa thuận CGCN ").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Bên giao công nghệ").Bold();
                                              text.Line("(tên,địa chỉ)").Italic();
                                          });
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Bên nhận công nghệ").Bold();
                                              text.Line("(tên,địa chỉ)").Italic();
                                          });
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Tổng giá trị công nghệ chuyển giao").Bold();
                                              text.Line("(quy đổi về triệu đồng)").Italic();
                                          });
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Hình thức chuyển giao").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Đối tượng công nghệ chuyển giao").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Lĩnh vực công nghệ chuyển giao").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Sản phẩm của công nghệ chuyển giao").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Thời hạn văn bản thỏa thuận CGCN").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Bên nhận là doanh nghiệp có vốn đầu tư nước ngoài").Bold();
                                              text.Line("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Dự án đầu tư").Bold();
                                              text.Line("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Mua bán độc lập").Bold();
                                              text.Line("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Hình thức khác").Bold();
                                              text.Line("(ghi tên hình thức khác)").Italic();
                                          });
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page1 in pageSizes3)
                                      {
                                          // Hiển thị dữ liệu của pageSizes2
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.index).Bold();
                                          table.Cell().ColumnSpan(12).Element(CellStyle).AlignLeft().Text(page1.content2).Bold();
                                          if (contentDict.TryGetValue(page1.index, out var content))
                                          {
                                              foreach (var tuple in content)

                                              {
                                                  bool isBold = tuple.Item1.Contains("Tổng");
                                                  if (isBold)
                                                  {
                                                      table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item1).Bold();

                                                  }
                                                  else
                                                  {
                                                      table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item1);

                                              }
                                              table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item2);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item3);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item4);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item5);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item6);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item7);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item8);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item9);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item10);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item11);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item12);
                                                  table.Cell().Element(CellStyle).AlignCenter().Text(tuple.Item13);

                                              }

                                          }
                                          //}
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });


                                  //END table
                              });
                       });
                    page.Footer()
           .Column(column =>
           {
               ;
               column.Item().Width(150).PaddingVertical(5).LineHorizontal(1).LineColor(Colors.Black);
               column.Item()
                  .Text(footerText =>
                  {
                      footerText.Span("CGCN:Chuyển giao công nghệ;").Italic();
                      footerText.Span("Ghi tên tương ứng với cấp 2 của bảng Hệ thống ngành kinh tế Việt Nam theo quyết định số 27/2018/QĐ-TTg ngày 06 tháng 7 năm 2018 của Thủ tướng Chính phủ ban hành Hệ thống ngành kinh tế Việt Nam. ").Italic();
                  });
           });
                });
            })
           .GeneratePdf(path);
        return path;
    }
    public string XuatMau3DDTT13(string path, Workflow workflow)
    {

        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";

        var SKH_DG_1 = "";
        var SKH_DG_2 = "";
        var SKH_DG_3 = "";
        var SKH_DG_4 = "";
        var SKH_DT_1 = "";
        var SKH_DT_2 = "";
        var SKH_DT_3 = "";
        var SKH_DT_4 = "";

        var BT_DG_1 = "";
        var BT_DG_2 = "";
        var BT_DG_3 = "";
        var BT_DG_4 = "";
        var BT_DT_1 = "";
        var BT_DT_2 = "";
        var BT_DT_3 = "";
        var BT_DT_4 = "";

        var TC_DG_1 = "";
        var TC_DG_2 = "";
        var TC_DG_3 = "";
        var TC_DG_4 = "";
        var TC_DT_1 = "";
        var TC_DT_2 = "";
        var TC_DT_3 = "";
        var TC_DT_4 = "";

        var pageSizes3 = new List<(string index, string content1, string content2, string content3, string content4, string content5)>(){};
        var pageSizes4 = new List<(string index, string content1, string content2, string content3, string content4, string content5, string content6, string content7,string content8)>(){};
        var pageSizes2 = new List<(string index, string content1, string content2)>(){};      
        var pageSizes1 = new List<(string index, string content1, string content2, string content3, string content4, string content5, string content6)>(){};
        //-------------------------------------------------------------

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
        dynamic? step4;


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1) 
                        {
                            pageSizes1.Add((
                            page.tt ?? "",
                            page.NhiemVuKHCN ?? "",       
                            page.CapQuocGia ?? "",
                            page.CapBo ?? "",
                            page.CapTinh ?? "",
                            page.CapCoSo ?? "",
                            page.KhongSuDungNganSach ?? ""
                            ));                         
                        }

              
                    }
                   
                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {


                    dynamic? data3 = step3.form.data;

                    if (data3.d1 != null)
                    {
                        foreach (var page in data3.d1)
                        {

                            pageSizes2.Add((
                              page.tt ?? "",
                              page.NguonKinhPhi ?? "",
                              page.TongKinhPhi ?? ""                          
                              ));
                        }

                    }

                    if (data3.d2 != null)
                    {
                        foreach (var page in data3.d2)
                        {

                            if (page.tt == "1")
                            {
                                SKH_DG_1 = page.SuDungMua  ?? "";
                                SKH_DG_2 = page.SuDungNoiSinh ?? "";
                                SKH_DG_3 = page.KhongSuDungMua ?? "";
                                SKH_DG_4 = page.KhongSuDungNoiSinh ?? "";
                            }
                            if (page.NguonTinKHCN == "Sách khoa học và công nghệ Dạng điện tử")
                            {
                                SKH_DT_1 = page.SuDungMua ?? "";
                                SKH_DT_2 = page.SuDungNoiSinh ?? "";
                                SKH_DT_3 = page.KhongSuDungMua ?? "";
                                SKH_DT_4 = page.KhongSuDungNoiSinh ?? "";
                            }
                            if (page.tt == "2")
                            {
                                BT_DG_1 = page.SuDungMua ?? "";
                                BT_DG_2 = page.SuDungNoiSinh ?? "";
                                BT_DG_3 = page.KhongSuDungMua ?? "";
                                BT_DG_4 = page.KhongSuDungNoiSinh ?? "";
                            }
                            if (page.NguonTinKHCN == "Bản tin khoa học và công nghệ Dạng điện tử")
                            {
                                BT_DT_1 = page.SuDungMua ?? "";
                                BT_DT_2 = page.SuDungNoiSinh ?? "";
                                BT_DT_3 = page.KhongSuDungMua ?? "";
                                BT_DT_4 = page.KhongSuDungNoiSinh ?? "";
                            }
                            if (page.tt == "3")
                            {
                                TC_DG_1 = page.SuDungMua ?? "";
                                TC_DG_2 = page.SuDungNoiSinh ?? "";
                                TC_DG_3 = page.KhongSuDungMua ?? "";
                                TC_DG_4 = page.KhongSuDungNoiSinh ?? "";
                            }
                            if (page.NguonTinKHCN == "Tạp chí khoa học và công nghệ Dạng điện tử")
                            {
                                TC_DT_1 = page.SuDungMua ?? "";
                                TC_DT_2 = page.SuDungNoiSinh ?? "";
                                TC_DT_3 = page.KhongSuDungMua ?? "";
                                TC_DT_4 = page.KhongSuDungNoiSinh ?? "";
                            }
                            if (page.tt == "4")
                            {
                                pageSizes3.Add((
                                page.tt  ?? "",
                                page.NguonTinKHCN ?? "",
                                page.SuDungMua ?? "",
                                page.SuDungNoiSinh ?? "",
                                page.KhongSuDungMua ?? "",
                                page.KhongSuDungNoiSinh ?? ""
                                ));
                               
                            }
                            if (page.tt == "5")
                            {
                             pageSizes3.Add((
                             page.tt ?? "",
                             page.NguonTinKHCN ?? "",
                             page.SuDungMua ?? "",
                             page.SuDungNoiSinh ?? "",
                             page.KhongSuDungMua ?? "",
                             page.KhongSuDungNoiSinh ?? ""
                             ));

                            }
                            if (page.NguonTinKHCN == "Tổng")
                            {
                            pageSizes3.Add((
                            page.tt ?? "",
                            page.NguonTinKHCN ?? "",
                            page.SuDungMua ?? "",
                            page.SuDungNoiSinh ?? "",
                            page.KhongSuDungMua ?? "",
                            page.KhongSuDungNoiSinh ?? ""
                            ));
                            }
                          
                        }
                       
                    }
                }
            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
            {
                step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step4 != null)
                {
                    dynamic? data4 = step4.form.data;
                    if (data4.d1 != null)
                    {
                        string CoValue;
                        string KhongValue;
                        foreach (var page in data4.d1)                   
                        {
                           
                            if (page.tt == "Tổng")
                            {
                                 CoValue = page.Co ?? "";
                                 KhongValue = page.Khong ?? "";
                            }
                            else
                            {
                              CoValue = page.Co.ToString().ToLower() == "true" ? "X" : "";
                              KhongValue = page.Khong.ToString().ToLower() == "true" ? "X" : "";
                            }
                            pageSizes4.Add((
                            page.tt ?? "",
                            page.TenCoSo ?? "",
                            page.ThuMuc ?? "",
                            page.TomTat ?? "",
                            page.ToanVan ?? "",
                            page.TongSoBieuGhi ?? "",
                            CoValue,
                            KhongValue,
                            page.SoLuot ?? ""
                            )) ;
                        }                                                              
                    }

                }
            }
        }
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().Row(

                            row =>
                            {
                                //row.Spacing(10);
                                row.RelativeItem(4)
                                             .AlignLeft()
                                              .Text(text =>
                                              {
                                                 
                                                  text.AlignCenter();
                                                  text.Line("Biểu số 03đ/TTKHCN").Bold();
                                              });
                                            row.RelativeItem(7)
                                            .AlignCenter()
                                            .Text(text =>
                                            {
                                                
                                                text.AlignCenter();
                                                text.Line("KẾT QUẢ HOẠT ĐỘNG THÔNG TIN KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                                                text.Span($"Kỳ báo cáo: Năm {nam_ky}(Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic();
                                                column.Item().PaddingVertical(5).AlignCenter().Width(90).TranslateY(-30).LineHorizontal(1).LineColor(Colors.Black);
                                            });
                                        row.RelativeItem(4)
                                        .AlignRight()
                                        .Text(text =>
                                        {
                                            //text.ParagraphSpacing(1);
                                            text.AlignLeft();
                                            text.Line("Đơn vị báo cáo:").Bold();
                                            text.Line("- Bộ,ngành");
                                            text.Line("- UBND cấp tỉnh:");
                                            text.Line("Đơn vị nhận báo cáo:").Bold();
                                            text.Span("Bộ Khoa học và Công nghệ");

                                        });


                                column.Item().Text(text =>
                                {

                                    text.Span("1. Công tác thu thập,đăng ký,lưu giữ kết quả thực hiện và công bố thông tin nhiệm vụ khoa học và công nghệ").Bold();
                                });
                                column.Item().
                                AlignRight()
                                .Text(text =>
                                {
                                    text.Span("Đơn vị:nhiệm vụ").Italic();
                                });
                            });
                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung

                           column.Item().Row(
                              row =>
                              {

                                  //START table
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(100);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Nhiệm vụ KH&CN").Bold();
                                          header.Cell().ColumnSpan(4).Element(CellStyle).AlignCenter().Text("Sử dụng ngân sách nhà nước").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Không sử dụng ngân sách nhà nước").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cấp quốc gia").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cấp bộ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cấp tỉnh").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cấp cơ sở").Italic();

                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });


                                      foreach (var page in pageSizes1)
                                      {
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.index);

                                          bool isBool = page.content1.Contains("Tổng");
                                          if (isBool)
                                          {                         
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content1).Bold();                                         
                                          }
                                          else
                                          {
                                            
                                              table.Cell().Element(CellStyle).PaddingLeft(8).AlignLeft().Text(page.content1);
                                             
                                          }
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  //END table

                                  column.Item().
                                  PaddingTop(5)
                                  .Text(text =>
                                  {
                                      text.Line("2.Công tác phát triển nguồn tin khoa học và công nghệ").Bold();
                                      text.Span("2.1 Kinh phí đầu tư cho công tác phát triển nguồn tin khoa học và công nghệ trong năm").Bold().Italic();
                                  });

                                  column.Item().AlignRight()
                                  .
                                  Text(text =>
                                  {
                                      text.Span("Đơn vị:triệu đồng").Italic();
                                  });

                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(0.5f)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(100);
                                          columns.RelativeColumn(35);

                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!
                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nguồn kinh phí").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tổng kinh phí").Bold();


                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page in pageSizes2)
                                      {
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.index).Bold();
                                          table.Cell().Element(CellStyle).AlignLeft().Text(page.content1);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);

                                      }


                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  column.Item().PaddingTop(5).PaddingBottom(3).Text(text =>
                                  {

                                      text.Span("2.2. Nguồn tin khoa học và công nghệ bổ sung trong năm báo cáo ").Bold();
                                  });
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                      .Border(0.5f)
                                      .BorderColor(Colors.Black)
                                      //.Background(backgroundColor)
                                      .PaddingVertical(0.5f)
                                      .PaddingHorizontal(0.5f)
                                      .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(100);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(35);


                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).Padding(15).AlignCenter().Text("Loại nguồn tin khoa học và công nghệ").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Sử dụng ngân sách nhà nước").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Không sử dụng ngân sách nhà nước").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Mua").Bold();
                                              text.Span("(Số lượng)").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Nội sinh *").Bold();
                                              text.Span("(Số lượng)").Italic();
                                          });

                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Mua").Bold();
                                              text.Span("(Số lượng)").Italic();
                                          }); ;
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Nội sinh *").Bold();
                                              text.Span("(Số lượng)").Italic();
                                          });
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });



                                      //foreach (var page in pageSizes)
                                      //{
                                      table.Cell().Element(CellStyle).AlignCenter().Text("1").Bold();
                                      table.Cell().Element(CellStyle).Table(innerTable =>
                                      {

                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(80);
                                              innerColumns.RelativeColumn(50);
                                          });
                                          // Thêm dữ liệu vào các cột nhỏ bên trong
                                          innerTable.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Sách khoa học và công nghệ");
                                          innerTable.Cell().Element(CellStyle).AlignCenter().PaddingLeft(8).Text("Dạng giấy").Italic();
                                          innerTable.Cell().Element(CellStyle).AlignCenter().PaddingLeft(8).Text("Dạng điện tử");
                                      });
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).BorderBottom(0.2f).Element(CellStyle).AlignCenter().Text(SKH_DG_1);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(SKH_DT_1);
                                      });
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(SKH_DG_2);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(SKH_DT_2);
                                      });
                                      table.Cell().Element(CellStyle).AlignLeft().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(SKH_DG_3);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(SKH_DT_3);
                                      }); ;
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });

                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(SKH_DG_4);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(SKH_DT_4);
                                      });
                                      //}
                                      //-----------------------
                                      table.Cell().Element(CellStyle).AlignCenter().Text("2").Bold();
                                      table.Cell().Element(CellStyle).Table(innerTable =>
                                      {

                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(80);
                                              innerColumns.RelativeColumn(50);
                                          });
                                          // Thêm dữ liệu vào các cột nhỏ bên trong
                                          innerTable.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Bản tin khoa học và công nghệ");
                                          innerTable.Cell().Element(CellStyle).AlignCenter().PaddingLeft(8).Text("Dạng giấy").Italic();
                                          innerTable.Cell().Element(CellStyle).AlignCenter().PaddingLeft(8).Text("Dạng điện tử");
                                      });
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).BorderBottom(0.2f).Element(CellStyle).AlignCenter().Text(BT_DG_1);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(BT_DT_1);
                                      });
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(BT_DG_2);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(BT_DT_2);
                                      });
                                      table.Cell().Element(CellStyle).AlignLeft().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(BT_DG_3);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(BT_DT_3);
                                      }); ;
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });

                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(BT_DG_4);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(BT_DT_4);
                                      });
                                      //-----------------------

                                      table.Cell().Element(CellStyle).AlignCenter().Text("3").Bold();
                                      table.Cell().Element(CellStyle).Table(innerTable =>
                                      {

                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(80);
                                              innerColumns.RelativeColumn(50);
                                          });
                                          // Thêm dữ liệu vào các cột nhỏ bên trong
                                          innerTable.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Tạp chí khoa học và công nghệ");
                                          innerTable.Cell().Element(CellStyle).AlignCenter().PaddingLeft(8).Text("Dạng giấy").Italic();
                                          innerTable.Cell().Element(CellStyle).AlignCenter().PaddingLeft(8).Text("Dạng điện tử");
                                      });
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).BorderBottom(0.2f).Element(CellStyle).AlignCenter().Text(TC_DG_1);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(TC_DT_1);
                                      });
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(TC_DG_2);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(TC_DT_2);
                                      });
                                      table.Cell().Element(CellStyle).AlignLeft().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });
                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(TC_DG_3);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(TC_DT_3);
                                      }); ;
                                      table.Cell().Element(CellStyle).AlignCenter().Table(innerTable =>
                                      {
                                          innerTable.ColumnsDefinition(innerColumns =>
                                          {
                                              innerColumns.RelativeColumn(100);
                                          });

                                          innerTable.Cell().Row(1).Element(CellStyle).AlignCenter().Text(TC_DG_4);
                                          innerTable.Cell().Row(2).Element(CellStyle).AlignCenter().Text(TC_DT_4);
                                      });


                                      foreach (var page in pageSizes3)
                                      {

                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.index);

                                          bool isBool = page.content1.Contains("Tổng");
                                          if (isBool)
                                          {
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content1).Bold();
                                          }
                                          else
                                          {

                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content1);
                                          }                                          
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });

                                  column.Item().PaddingBottom(5).Text(text =>
                                  {
                                      text.Line("(Nguồn tin khoa học và công nghệ nội sinh là nguồn tin do bộ,ngành địa phương tạo ra,lưu giữ và phổ biến)").Italic();
                                      text.Span("3. Công tác xấy dựng, quản lý,kết nối, chia sẻ,khai khác,sử dụng,duy trì và phát triển cơ sở dữ liệu về khoa học và công nghệ").Bold();
                                  });


                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(0.5f)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(1)
                                              .PaddingHorizontal(1)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(40);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(40);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(45);
                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Tên cơ sở dữ liệu khoa học và công nghệ").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Loại cơ sở dữ liệu").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Tổng số biểu ghi").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Cho phép khai khác trực tuyến").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Số lượt khai thác/sử dụng ").Bold();
                                          

                                          header.Cell().Element(CellStyle).AlignCenter().Text("Thư mục").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tóm tắt").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Toàn văn").Italic();

                                          header.Cell().Element(CellStyle).AlignCenter().Text("Có").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Không").Italic();

                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page in pageSizes4)
                                      {
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.index).Bold();
                                        
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content1).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);                                     
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);
                                                                            
                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  //END table
                              });
                       });
                    page.Footer()
                   .AlignCenter()
                   .Text(x =>
                   {
                       x.Span("Page ");
                       x.CurrentPageNumber();
                   });
                });
            })
               .GeneratePdf(path);
        return path;

    }
    public string XuatMau4ATT13(string path, Workflow workflow)
    {


        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";

        var pageSizes = new List<(string content1, string content2, string content4, string content3, string content5, string content6)>()
{
         
};
        //-------------------------------------------------------
        var pageSizes1 = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9, string content10, string content11, string content12, string content13, string content14, string content15, string content16, string content17)>()
{
            ("1", "2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17"),
};


        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {
                            pageSizes.Add((
                            page.id ?? "",
                            page.TenChuongTrinh ?? "",
                            page.ThamQuyenPheDuyet ?? "",
                            page.CoQuanThamDinh ?? "",
                            page.NguonVonChuongTrinh ?? "",
                            page.GiaTri ?? ""
                            ));
                        }
                      

                    }
          
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;

                    if (data3.d1 != null)
                    {
                        foreach (var page in data3.d1)
                        {

                            pageSizes1.Add((
                             page.tt ??"",
                             page.ThamQuyenQuyetDinh ?? "",
                             page.NhapKhau_DauTu ??"",
                             page.NhapKhau_DauTuCong ??"",
                             page.NhapKau_DoiTac ??"",
                             page.KhuyenKhich_DauTu ??"",
                             page.KhuyenKhich_DauTuCong ??"",
                             page.KhuyenKhich_DoiTac ??"",
                             page.HanChe_DauTu ??"",
                             page.HanChe_DauTuCong ??"",
                             page.HanChe_DoiTac ??"",
                             page.BaoVe_DauTu ??"",
                             page.BaoVe_DauTuCong ??"",
                             page.BaoVe_DoiTac ??"",
                             page.TuChoi_DauTu ??"",
                             page.TuChoi_DauTuCong ??"",
                             page.TuChoi_DoiTac ??""

                              ));
                        }

                    }


                }

            }
        }






        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A3);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()

                   .Column(column =>
                   {
                       column.Item().Text(text =>
                       {
                           text.Line("4.Báo cáo tình hình hoạt động thẩm định cơ sở khoa học chương trình phát triển kinh tế-xã hội và thẩm định công nghệ dự án đầu tư.Thẩm định kết quả thực hiện nhiệm vụ khoa học và công nghệ không sử dụng ngân sách nhà nước").Bold();

                       });
                       column.Item().Row(
                       row =>
                       {

                           //row.Spacing(10);
                           row.RelativeItem(4)
                                        .AlignLeft()
                                         .Text(text =>
                                         {
                                             //text.ParagraphSpacing(1);
                                             text.AlignCenter();
                                             text.Line("Biểu số 04a/TĐCN").Bold();
                                         });
                           row.RelativeItem(7)
                      .AlignCenter()
                      .Text(text =>
                      {
                          //text.ParagraphSpacing(1);
                          text.AlignCenter();
                          text.Line("TÌNH HÌNH THẨM ĐỊNH, CƠ SỞ KHOA HỌC CHƯƠNG TRÌNH PHÁT TRIỂN").Bold();
                          text.Line("KINH TẾ-XÃ HỘI VÀ THẨM ĐỊNH CÔNG NGHỆ DỰ ẤN ĐẦU TƯ").Bold();
                          text.Span($"Kỳ báo cáo: Năm {nam_ky} (Từ ngày  {tu_ngay}  tháng  {tu_thang}  năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam} )").Italic();
                          column.Item().PaddingVertical(5).AlignCenter().Width(90).LineHorizontal(1).LineColor(Colors.Black);
                      });

                           row.RelativeItem(4)
                                   .AlignRight()
                                   .Text(text =>
                                   {
                                       //text.ParagraphSpacing(1);
                                       text.AlignLeft();
                                       text.Line("Đơn vị báo cáo:").Bold();
                                       text.Line("UBND cấp tỉnh");
                                       text.Line("Đơn vị nhận báo cáo:").Bold();
                                       text.Span("Bộ Khoa học và Công nghệ");
                                   });

                       });
                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung
                           column.Item().Text(text =>
                           {
                               text.Line("1.Kết quả thẩm định cơ sở khoa học Chương trình phát triển kinh tế - xã hội").Bold();

                           });

                           column.Item().Row(
                              row =>
                              {
                                  //START table                                           
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);

                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tên chương trình phát triển kinh tế-xã hội").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Thẩm quyền quyết định phê duyệt chương trình").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cơ quan đề nghị thẩm định").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nguồn vốn thực hiện chương trình").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Giá trị chương trình").Bold();
                                              text.Line("(Triệu đồng)").Italic();
                                          });

                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page in pageSizes)
                                      {
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content1).Bold();
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);


                                          //}
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });


                                  //END table

                                  //START table
                                  //

                                  column.Item().PaddingTop(6).Text(text =>
                                  {
                                      text.Line("2.Kết quả thẩm định công nghệ dự án đầu tư").Bold();

                                  });
                                  column.Item()
                      .AlignRight()
                      .PaddingVertical(5)
                           .Text(text =>
                           {

                               text.Span("Đơn vị:dự án").Italic();
                           });
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               
                                          header.Cell().RowSpan(4).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(4).Element(CellStyle).AlignCenter().Text("Thẩm quyền quyết định/chấp thuận chủ trương đâu tư").Bold();
                                          header.Cell().RowSpan(2).ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Dự án có nhập khẩu máy móc,thiết bị,dây chuyền công nghệ đã qua sử dụng").Bold();
                                          header.Cell().ColumnSpan(9).Element(CellStyle).AlignCenter().Text("Loại công nghệ dự án").Bold();
                                          header.Cell().RowSpan(2).ColumnSpan(3).Element(CellStyle).AlignCenter().Text(" Dự án bị từ chối").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Sử dụng công nghệ thuộc danh mục công nghệ khuyến khích chuyển giao").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Sử dụng công nghệ thuộc danh mục công nghệ hạn chế chuyển giao.").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Thuộc Dự án có nguy cơ tác động xấu đến môi trường theo quy định pháp luật vê bảo vệ môi trường").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luât về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phương thức đối tác công tư PPP").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phương thức đối tác công tư PPP").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phương thức đối tác công tư PPP").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phương thức đối tác công tư PPP").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phươn thức đối tác công tư PPP").Italic();

                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page in pageSizes1)
                                      {
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content1).Bold();
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content2).Bold();
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content9);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content10);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content11);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content12);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content13);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content14);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content15);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content16);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content17);



                                      
                                          //}
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });


                                  //END table
                              });
                       });
                    page.Footer()
           .Column(column =>
           {
               ;
               column.Item().Width(150).PaddingVertical(5).LineHorizontal(1).LineColor(Colors.Black);
               column.Item()
                  .Text(footerText =>
                  {
                      footerText.Span("Lý do:thuộc Danh mục công nghệ cấm chuyển giao;công nghệ máy móc thiết bị không đáp ứng yêu cầu bảo vệ môi trường;hoặc không phù hợp quy hoạch...").Italic();
                  });
           });
                });
            })
            .GeneratePdf(path);
        return path;
    }
    public string XuatMau4BTT13(string path, Workflow workflow)
    {



        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";
        //Bảng 3

        var pageSizes= new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9, string content10, string content11, string content12, string content13, string content14, string content15, string content16, string content17)>()
{
                    ("1", "2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17"),
}; 
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
       


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }


                    if (data1.d1 != null)
                    {
                        foreach (var page in data1.d1)
                        {
                            pageSizes.Add((
                          page.tt ?? "",
                          page.ThamQuyenQuyetDinh ?? "",
                          page.DuAnNhapKhau_DauTu ?? "",
                          page.DuAnNhapKhau_DauTuCong ?? "",
                          page.DuAnNhapKhau_DoiTac ?? "",
                          page.KhuyenKhich_DauTu ?? "",
                          page.KhuyenKhich_DauTuCong ?? "",
                          page.KhuyenKhich_DoiTac ?? "",
                          page.HanChe_DauTu ?? "",
                          page.HanChe_DauTuCong ?? "",
                          page.HanChe_DoiTac ?? "",
                          page.MoiTruong_DauTu ?? "",
                          page.MoiTruong_DauTuCong ?? "",
                          page.MoiTruong_DoiTac ?? "",
                          page.TuChoi_DauTu ?? "",
                          page.TuChoi_DauTuCong ?? "",
                          page.TuChoi_DoiTac ?? ""
                            ));
                        }
                       


                    }
                }

            }
           
        }
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A3);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().Row(
                   row =>
                   {
                       //row.Spacing(10);
                       row.RelativeItem(4)
                                    .AlignLeft()
                                     .Text(text =>
                                     {
                                         //text.ParagraphSpacing(1);
                                         text.AlignCenter();
                                         text.Line("Biểu số 04b/TĐCN").Bold();
                                     });
                       row.RelativeItem(7)
                  .AlignCenter()
                  .Text(text =>
                  {
                      //text.ParagraphSpacing(1);
                      text.AlignCenter();
                      text.Line("TÌNH HÌNH THẨM ĐỊNH,CÓ Ý KIẾN CÔNG NGHỆ DỰ ÁN ĐẦU TƯ").Bold();

                      text.Span($"Kỳ báo cáo: Năm {nam_ky} (Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic();
                      column.Item().PaddingVertical(5).AlignCenter().Width(90).LineHorizontal(1).LineColor(Colors.Black);
                  });

                       row.RelativeItem(4)
                               .AlignRight()
                               .Text(text =>
                               {
                                   //text.ParagraphSpacing(1);
                                   text.AlignLeft();
                                   text.Line("Đơn vị báo cáo:").Bold();
                                   text.Line("Bộ ngành");
                                   text.Line("Đơn vị nhận báo cáo:").Bold();
                                   text.Span("Bộ Khoa học và Công nghệ");
                               });
                       column.Item()
                       .AlignRight()
                       .PaddingVertical(6)
                            .Text(text =>
                            {

                                text.Span("Đơn vị:dự án").Italic();
                            });
                   });
                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung

                           column.Item().Row(
                              row =>
                              {

                                  //START table                                           
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(50);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(25);
                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               
                                          header.Cell().RowSpan(4).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(4).Element(CellStyle).AlignCenter().Text("Thẩm quyền quyết định/chấp thuận chủ trương đâu tư").Bold();
                                          header.Cell().RowSpan(2).ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Dự án có nhập khẩu máy móc,thiết bị,dây chuyền công nghệ đã qua sử dụng").Bold();
                                          header.Cell().ColumnSpan(9).Element(CellStyle).AlignCenter().Text("Loại công nghệ dự án").Bold();
                                          header.Cell().RowSpan(2).ColumnSpan(3).Element(CellStyle).AlignCenter().Text(" Dự án bị từ chối").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Sử dụng công nghệ thuộc danh mục công nghệ khuyến khích chuyển giao").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Sử dụng công nghệ thuộc danh mục công nghệ hạn chế chuyển giao.").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Thuộc Dự án có nguy cơ tác động xấu đến môi trường theo quy định pháp luật vê bảo vệ môi trường").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luât về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phương thức đối tác công tư PPP").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phương thức đối tác công tư PPP").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phương thức đối tác công tư PPP").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phương thức đối tác công tư PPP").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo quy định của pháp luật về đầu tư công").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Dự án đầu tư theo phươn thức đối tác công tư PPP").Italic();

                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page in pageSizes)
                                      {
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content1);
                                          if (page.content2 == "Tổng")
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2).Bold();
                                          }
                                          else { table.Cell().Element(CellStyle).AlignCenter().Text(page.content2); }
                                         
                                         
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content9);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content10);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content11);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content12);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content13);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content14);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content15);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content16);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content17);
                                         

                                          //}
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });


                                  //END table
                              });
                       });
                    page.Footer()
           .Column(column =>
           {
               ;
               column.Item().Width(150).PaddingVertical(5).LineHorizontal(1).LineColor(Colors.Black);
               column.Item()
                  .Text(footerText =>
                  {
                      footerText.Span("Lý do:thuộc Danh mục công nghệ cấm chuyển giao;công nghệ máy móc thiết bị không đáp ứng yêu cầu bảo vệ môi trường;hoặc không phù hợp quy hoạch...").Italic();
                  });
           });
                });
            })
            .GeneratePdf(path);
        return path;
    }
    public string XuatMau4CTT13(string path, Workflow workflow)
    {

        //Bảng 1
        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";


        var pageSizes = new List<(string index, string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9, string content10, string content11)>()
{
};
        var pageSizes1 = new List<(string index, string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9, string content10, string content11)>()
{
};

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;


        foreach (WorkflowStep workflowStep in steps)
        {
            string DonViChuTri;
            string DonViUngDung;
            string XacNhanDanhGia;

            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {
                          
                            string NgayCap = String.Format("{0:dd/MM/yyyy}", page.NgayCap);

                            if (page.tt == "Tổng")
                                {
                                    DonViChuTri = page.DonViChuTri ?? "";
                                    DonViUngDung = page.DonViUngDung ?? "";
                                    XacNhanDanhGia = page.XacNhanDanhGia ?? "";
                                }
                                else
                                {
                                    DonViChuTri = page.DonViChuTri.ToString().ToLower() == "true" ? "X" : "";
                                    DonViUngDung = page.DonViUngDung.ToString().ToLower() == "true" ? "X" : "";
                                    XacNhanDanhGia = page.XacNhanDanhGia.ToString().ToLower() == "true" ? "X" : "";
                                }

                                pageSizes.Add((
                                page.tt ?? "",
                                page.TenNhiemVu ?? "",
                                page.KhoaHocCongNghe ?? "",
                                page.LinhVucUngDung ?? "",
                                DonViChuTri,
                                DonViUngDung,
                                page.DiaChi ?? "",
                                page.ThoiGianNhiemVu ?? "",
                                page.DiaDiemNhiemVu ?? "",
                                page.SoChungNhan ?? "",
                                NgayCap,
                                XacNhanDanhGia
                                 ));
                            }
                        //}

                    }

                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;

                    if (data3.d1 != null)
                    {
                        foreach (var page in data3.d1)
                        {
                             string NgayCap = String.Format("{0:dd/MM/yyyy}", page.NgayCap);

                            if (page.tt == "Tổng")
                            {
                                DonViChuTri = page.DonViChuTri ?? "";
                                DonViUngDung = page.DonViUngDung ?? "";
                                XacNhanDanhGia = page.XacNhanDanhGia ?? "";
                            }
                            else
                            {
                                DonViChuTri = page.DonViChuTri.ToString().ToLower() == "true" ? "X" : "";
                                DonViUngDung = page.DonViUngDung.ToString().ToLower() == "true" ? "X" : "";
                                XacNhanDanhGia = page.XacNhanDanhGia.ToString().ToLower() == "true" ? "X" : "";
                            }
                            pageSizes1.Add((
                            page.tt ?? "",
                            page.TenNhiemVu ?? "",
                            page.KhoaHocCongNghe ?? "",
                            page.LinhVucUngDung ?? "",
                            DonViChuTri,
                            DonViUngDung,
                            page.DiaChi ?? "",
                            page.ThoiGianNhiemVu ?? "",
                            page.DiaDiemNhiemVu ?? "",
                            page.SoChungNhan ?? "",
                            NgayCap,
                            XacNhanDanhGia
                            ));
                        }


                    }
                }
            }
        }
        //-------------------------------------------------------------
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A3);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().Row(

                            row =>
                            {
                                //row.Spacing(10);
                                row.RelativeItem(4)
                                             .AlignLeft()
                                              .Text(text =>
                                              {
                                                  //text.ParagraphSpacing(1);
                                                  text.AlignCenter();
                                                  text.Line("Biểu số 04c/TĐNV").Bold();


                                              });
                                row.RelativeItem(7)
                                            .AlignCenter()
                                            .Text(text =>
                                            {
                                                //text.ParagraphSpacing(1);
                                                text.AlignCenter();
                                                text.Line("TÌNH HÌNH THẨM ĐỊNH KẾT QUẢ THỰC HIỆN NHIỆM VỤ").Bold();
                                                text.Line("KHOA HỌC VÀ CÔNG NGHỆ KHÔNG SỬ DỤNG NGÂN SÁCH NHÀ NƯỚC").Bold();
                                                text.Span($"Kỳ báo cáo: Năm {nam_ky} (Từ ngày {tu_ngay}  tháng {tu_thang}  năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam} )").Italic();
                                                column.Item().PaddingVertical(5).AlignCenter().Width(90).LineHorizontal(1).LineColor(Colors.Black);
                                            });

                                row.RelativeItem(4)
                                        .AlignRight()
                                        .Text(text =>
                                        {
                                            //text.ParagraphSpacing(1);
                                            text.AlignLeft();
                                            text.Line("Đơn vị báo cáo:").Bold();
                                            text.Line("UBND cấp tỉnh");
                                            text.Line("Đơn vị nhận báo cáo:").Bold();
                                            text.Span("Bộ Khoa học và Công nghệ");

                                        });

                                column.Item().Text(text =>
                                {

                                    text.Span("1.Về thẩm định các kết quả thực hiện nhiệm vụ khoa học và công nghệ không sử dụng ngân sách nhà nước").Bold();
                                });

                            });
                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung

                           column.Item().Row(
                              row =>
                              {

                                  //START table
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(40);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);

                                      });
                                      table.Header(header =>
                                      {

                                          // please be sure to call the 'header' handler!
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Tên nhiệm vụ khoa học và công nghệ").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Ngành khoa học và công nghệ").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Lĩnh vực ứng dụng").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Thông tin về tổ chức/ cá nhân đề nghị thẩm định").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Thời gian thực hiện nhiệm vụ").Bold();
                                              text.Span("(năm)").Italic();
                                          });
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Địa điểm thực hiện nhiệm vụ").Bold();
                                              text.Span("(ghi tên tỉnh,thành phó trực thuộc trưng ương)").Italic();
                                          });


                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Kết quả cấp Giấy xác nhận thẩm định kết quả thực hiện nhiệm vụ").Bold();

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line(" Không cấp Giấy xác nhận đánh giá đồng thời thẩm định").Bold();
                                              text.Span("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Đơn vị chủ trì thực hiện nhiệm vụ").Bold();
                                              text.Span("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line(" Đơn vị ứng dụng kết quả thực hiện nhiệm vụ").Bold();
                                              text.Span("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Địa chỉ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Số chứng nhận").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Ngày cấp").Bold();
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page in pageSizes)
                                      {
                                          if (page.index == "")
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.index).Bold();
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content1).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content9);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content10);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content11);
                                          }
                                          else
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.index).Bold();
                                              table.Cell().Element(CellStyle).PaddingLeft(8).AlignLeft().Text(page.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content9);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content10);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content11);
                                          }
                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  column.Item()
                                  .PaddingTop(6)

                        .Text(text =>
                        {

                            text.Span("2.Về đánh giá đồng thời thẩm định  các kết quả thực hiện nhiệm vụ khoa học và công nghệ không sử dụng ngân sách nhà nước").LetterSpacing().Bold();

                        });
                                  column.Item().Table(table =>


                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(40);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                      });
                                      table.Header(header =>
                                      {

                                          // please be sure to call the 'header' handler!
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Tên nhiệm vụ khoa học và công nghệ").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Ngành khoa học và công nghệ").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Lĩnh vực ứng dụng").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Thông tin về tổ chức/ cá nhân đề nghị thẩm định").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Thời gian thực hiện nhiệm vụ").Bold();
                                              text.Span("(năm)").Italic();
                                          });
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Địa điểm thực hiện nhiệm vụ").Bold();
                                              text.Span("(ghi tên tỉnh,thành phó trực thuộc trưng ương)").Italic();
                                          });


                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Kết quả cấp Giấy xác nhận thẩm định kết quả thực hiện nhiệm vụ").Bold();

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line(" Không cấp Giấy xác nhận đánh giá đồng thời thẩm định").Bold();
                                              text.Span("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line("Đơn vị chủ trì thực hiện nhiệm vụ").Bold();
                                              text.Span("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text(text =>
                                          {
                                              text.Line(" Đơn vị ứng dụng kết quả thực hiện nhiệm vụ").Bold();
                                              text.Span("(tích dấu 'x')").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Địa chỉ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Số chứng nhận").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Ngày cấp").Bold();
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page in pageSizes1)
                                      {
                                          if (page.index == "")
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.index).Bold();
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content1).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content9);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content10);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content11);
                                          }
                                          else
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.index).Bold();
                                              table.Cell().Element(CellStyle).PaddingLeft(8).AlignLeft().Text(page.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content9);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content10);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content11);
                                          }
                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });

                              });
                       });

                    page.Footer()
         .Column(column =>
         {
             ;
             column.Item().Width(150).PaddingVertical(5).LineHorizontal(1).LineColor(Colors.Black);
             column.Item()
                .Text(footerText =>
                {
                    footerText.Span("Ghi tên tương ứng mã cấp 2 Lớp 2.Ngành khoa học và công nghệ theo Quyết định số 12/2008/QĐ-BKHCN ngày 04/9/2008 của Bộ trưởng Bộ Khoa học và Công nghệ về việc ban hành một số bảng phân loại thống kê khoa học và công nghệ ").Italic();
                });
         });
                });
            })
             .GeneratePdf(path);
        return path;
    }
    public string XuatMau5ATT13(string path, Workflow workflow)
    {
        //Cột 3 chưa thêm


        var tu_ngay = "";
        var tu_thang = "";
        var tu_nam = "";
        var nam_ky = "";

        var den_ngay = "";
        var den_thang = "";
        var den_nam = "";



        var pageSizes = new List<(string content1, string content2, string content3, string content4)>()
{
};
        //---------------------------------------------------------------------------------------------------------------------------------
        //Bảng 2

        var pageSizes1 = new List<( string content1, string content2, string content3, string content4, string content5)>()
{                     
};
        //--------------------------------------------------------------------------------------------------------------------------------------
        //Bảng 3

        var pageSizes2 = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9, string content10, string content11, string content12, string content13, string content14, string content15, string content16, string content17, string content18)>()
{
                  ("(1)", "(2)","(3)","(4)","(5)","(6)","(7)","(8)","(9)","(10)","(11)","(12)","(13)","(14)","(15)","(16)","(17)","(18)"),
};

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic? step2;
        dynamic? step3;
        dynamic? step4;


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    if (data1 != null)
                    {
                        // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                        string kyBaoCao = data1?.KyBaoCao as string;
                        nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                        // Xử lý TuNgay
                        if (data1.TuNgay == null)
                        {
                            tu_nam = DateTime.Now.Year.ToString();
                            tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                            if (tuNgayParts.Length >= 3)
                            {
                                tu_nam = tuNgayParts[2];
                                tu_thang = tuNgayParts[0];
                                tu_ngay = tuNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2");
                                tu_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }

                        // Xử lý DenNgay
                        if (data1.DenNgay == null)
                        {
                            den_nam = DateTime.Now.Year.ToString();
                            den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                            den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                        }
                        else
                        {
                            var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                            if (denNgayParts.Length >= 3)
                            {
                                den_nam = denNgayParts[2];
                                den_thang = denNgayParts[0];
                                den_ngay = denNgayParts[1];
                            }
                            else
                            {
                                // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2");
                                den_ngay = DateTime.Now.Day.ToString("D2");
                            }
                        }
                    }
                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
            {
                step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step2 != null)
                {
                    dynamic? data2 = step2.form.data;
                    if (data2.d1 != null)
                    {
                        foreach (var page in data2.d1)
                        {
                         pageSizes.Add((
                          page.tt ?? "",
                          page.NoiDung ?? "",
                          page.DonViTinh ?? "",
                          page.KetQua ?? ""
                       ));
                        }

                    }

                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
            {
                step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step3 != null)
                {
                    dynamic? data3 = step3.form.data;

                    if (data3.d1 != null)
                    {
                        foreach (var page in data3.d1)
                        {

                            pageSizes1.Add((
                             page.tt ?? "",
                             page.NoiDung ?? "",
                             page.TongKinhPhi ?? "",
                             page.DaoTaoTrongNuoc ?? "",
                             page.DaoTaoNuocNgoai ?? ""
                                 ));
                        }                  

                    }


                }

            }
            else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
            {
                step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step4 != null)
                {
                    dynamic? data4 = step4.form.data;

                    if (data4.d1 != null)
                    {
                        foreach (var page in data4.d1)
                        {
                            pageSizes2.Add((
                                   page.tt ?? "",
                                   page.ChucDanh ?? "",
                                   page.SoLuong ?? "",
                                   page.ChungChiBoiDuong ?? "",
                                   page.Nam ?? "",
                                   page.Nu ?? "",
                                   page.NhoHonBang35 ?? "",
                                   page.TuDen50 ?? "",
                                   page.LonHonBang50 ?? "",
                                   page.TienSy ?? "",
                                   page.ThacSy ?? "",
                                   page.DaiHoc ?? "",
                                   page.CaoDang ?? "",
                                   page.TrungCap ?? "",
                                   page.TinHocTrungCap ?? "",
                                   page.TinHocChungChi ?? "",
                                   page.NgoaiNguDaiHoc ?? "",
                                   page.NgoaiNguChungChi ?? ""
                                 ));
                        }
                    }
                }

            }

        }
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A3);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item()

                                 .Text(text =>
                                 {
                                     text.Span("5.Báo cáo về phát triển nhân lực khoa học và công nghệ và phát triển hạ tầng khoa học và công nghệ").Bold();
                                 });

                       column.Item().Row(
                   row =>
                   {
                       //row.Spacing(10);
                       row.RelativeItem(4)
                                    .AlignLeft()
                                     .Text(text =>
                                     {
                                         //text.ParagraphSpacing(1);
                                         text.AlignCenter();
                                         text.Line("Biểu số 05a/NLKHCN").Bold();
                                     });
                       row.RelativeItem(7)
                  .AlignCenter()
                  .Text(text =>
                  {
                      //text.ParagraphSpacing(1);
                      text.AlignCenter();
                      text.Line("KẾT QUẢ PHÁT TRIỂN ").Bold();
                      text.Line("NHÂN LỰC KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                      text.Span($"Kỳ báo cáo: Năm {nam_ky} (Từ ngày {tu_ngay} tháng {tu_thang} năm {tu_nam} đến ngày {den_ngay} tháng {den_thang} năm {den_nam})").Italic();
                      column.Item().PaddingVertical(5).AlignCenter().Width(90).TranslateY(-35).LineHorizontal(1).LineColor(Colors.Black);
                  });

                       row.RelativeItem(4)
                               .AlignRight()
                               .Text(text =>
                               {
                                   //text.ParagraphSpacing(1);
                                   text.AlignLeft();
                                   text.Line("Đơn vị báo cáo:").Bold();
                                   text.Line("- Bộ ngành");
                                   text.Line("- Đại học quốc gia");
                                   text.Line("- UBND cấp tỉnh");
                                   text.Line("Đơn vị nhận báo cáo:").Bold();
                                   text.Span("Bộ Khoa học và Công nghệ");

                               });
                       column.Item().PaddingVertical(6)
                            .Text(text =>
                            {

                                text.Span("1.Tình hình, kết quả thực hiện chính sách sử dụng,trọng dụng cá nhân hoạt động khoa học và công nghệ").Bold();
                            });

                   });


                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung

                           column.Item().Row(
                              row =>
                              {

                                  //START table
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              //.Background(backgroundColor)
                                              .ShowOnce()
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              .AlignMiddle();

                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(80);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);



                                      });
                                      table.Header(header =>
                                      {

                                          // please be sure to call the 'header' handler!

                                          {
                                              header.Cell().Element(CellStyle).AlignCenter().Text("TT").Bold();
                                              header.Cell().Element(CellStyle).AlignCenter().Text("Nội dung").Bold();
                                              header.Cell().Element(CellStyle).AlignCenter().Text("Đơn vị tính").Bold();
                                              header.Cell().Element(CellStyle).AlignCenter().Text("Kết quả").Bold();
                                          }
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page in pageSizes)
                                      {
                                          bool isBold = page.content1.Contains("I") || page.content1.Contains("II") || page.content1.Contains("III") || page.content1.Contains("IV");
                                          if (isBold)
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content1).Bold();
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content2).Bold();
                                          }
                                          else {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content1);
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page.content2);
                                          }          
                                           table.Cell().Element(CellStyle).AlignCenter().Text(page.content3).Italic();
                                           table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);


                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  //END table



                                  column.Item().PaddingVertical(6).Text(text =>
                                  {

                                      text.Span("2.Tình hình, kết quả đào tạo nhân lực khoa học và công nghệ").Bold();
                                  });


                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(40);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(35);


                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Nội dung").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text(text =>


                                          {
                                              text.Line("Số lượng").Bold();
                                              text.Span("(người)").Italic();
                                          });

                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text(text =>

                                          {
                                              text.Line("Tổng kinh phí đào tạo,bồi dưỡng").Bold();
                                              text.Span("(triệu đồng)").Italic();
                                          });
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Đào tạo trong nước").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Đào tạo nước ngoài").Italic();
                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page in pageSizes1)
                                      {
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content1);
                                          bool isBold = page.content2.Contains("Tổng");
                                          if (isBold)
                                          {  
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2).Bold();
                                          }
                                          else
                                          {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);
                                          }                                
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);


                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });

                                  column.Item().PaddingVertical(6).Text(text =>
                                  {

                                      text.Span("3.Số lượng, cơ cấu hạng chức danh nghề nghiệp viên chức chuyên ngành khoa học va công nghệ").Bold();
                                  });

                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(2)
                                              .PaddingHorizontal(2)
                                              .AlignMiddle();

                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(25);
                                          columns.RelativeColumn(35);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(20);
                                          columns.RelativeColumn(40);


                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("TT").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Chức danh").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Số lượng").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Giới tính").Bold();
                                          header.Cell().ColumnSpan(3).Element(CellStyle).AlignCenter().Text("Độ tuổi").Bold();
                                          header.Cell().ColumnSpan(5).Element(CellStyle).AlignCenter().Text("Trình độ chuyên môn").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Trình độ tin học").Bold();
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Trình độ ngoại ngữ").Bold();
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Chứng chỉ bồi dưỡng theo tiêu chuẩn chức danh nghề nghiệp ").Bold();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nam").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nữ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("<= 35").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("35-50 ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text(">=50").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tiến sỹ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Thạc sỹ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Đại học").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cao đẳng ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Trung cấp ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Trung cấp trở lên").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Chứng chỉ").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Đại học trở lên").Italic();
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Chứng chỉ").Italic();


                                          // you can extend existing styles by creating additional methods
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });

                                      foreach (var page in pageSizes2)
                                      {
                                          bool isBold = page.content1.Contains("I") || page.content1.Contains("II") || page.content2.Contains("Tổng");
                                          if (isBold)
                                          { table.Cell().Element(CellStyle).AlignCenter().Text(page.content1).Bold();
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2).Bold();
                                          }
                                        else {
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content1);
                                              table.Cell().Element(CellStyle).AlignCenter().Text(page.content2);

                                          }   
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content6);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content7);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content8);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content9);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content10);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content11);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content12);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content13);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content14);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content15);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content16);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content17);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page.content18);


                                         

                                          //}
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });

                                  column.Item()
                                  .PaddingTop(4)
                                  .Text(text =>
                                  {
                                      text.ParagraphSpacing(10);
                                      text.Line("Ghi chú").Bold();
                                      text.Line("- Cột (15) thống kê số lượng viên chức có trình độ tin học đạt chuẩn kỹ năng sử dụng công nghệ thông tin cơ bản");
                                      text.Line("- Cột (17) thống kê số lượng viên chức có trình độ ngoại ngữ đạt trình độ theo yêu cầu về tiêu chuẩn ngoại ngữ tương ứng với từng hạng chức danh.");
                                      text.Line("- Cột (18) thống kê số lượng viên chức đã có chứng chỉ bồi dưỡng theo tiêu chuẩn chức danh nghề nghiệp tương ứng với từng hạng chức danh.");
                                  });
                                  //END table
                              });
                       });
                    page.Footer()
                   .AlignCenter()
                   .Text(x =>
                   {
                       x.Span("Page ");
                       x.CurrentPageNumber();
                   });
                });
            })
            .GeneratePdf(path);
        return path;
    }
    public string XuatMau5CTT13(string path, Workflow workflow)
    {

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";
              

                //dòng A

                var pageSizes = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7)>();

                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
       

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;


                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }

                            if (data1.d1 != null)
                            {
                                foreach (var page in data1.d1)
                                {
                                    pageSizes.Add((
                                    page.tt ?? "",
                                    page.TieuChi ?? "",
                                    page.KHCNCongLapCT ?? "",
                                    page.KHCNCoQuanCT ?? "",
                                    page.DoanhNghiepCT ?? "",
                                    page.MuaNhanChuyenGiao ?? "",
                                    page.CoSo ?? ""

                                    ));
                                }
                            }
                        }
                    }               
                }
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(20);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 05c/CCTC").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("TÌNH HÌNH THỰC HIỆN CƠ CHẾ TỰ CHỦ CỦA TỔ CHỨC").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);

                            //row 2
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("KHOA HỌC VÀ CÔNG NGHỆ ĐỘC LẬP").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("- Bộ ngành;").FontSize(13);

                            //row 3
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("- Đại học quốc gia.").FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(13);

                            //row 5
                            table.Cell().Row(5).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);
                        });

                      
                        column.Item().Table(table =>
                        {
                            IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                            {
                                return container
                                     .Border(1)
                                        .Background(Colors.White)
                                        .ShowOnce()
                                        .MinWidth(28)
                                        .MinHeight(28)
                                        .AlignLeft()
                                        .PaddingLeft(5)
                                        .AlignMiddle();
                            }
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(50);
                                columns.RelativeColumn(30);
                                columns.RelativeColumn(30);
                                columns.RelativeColumn(30);
                                columns.RelativeColumn(30);
                                columns.RelativeColumn(30);

                            });
                            table.Header(header =>
                            {
                                header.Cell().Element(CellStyle).Text("TT").Bold().FontSize(14);
                                header.Cell().Element(CellStyle).Text("TIÊU CHÍ").Bold();
                                header.Cell().Element(CellStyle).Text("Tổ chức khoa học và công nghệ công lập trực thuộc Bộ (*)").Bold().FontSize(14);
                                header.Cell().Element(CellStyle).Text("Tổ chức khoa học và công nghệ công lập trực thuộc tổng cục và tương đương (*)").Bold().FontSize(14);
                                header.Cell().Element(CellStyle).Text("Tổ chức khoa học và công nghệ công lập trực thuộc cục và tương đương (*)").Bold().FontSize(14);
                                header.Cell().Element(CellStyle).Text("Tổ chức khoa học và công nghệ công lập trực thuộc đơn vị sự nghiệp và doanh nghiệp trực thuộc (**)").Bold().FontSize(14);
                                header.Cell().Element(CellStyle).Text("Cơ sở giáo dục đại học").Bold().FontSize(14);
                                
                                IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                            });

                            foreach (var items in pageSizes)
                            {
                                string[] check = { "A", "B", "1", "2", "3", "4", "5", "6", "7" };

                                if (check.Contains(items.content1))
                                {
                                    table.Cell().Element(CellStyle).AlignCenter().Text(items.content1).Bold();
                                    table.Cell().Element(CellStyle).AlignLeft().Text(items.content2).Bold();
                                }
                                else
                                {
                                    table.Cell().Element(CellStyle).AlignCenter().Text(items.content1);
                                    table.Cell().Element(CellStyle).AlignLeft().Text(items.content2);
                                }
                                table.Cell().Element(CellStyle).AlignCenter().Text(items.content3);
                                table.Cell().Element(CellStyle).AlignCenter().Text(items.content4);
                                table.Cell().Element(CellStyle).AlignCenter().Text(items.content5);
                                table.Cell().Element(CellStyle).AlignCenter().Text(items.content6);
                                table.Cell().Element(CellStyle).AlignCenter().Text(items.content7);
                            }
                            IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                            //}
                        });



                        column.Item().PaddingTop(5).PaddingLeft(10).AlignLeft().Text("Ghi chú:").Bold().FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(*) Không bao gồm các tổ chức khoa học và công nghệ thuộc và trực thuộc đơn vị sự nghiệp và doanh nghiệp" +
                            " trực thuộc; Cơ sở giáo dục đại học").Bold().FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(1) Bao gồm các tổ chức khoa học và công nghệ trực thuộc: Bộ, cơ quan ngang bộ, cơ quan thuộc Chính phủ, " +
                            "các cơ quan Quốc gia; tổng cục; học viện; cục; UBND cấp tỉnh; cơ quan chuyên môn thuộc UBND cấp tỉnh.").FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(2) Theo các lĩnh vực nghiên cứu khoa học và công nghệ - Mã cấp I của Bảng phân loại lĩnh vực nghiên cứu khoa " +
                            "học và công nghệ (ban hành tại Quyết định số 12/2008/QĐ-BKHCN ngày 04/9/2008 của Bộ trưởng Bộ khoa học và Công nghệ về các bảng phân loại thống kê khoa học và công " +
                            "nghệ và Quyết định số 37/QĐ-BKHCN ngày 14/1/2009 của Bộ trưởng Bộ Khoa học và Công nghệ đính chính quyết định số 12/2008/QĐ-BKHCN)").FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(3) Theo phân loại tại khoản 1 Điều 5 Thông tư số 02/2021/TT-BKHCN ngày 10/3/2021 của Bộ trưởng Bộ" +
                            " Khoa học và Công nghệ quy định tiêu chí phân loại, điều kiện thành lập, sáp nhập, hợp nhất, giải thể các tổ chức khoa học và công nghệ công lập").FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(4) Theo phân loại tại Điều 9 Nghị định số 60/2021/NĐ-CP ngày 21/6/2021 của chính phủ quy định cơ chế tự chủ" +
                            " của đơn vị sự nghiệp công lập").FontSize(14);
                        column.Item().PaddingTop(5).PaddingLeft(60).AlignLeft().Text("(**) Đơn vị trực thuộc tổ chức khoa học và công nghệ có con dấu và tài khoản riêng, hoạt động độc lập, được phê duyệt phương án tự chủ riêng.").Bold().FontSize(14);
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
           .GeneratePdf(path);
        return path;
    }

    public string XuatMau5DTT13(string path, Workflow workflow)
    {
    QuestPDF.Fluent.Document
        .Create(container =>
        {
            var nam = "";

            var tu_ngay = "";
            var tu_thang = "";
            var tu_nam = "";

            var den_ngay = "";
            var den_thang = "";
            var den_nam = "";
            //
            var phanBoLuyKe = "";
            var keHoachVonNam = "";

            dynamic dataTableI = null;
            dynamic dataTableII = null;
            // Xuat quy trinh 1 -> có 5 bước
            List<WorkflowStep> steps = workflow.WorkflowSteps;
            dynamic? step1;
            dynamic? step2;
            dynamic? step3;
            dynamic? step4;
            dynamic? step5;

            foreach (WorkflowStep workflowStep in steps)
            {
                if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                {
                    step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step1 != null)
                    {
                        dynamic? data1 = step1.form.data.d1;
                        if (data1 != null)
                        {
                            // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                            string kyBaoCao = data1?.KyBaoCao as string;
                            nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                            // Xử lý TuNgay
                            if (data1.TuNgay == null)
                            {
                                tu_nam = DateTime.Now.Year.ToString();
                                tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                            }
                            else
                            {
                                var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                if (tuNgayParts.Length >= 3)
                                {
                                    tu_nam = tuNgayParts[2];
                                    tu_thang = tuNgayParts[0];
                                    tu_ngay = tuNgayParts[1];
                                }
                                else
                                {
                                    // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2");
                                    tu_ngay = DateTime.Now.Day.ToString("D2");
                                }
                            }

                            // Xử lý DenNgay
                            if (data1.DenNgay == null)
                            {
                                den_nam = DateTime.Now.Year.ToString();
                                den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                            }
                            else
                            {
                                var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                if (denNgayParts.Length >= 3)
                                {
                                    den_nam = denNgayParts[2];
                                    den_thang = denNgayParts[0];
                                    den_ngay = denNgayParts[1];
                                }
                                else
                                {
                                    // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2");
                                    den_ngay = DateTime.Now.Day.ToString("D2");
                                }
                            }
                        }
                    }

                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                {
                    step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step2 != null)
                    {
                        dataTableI = step2.form.data.d1;
                    }
                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                {
                    step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step3 != null)
                    {
                        dataTableII = step3.form.data.d2;

                    }

                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                {
                    step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step4 != null)
                    {
                        dynamic? data4 = step4.form.data;

                    }

                }
                else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                {
                    step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                    if (step5 != null)
                    {

                    }
                }
            }
            container.Page(page =>
            {
                page.Size(PageSizes.A4.Landscape());
                page.Margin(2, Unit.Centimetre);
                page.PageColor(Colors.White);
                page.DefaultTextStyle(x => x.FontSize(20));
                page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                page.Header()
                    .Column(column =>
                    {

                    });
                page.Content()
                .Column(column =>
                {
                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn(20);
                            columns.RelativeColumn(60);
                            columns.RelativeColumn(20);
                        });

                        //row 1
                        table.Cell().Row(1).Column(1).Text("Biểu số 05d/HTCN").Bold().FontSize(14);
                        table.Cell().Row(1).Column(2).AlignCenter().Text("TÌNH HÌNH PHÁT TRIỂN HẠ TẦNG KHOA HỌC VÀ CÔNG NGHỆ").Bold().FontSize(14);
                        table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                        //row 3
                        table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                        table.Cell().Row(2).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                        table.Cell().Row(2).Column(3).AlignCenter().Text("UBND cấp tỉnh").FontSize(14);

                        //row 4
                        table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                        table.Cell().Row(3).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                        table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(13);

                        //row 5
                        table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                        table.Cell().Row(4).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                        table.Cell().Row(4).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);
                    });
                    column.Item().AlignRight().PaddingBottom(10).Text("Đơn vị tính: triệu đồng").Italic().FontSize(14);
                    column.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.ConstantColumn(40);
                            columns.ConstantColumn(40);
                            columns.ConstantColumn(50);
                            columns.ConstantColumn(50);
                            columns.ConstantColumn(40);
                            columns.RelativeColumn(60);
                            columns.RelativeColumn(50);
                            columns.RelativeColumn(50);
                            columns.RelativeColumn(50);
                            columns.RelativeColumn(50);
                            columns.RelativeColumn(50);
                            columns.RelativeColumn(50);
                            columns.RelativeColumn(60);
                            columns.RelativeColumn(50);
                            columns.ConstantColumn(48);

                        });
                        table.Cell().Row(1).Column(1).RowSpan(3).Element(BlockHead).Text("TT").Bold().FontSize(14);
                        table.Cell().Row(1).Column(2).RowSpan(3).Element(BlockHead).Text("Tên dự án (13)").Bold().FontSize(14);
                        table.Cell().Row(1).Column(3).RowSpan(3).Element(BlockHead).Text("Quyết định đầu tư").Bold().FontSize(14);
                        table.Cell().Row(1).Column(4).RowSpan(3).Element(BlockHead).Text("Chủ đầu tư").Bold().FontSize(14);
                        table.Cell().Row(1).Column(5).RowSpan(3).Element(BlockHead).Text("Địa điểm xây dựng").Bold().FontSize(14);
                        table.Cell().Row(1).Column(6).ColumnSpan(2).Element(BlockHead).Text("Thời gian thực hiện").Bold().FontSize(14);
                        table.Cell().Row(1).Column(8).ColumnSpan(7).Element(BlockHead).Text("Kinh phí").Bold().FontSize(14);
                        table.Cell().Row(1).Column(15).RowSpan(3).Element(BlockHead).Text("Hạng mục đầu tư (14)").Bold().FontSize(14);

                        table.Cell().Row(2).Column(6).RowSpan(2).Element(BlockHead).Text("Khởi động").Italic().FontSize(14);
                        table.Cell().Row(2).Column(7).RowSpan(2).Element(BlockHead).Text("Hoàn thành").Italic().FontSize(14);
                        table.Cell().Row(2).Column(8).RowSpan(2).Element(BlockHead).Text("Tổng số vốn đầu tư được duyệt").Bold().FontSize(12);
                        table.Cell().Row(2).Column(9).ColumnSpan(2).Element(BlockHead).Text("Ngân sách nhà nước").Bold().FontSize(12);
                        table.Cell().Row(2).Column(11).ColumnSpan(2).Element(BlockHead).Text("Ngân sách ngoài nhà nước").Bold().FontSize(12);
                        table.Cell().Row(2).Column(13).RowSpan(2).Element(BlockHead).Text("Kinh phí được phân bổ lũy kế đến hết năm " + phanBoLuyKe).Bold().FontSize(12);
                        table.Cell().Row(2).Column(14).RowSpan(2).Element(BlockHead).Text("Kế hoạch vốn năm " + keHoachVonNam).Bold().FontSize(12);

                        table.Cell().Row(3).Column(9).Element(BlockHead).Text("Trung ương").Italic().FontSize(12);
                        table.Cell().Row(3).Column(10).Element(BlockHead).Text("Địa phương").Italic().FontSize(12);
                        table.Cell().Row(3).Column(11).Element(BlockHead).Text("Nguồn trong nước").Italic().FontSize(12);
                        table.Cell().Row(3).Column(12).Element(BlockHead).Text("Nguồn ngoài nước").Italic().FontSize(12);

                        table.Cell().Row(4).Column(1).Element(BlockTT).Text("I").Bold().FontSize(14);
                        table.Cell().Row(4).Column(2).ColumnSpan(14).Element(BlockItem).Text("Dự án chuyển tiếp").Bold().FontSize(14);

                        uint rowIndex = 1;
                        uint i = 1;
                        foreach (var item in dataTableI)
                        {
                            if (item != null)
                            {
                                string index = i.ToString();
                                rowIndex = i + 4;

                                string TenDuAn = item.TenDuAn.ToString();
                                string QuyetDinhDauTu = item.QuyetDinhDauTu.ToString();
                                string ChuDauTu = item.ChuDauTu.ToString();
                                string DiaDiemXayDung = item.DiaDiemXayDung.ToString();
                                string HangMuc = item.HangMuc.ToString();
                                string KhoiCong = item.KhoiCong.ToString();
                                string HoanThanh = item.HoanThanh.ToString();
                                string SoVonDuocDuyet = item.SoVonDuocDuyet.ToString();
                                string KinhPhiPhanBo = item.KinhPhiPhanBo.ToString();
                                string KeHoachVonNam = item.KeHoachVonNam.ToString();
                                string TrungUong = item.TrungUong.ToString();
                                string DiaPhuong = item.DiaPhuong.ToString();
                                string NguonTrongNuoc = item.NguonTrongNuoc.ToString();
                                string NguonNuocNgoai = item.NguonNuocNgoai.ToString();


                                table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(index).FontSize(14);
                                table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenDuAn).FontSize(14);
                                table.Cell().Row(rowIndex).Column(3).Element(BlockItem).Text(QuyetDinhDauTu).FontSize(14);
                                table.Cell().Row(rowIndex).Column(4).Element(BlockItem).Text(ChuDauTu).FontSize(14);
                                table.Cell().Row(rowIndex).Column(5).Element(BlockItem).Text(DiaDiemXayDung).FontSize(14);
                                table.Cell().Row(rowIndex).Column(6).Element(BlockItem).Text(HangMuc).FontSize(14);
                                table.Cell().Row(rowIndex).Column(7).Element(BlockItem).Text(KhoiCong).FontSize(14);
                                table.Cell().Row(rowIndex).Column(8).Element(BlockItem).Text(HoanThanh).FontSize(14);
                                table.Cell().Row(rowIndex).Column(9).Element(BlockItem).Text(SoVonDuocDuyet).FontSize(14);
                                table.Cell().Row(rowIndex).Column(10).Element(BlockItem).Text(KinhPhiPhanBo).FontSize(14);
                                table.Cell().Row(rowIndex).Column(11).Element(BlockItem).Text(KeHoachVonNam).FontSize(14);
                                table.Cell().Row(rowIndex).Column(12).Element(BlockItem).Text(TrungUong).FontSize(14);
                                table.Cell().Row(rowIndex).Column(13).Element(BlockItem).Text(DiaPhuong).FontSize(14);
                                table.Cell().Row(rowIndex).Column(14).Element(BlockItem).Text(NguonTrongNuoc).FontSize(14);
                                table.Cell().Row(rowIndex).Column(15).Element(BlockItem).Text(NguonNuocNgoai).FontSize(14);

                                i++;
                            }
                        }

                        table.Cell().Row(rowIndex + 1).Column(1).Element(BlockHead).Text("II").Bold().FontSize(14);
                        table.Cell().Row(rowIndex + 1).Column(2).ColumnSpan(14).Element(BlockItem).Text("Dự án mới mở").Bold().FontSize(14);

                        rowIndex = rowIndex + 1;
                        i = 1;
                        foreach (var item in dataTableII)
                        {
                            if (item != null)
                            {
                                string index = i.ToString();
                                rowIndex = rowIndex + 1;


                                string TenDuAn = item.TenDuAn.ToString();
                                string QuyetDinhDauTu = item.QuyetDinhDauTu.ToString();
                                string ChuDauTu = item.ChuDauTu.ToString();
                                string DiaDiemXayDung = item.DiaDiemXayDung.ToString();
                                string HangMuc = item.HangMuc.ToString();
                                string KhoiCong = item.KhoiCong.ToString();
                                string HoanThanh = item.HoanThanh.ToString();
                                string SoVonDuocDuyet = item.SoVonDuocDuyet.ToString();
                                string KinhPhiPhanBo = item.KinhPhiPhanBo.ToString();
                                string KeHoachVonNam = item.KeHoachVonNam.ToString();
                                string TrungUong = item.TrungUong.ToString();
                                string DiaPhuong = item.DiaPhuong.ToString();
                                string NguonTrongNuoc = item.NguonTrongNuoc.ToString();
                                string NguonNuocNgoai = item.NguonNuocNgoai.ToString();


                                table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(index).FontSize(14);
                                table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenDuAn).FontSize(14);
                                table.Cell().Row(rowIndex).Column(3).Element(BlockItem).Text(QuyetDinhDauTu).FontSize(14);
                                table.Cell().Row(rowIndex).Column(4).Element(BlockItem).Text(ChuDauTu).FontSize(14);
                                table.Cell().Row(rowIndex).Column(5).Element(BlockItem).Text(DiaDiemXayDung).FontSize(14);
                                table.Cell().Row(rowIndex).Column(6).Element(BlockItem).Text(HangMuc).FontSize(14);
                                table.Cell().Row(rowIndex).Column(7).Element(BlockItem).Text(KhoiCong).FontSize(14);
                                table.Cell().Row(rowIndex).Column(8).Element(BlockItem).Text(HoanThanh).FontSize(14);
                                table.Cell().Row(rowIndex).Column(9).Element(BlockItem).Text(SoVonDuocDuyet).FontSize(14);
                                table.Cell().Row(rowIndex).Column(10).Element(BlockItem).Text(KinhPhiPhanBo).FontSize(14);
                                table.Cell().Row(rowIndex).Column(11).Element(BlockItem).Text(KeHoachVonNam).FontSize(14);
                                table.Cell().Row(rowIndex).Column(12).Element(BlockItem).Text(TrungUong).FontSize(14);
                                table.Cell().Row(rowIndex).Column(13).Element(BlockItem).Text(DiaPhuong).FontSize(14);
                                table.Cell().Row(rowIndex).Column(14).Element(BlockItem).Text(NguonTrongNuoc).FontSize(14);
                                table.Cell().Row(rowIndex).Column(15).Element(BlockItem).Text(NguonNuocNgoai).FontSize(14);

                           
                                i++;
                            }
                        }

                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }

                        column.Item().AlignLeft().PaddingTop(30).Text("___________________________").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(13) Các dự án tăng cường tiềm lực cho các Tổ chức khoa học và công nghệ công lập").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(14) Ghi rõ hạng mục đầu tư trong năm báo cáo (xây dựng nhà xưởng; mua sắm trang thiết bị...)").Italic().FontSize(11);
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            });
            })
            .GeneratePdf(path);
            return path;
    }

    public string XuatMau6ATT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";
                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";
                //
                var I_1 = "";
                var I_2 = "";
                var I_3 = "";

                var II_1 = "";
                var II_2 = "";
                var II_3 = "";

                var III_1 = "";
                var III_2 = "";
                var III_3 = "";

                var Tong_1 = 0;
                var Tong_2 = 0;
                var Tong_3 = 0;

                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }


                            foreach (var item in data1.d1)
                            {
                                if(item != null)
                                {
                                    if(item.tt == "1")
                                    {
                                        I_1 = item.CapMoi;
                                        I_2 = item.SuaDoiBoSung;
                                        I_3 = item.HuyBoHieuLuc;
                                    }
                                    else if (item.tt == "2")
                                    {
                                        II_1 = item.CapMoi;
                                        II_2 = item.SuaDoiBoSung;
                                        II_3 = item.HuyBoHieuLuc;
                                    }
                                    else if (item.tt == "3")
                                    {
                                        III_1 = item.CapMoi;
                                        III_2 = item.SuaDoiBoSung;
                                        III_3 = item.HuyBoHieuLuc;
                                    }
                                    //Thêm cột tổng
                                    else if (item.LoaiHinhToChuc == "Tổng")
                                    {
                                        Tong_1 = item.CapMoi;
                                        Tong_2 = item.SuaDoiBoSung;
                                        Tong_3 = item.HuyBoHieuLuc;
                                    }
                                }    
                            }
                            
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dynamic? data2 = step2.form.data.d1;
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data3 = step3.form.data.d2;

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data4 = step4.form.data;

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {

                        }
                    }
                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().AlignLeft().PaddingBottom(10).Text("6. Báo cáo kết quả cấp giấy chứng nhận trong hoạt động khoa học và công nghệ").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(20);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 06a/TCKHCN").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("KẾT QUẢ CẤP GIẤY CHỨNG NHẬN ĐĂNG KÝ").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                            //row 3
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("HOẠT ĐỘNG KHOA HỌC VÀ CÔNG NGHỆ").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("UBND cấp tỉnh").FontSize(14);

                            //row 4
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("Ký báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);

                            //row 5
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).PaddingBottom(10).AlignCenter().Text("").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("").FontSize(13);
                        });
                        column.Item().AlignCenter().PaddingBottom(20).Text("_______________").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(3);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Loại hình tổ chức").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).ColumnSpan(3).Element(BlockHead).Text("Kết quả giấy Giấy chứng nhận").Bold().FontSize(14);

                            table.Cell().Row(2).Column(3).Element(BlockHead).Text("Cấp mới").Bold().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockHead).Text("Sửa đổi, bổ sung").Bold().FontSize(14);
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Hủy bỏ hiệu lực/Giải thể").Bold().FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Tổ chức khoa học và công nghệ công lập").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(I_1).FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(I_2).FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text(I_3).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Tổ chức khoa học và công nghệ ngoài công lập").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(II_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(II_2).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(II_3).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Chi nhánh Văn phòng đại diện").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(III_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(III_2).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(III_3).FontSize(14);

                            table.Cell().Row(6).Column(1).ColumnSpan(2).Element(BlockTT).Text("Tổng").Bold().FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(Tong_1).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(Tong_2).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(Tong_3).FontSize(14);
                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }
                    });
                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
          .GeneratePdf(path);
        return path;
    }

    public string XuatMau6BTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";
                //
                var I = "";
                var II = "";
                var III = "";
                var IV = "";

                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }


                            foreach (var item in data1.d1)
                            {
                                if (item != null)
                                {
                                    if (item.tt == "1")
                                    {
                                        I = item.SoLuong;
                                    }
                                    else if (item.tt == "2")
                                    {
                                        II = item.SoLuong;
                                    }
                                    else if (item.tt == "3")
                                    {
                                        III = item.SoLuong;
                                    }
                                    else if (item.tt == "4")
                                    {
                                        IV = item.SoLuong;
                                    }
                                }
                            }
                            
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dynamic? data2 = step2.form.data.d1;
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data3 = step3.form.data.d2;

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data4 = step4.form.data;

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {

                        }
                    }
                }
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(20);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 06b/DNKHCN").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("KẾT QUẢ CẤP GIẤY CHỨNG NHẬN").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                            //row 3
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("DOANH NGHIỆP KHOA HỌC VÀ CÔNG NGHỆ").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("UBND cấp tỉnh").FontSize(14);

                            //row 4
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("Ký báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);

                            //row 5
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).PaddingBottom(10).AlignCenter().Text("").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("").FontSize(13);
                        });
                        column.Item().AlignCenter().PaddingBottom(20).Text("_______________").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(5);
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Số lượng").Bold().FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockItem).Text("Doanh nghiệp khoa học và công nghệ được cấp mới Giấy chứng nhận").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text(I).FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Doanh nghiệp khoa học và công nghệ được cấp sửa đổi, bổ sung Giấy chứng nhận").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(II).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Doanh nghiệp khoa học và công nghệ giải thể/ngừng hoạt động/bị thu hồi Giấy chứng nhận").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(III).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Doanh nghiệp khoa học và công nghệ được tiếp cận ưu đãi, hỗ trợ của nhà nước").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(IV).FontSize(14);

                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
            .GeneratePdf(path);
        return path;
    }

    public string XuatMau7ATT13(string path, Workflow workflow)
    {

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";
                //
                var TT1 = "";
                var TT2 = "";
                var TT3 = "";
                var TT4 = "";
                var TT5 = "";
                var TT6 = "";
                var TT7 = "";
                var TONG = "";
                //
                var TT1_1 = "";
                var TT2_1 = "";
                var TT3_1 = "";
                //
                var TT1_2 = "";
                var TT2_2 = "";
                var TT3_2 = "";
                //
                var TT1_3 = "";
                var TT2_3 = "";
                var TT3_3 = "";
                //
                var TT1_4 = "";
                var TT2_4 = "";
                var TT3_4 = "";

               var TONG_1 ="";
               var TONG_2 ="";
               var TONG_3 ="";

            // Xuat quy trinh 1 -> có 5 bước
            List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dynamic? data1 = step2.form.data;

                            //int Tong = 0;
                            //foreach (var item in data1.d1)
                            //{
                            //    if (item != null)
                            //    {
                            //        int soLuong = item.Soluong;
                            //        Tong += soLuong;
                            //    }
                            //}
                            //TONG = Tong.ToString();
                            foreach (var item in data1.d1)
                            {
                                if (item != null)
                                {
                                    if (item.id == "1")
                                    {
                                        TT1 = item.Soluong;
                                    }
                                    else if (item.id == "2")
                                    {
                                        TT2 = item.Soluong;
                                    }
                                    else if (item.id == "3")
                                    {
                                        TT3 = item.Soluong;
                                    }
                                    else if (item.id == "4")
                                    {
                                        TT4 = item.Soluong;
                                    }
                                    else if (item.id == "5")
                                    {
                                        TT5 = item.Soluong;
                                    }
                                    else if (item.id == "6")
                                    {
                                        TT6 = item.Soluong;
                                    }
                                    else if (item.id == "7")
                                    {
                                        TT7 = item.Soluong;
                                    }
                                    else if (item.LoaiHinh == "Tổng số")
                                    {
                                        TONG = item.Soluong;
                                    }
                                }
                            }

                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data3 = step3.form.data;
                            foreach (var item in data3.d2)
                            {
                                if (item != null)
                                {
                                    if (item.tt == "1")
                                    {

                                        TT1_1 = item.Soluong;
                                        TT2_1 = item.SoLuongHD;
                                        TT3_1 = item.GiaTriHD;
                                    }
                                    else if (item.tt == "2")
                                    {
                                        TT1_2 = item.Soluong;
                                        TT2_2 = item.SoLuongHD;
                                        TT3_2 = item.GiaTriHD;
                                    }
                                    else if (item.tt == "3")
                                    {
                                        TT1_3 = item.Soluong;
                                        TT2_3 = item.SoLuongHD;
                                        TT3_3 = item.GiaTriHD;
                                    }
                                    else if (item.tt == "4")
                                    {
                                        TT1_4 = item.Soluong;
                                        TT2_4 = item.SoLuongHD;
                                        TT3_4 = item.GiaTriHD;
                                    }

                                    else if (item.SuKien == "Tổng số")
                                    {
                                        TONG_1 = item.Soluong;
                                        TONG_2 = item.SoLuongHD;
                                        TONG_3 = item.GiaTriHD;
                                    }


                                }

                            }
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data4 = step4.form.data;

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {

                        }
                    }
                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().AlignLeft().PaddingBottom(10).Text("7. Báo cáo tình hình triển khai phát triển hệ sinh thái khởi nghiệp đổi mới sáng tạo quốc, thị trường khoa học và công nghệ").Bold().FontSize(13);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(20);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 07a/PITT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("KẾT QUẢ PHÁT TRIỂN").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                            //row 3
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("THỊ TRƯỜNG KHOA HỌC VÀ CÔNG NGHỆ").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("UBND cấp tỉnh").FontSize(14);

                            //row 4
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("Ký báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);

                            //row 5
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).PaddingBottom(10).AlignCenter().Text("").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("").FontSize(13);
                        });
                        column.Item().AlignCenter().PaddingBottom(20).Text("_______________").Bold().FontSize(14);


                     
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(5);
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Loại hình tổ chức trung gian").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Số lượng").Bold().FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockItem).Text("Sàn giao dịch công nghệ").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text(TT1).FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Trung tâm giao dịch công nghệ").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(TT2).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Trung tâm xúc tiến và hỗ trợ hoạt động chuyển giao công nghệ").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(TT3).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Trung tâm hổ trợ định giá tài sản trí tuệ").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(TT4).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("5").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Trung tâm hỗ trợ đổi mới sáng tạo").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(TT5).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("6").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Cơ sở ươm tạo công nghệ, ươm tạo doanh nghiệp khoa học và công nghệ").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(TT6).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("7").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Các hình thức khác").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(TT7).FontSize(14);

                            table.Cell().Row(9).Column(1).ColumnSpan(2).Element(BlockTT).Text("Tổng số").Bold().FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text(TONG).FontSize(14);

                        });

                        //Bảng 2

                        column.Item().AlignLeft().PaddingBottom(8).PaddingTop(10).Text("2. Kết quả tổ chức sự kiện khoa học và công nghệ").Bold(); 
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(5);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Sự kiện khoa học và công nghệ").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Số lượng người tham gia").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Số lượng Hợp động chuyển giao công nghệ").Bold().FontSize(14);
                            table.Cell().Row(1).Column(5).Element(BlockHead).Text(text =>
                            {
                                text.Line("Gía trị Hợp đồng chuyển giao công nghệ").Bold().FontSize(14);
                                text.Line("(triệu đồng)").Italic();

                            });
                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockItem).Text("Chợ công nghệ và thiết bị (Techmart)").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text(TT1_1).FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockTT).Text(TT2_1).FontSize(14);
                            table.Cell().Row(2).Column(5).Element(BlockTT).Text(TT3_1).FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Sự kiện kết nối cung cầu Techdemo").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(TT1_2).FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(TT2_2).FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text(TT3_2).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Ngày hội khởi nghiệp đổi mới sáng tạo (Techfest) ").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(TT1_3).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(TT2_3).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(TT3_3).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Các sự kiện khoa học và công nghệ khác").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(TT1_4).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(TT2_4).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(TT3_4).FontSize(14);
        
                            table.Cell().Row(6).Column(1).ColumnSpan(2).Element(BlockTT).Text("Tổng số").Bold().FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(TONG_1).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(TONG_2).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(TONG_3).FontSize(14);

                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
           .GeneratePdf(path);
        return path;
    }
    public string XuatMau7BTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";


                //biến tĩnh
                var II_1 = "";
                var II_2 = "";
                var II_3 = "";
                var II_4 = "";
                var II_5 = "";
                var II_5_1 = "";
                var II_5_2 = "";
                var II_5_3 = "";
                var II_5_4 = "";
                var II_6 = "";
                dynamic dataTable = null;
                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');

                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dataTable = step2.form.data.d1;
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data3 = step3.form.data;

                            foreach(var item in data3.d2)
                            {
                                if(item != null)
                                {
                                    if(item.id == "1")
                                    {
                                        II_1 = item.SoLuong;
                                    }   
                                    else if(item.id == "2"){
                                        II_2 = item.SoLuong;
                                    }
                                    else if (item.id == "3")
                                    {
                                        II_3 = item.SoLuong;
                                    }
                                    else if (item.id == "4")
                                    {
                                        II_4 = item.SoLuong;
                                    }
                                    else if (item.id == "5")
                                    {
                                        II_5 = item.SoLuong;
                                    }
                                    else if (item.id == "5.1")
                                    {
                                        II_5_1 = item.SoLuong;
                                    }
                                    else if (item.id == "5.2")
                                    {
                                        II_5_2 = item.SoLuong;
                                    }
                                    else if (item.id == "5.3")
                                    {
                                        II_5_3 = item.SoLuong;
                                    }
                                    else if (item.id == "5.4")
                                    {
                                        II_5_4 = item.SoLuong;
                                    }
                                    else if (item.id == "6")
                                    {
                                        II_6 = item.SoLuong;
                                    }
                                }    
                            }    
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data4 = step4.form.data;
                            
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {

                        }
                    }
                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(20);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 07b/ĐMST").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("TÌNH HÌNH TRIỂN KHAI PHÁT TRIỂN").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);

                            //row 2
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("HỆ SINH THÁI KHỜI NGHIỆP ĐỔI MỚI SÁNG TẠO QUỐC GIA").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("- Bộ, ngành;").FontSize(14);


                            //row 3
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("- UBND cấp tỉnh").FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(13);

                            //row 5
                            table.Cell().Row(5).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).Text("   1. Nội dung triển khai").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(40);
                            });


                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Tên nhiệm vụ").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockHead).Text("Nhóm nhiệm vụ (1)").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).RowSpan(2).Element(BlockHead).Text("Đơn vị chủ trì").Bold().FontSize(14);
                            table.Cell().Row(1).Column(5).RowSpan(2).Element(BlockHead).Text("Các nội dung chính").Bold().FontSize(14);
                            table.Cell().Row(1).Column(6).ColumnSpan(5).Element(BlockHead).Text("Các hoạt động chính đã thực hiện của nhiệm vụ").Bold().FontSize(14);

                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Hội thảo/Hội nghị").Italic().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("Cuộc thi khởi nghiệp").Italic().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("Kết nối đầu tư").Italic().FontSize(14);
                            table.Cell().Row(2).Column(9).Element(BlockHead).Text("Khóa đào tạo").Italic().FontSize(14);
                            table.Cell().Row(2).Column(10).Element(BlockHead).Text("Khác").Italic().FontSize(14);

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTable)
                            {
                                if(item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;

                                    string TenNV = item.TenNV.ToString();
                                    string NhomNV = item.NhomNV.ToString();
                                    string DonVi = item.DonVi.ToString();
                                    string NoiDungChinh = item.NoiDungChinh.ToString();
                                    string HoiThao = item.HoiThao.ToString();
                                    string CuocThi = item.CuocThi.ToString();
                                    string KetNoi = item.KetNoi.ToString();
                                    string KhoaDT = item.KhoaDT.ToString();
                                    string Khac = item.Khac.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenNV).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockItem).Text(NhomNV).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockItem).Text(DonVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockItem).Text(NoiDungChinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockItem).Text(HoiThao).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockItem).Text(CuocThi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockItem).Text(KetNoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockItem).Text(KhoaDT).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(BlockItem).Text(Khac).FontSize(14);

                                    i++;
                                }    
                            }
                        });

                        column.Item().AlignLeft().PaddingTop(30).PaddingBottom(10).Text("  2. Kết quả hoạt động hổ trợ hệ sinh thái hoạt động khởi nghiệp đổi mới sáng tạo (2)").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn();
                                columns.ConstantColumn(90);
                                columns.ConstantColumn(90);
                            });


                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Đơn vị tính").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Số lượng").Bold().FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockItem).Text(" Chính sách có nội dung liên quan đến hỗ trợ khởi nghiệp đổi mới sáng tạo").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text("Văn bản").Italic().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockTT).Text(II_1).FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Chương trình, đề án, dự án khởi nghiệp đổi mới sáng tạo được hổ trợ").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text("Chương trình/Dự án/Đề án").Italic().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(II_2).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text(" Doanh nghiệp khởi nghiệp, đổi mới sáng tạo (3)").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text("Doanh nghiệp").Italic().FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(II_3).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text(" Chuyên gia khởi nghiệp đổi mới sáng tạo (4)").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text("Chuyên gia").Italic().FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(II_4).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("5").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text(" Tổ chức hỗ trợ khởi nghiệp cho khởi nghiệp sáng tạo (5)").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text("Tổ chức cá nhân").Italic().FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(II_5).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("5.1").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text(" Khu tập trung dịch vụ hỗ trợ khởi nghiệp đổi mới sáng tạo (6)").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockItem).Text("").FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(II_5_1).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("5.2").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text(" Tổ chức thúc đẩy kinh doanh").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(II_5_2).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("5.3").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text(" Nhà đầu tư tổ chức (quỹ đầu tư hoặc công ty đầu tư)").FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(9).Column(4).Element(BlockTT).Text(II_5_3).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("5.4").FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text(" Tổ chức hổ trợ khác (trung tâm khởi nghiệp đổi mới sáng tạo, trung tâm đổi mới sáng tạo,  cơ sở ươm tạo...)").FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(10).Column(4).Element(BlockTT).Text(II_5_4).FontSize(14);


                            table.Cell().Row(11).Column(1).Element(BlockTT).Text("6").FontSize(14);
                            table.Cell().Row(11).Column(2).Element(BlockItem).Text(" Tổng số đầu tư cho doanh nghiệp khởi nghiệp sáng tạo    ").FontSize(14);
                            table.Cell().Row(11).Column(3).Element(BlockTT).Text("Triệu đồng").Italic().FontSize(14);
                            table.Cell().Row(11).Column(4).Element(BlockTT).Text(II_6).FontSize(14);

                        });
                        column.Item().PaddingLeft(20).PaddingTop(20).Text("Ghi chú").Italic().Bold().FontSize(14);
                        column.Item().PaddingLeft(20).Text("(1) Thuộc các nhóm nhiệm vụ quy định từ khoản I-10 Mục III Điều I Quyết định số 844/QĐ-TTg" +
                            " ngày 18 tháng 5 năm 2016 của Thủ tướng Chính phủ về việc phê duyệt Đề án 'Hổ trợ hệ sinh thái khởi nghiệp đổi mới sáng tạo" +
                            " quốc gia đến năm 2025' và khoản 1,2,3 Điều 1 Quyết định số 188/QĐ-TTg ngày 09/02/2021 của Thủ tướng Chính phủ sữa đổi," +
                            " bổ sung một số điều của Quyết định 844/QĐ-TTg và các chương trình, đề án, dự án hỗ trợ hệ sinh thái khởi nghiệp do Bộ," +
                            " ngành, địa phương quản lý.").FontSize(12);
                        column.Item().PaddingLeft(20).Text("(2) Bộ, cơ quan ngang Bộ, cơ quan thuộc Chính phủ chỉ báo cáo nội dung tại điểm 1,2.").FontSize(12);
                        column.Item().PaddingLeft(20).Text("(3,4,5,6,7) Các thuật ngữ này được qui định tại Thông tư số 01/2018/TT-BKHCN ngày 12 tháng 04 năm 2018 Bộ trưởng Bộ khoa học công nghệ quy định tổ chức quản lý Đề án 'Hổ trợ hệ sinh thái khởi nghiệp đổi mới sáng tạo quốc gia đến năm 2025.'").FontSize(12);
                    });

                    static IContainer BlockTT(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .AlignCenter()
                            .AlignMiddle();
                    }
                    static IContainer BlockHead(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .Padding(5)
                            .AlignTop()
                            .AlignCenter()
                            .AlignMiddle();
                    }
                    static IContainer BlockItem(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .AlignLeft()
                            .PaddingLeft(5)
                            .AlignMiddle();
                    }
                });
            })
           .GeneratePdf(path);
        return path;
    }

    public string XuatMau7CTT13(string path, Workflow workflow)
    {


        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";


                //biến tĩnh
                var I1_3 = ""; // dòng 1 cột 3
                var I1_4 = ""; // dòng 1 cột 4
                var I1_5 = ""; // dòng 1 cột 5
                var I1_6 = ""; // dòng 1 cột 6
                var I1_7 = ""; // dòng 1 cột 7
                var I1_8 = ""; // dòng 1 cột 8
                var I1_9 = ""; // dòng 1 cột 9

                var I2_3 = ""; // dòng 2 cột 3
                var I2_4 = "";
                var I2_5 = "";
                var I2_6 = "";
                var I2_7 = "";
                var I2_8 = "";
                var I2_9 = "";

                var I3_3 = "";
                var I3_4 = "";
                var I3_5 = "";
                var I3_6 = "";
                var I3_7 = "";
                var I3_8 = "";
                var I3_9 = "";

                var I4_3 = "";
                var I4_4 = "";
                var I4_5 = "";
                var I4_6 = "";
                var I4_7 = "";
                var I4_8 = "";
                var I4_9 = "";

                var I5_3 = "";
                var I5_4 = "";
                var I5_5 = "";
                var I5_6 = "";
                var I5_7 = "";
                var I5_8 = "";
                var I5_9 = "";

                var I6_3 = "";
                var I6_4 = "";
                var I6_5 = "";
                var I6_6 = "";
                var I6_7 = "";
                var I6_8 = "";
                var I6_9 = "";

                var I7_3 = "";
                var I7_4 = "";
                var I7_5 = "";
                var I7_6 = "";
                var I7_7 = "";
                var I7_8 = "";
                var I7_9 = "";

                var I8_3 = "";
                var I8_4 = "";
                var I8_5 = "";
                var I8_6 = "";
                var I8_7 = "";
                var I8_8 = "";
                var I8_9 = "";

                var I9_3 = "";
                var I9_4 = "";
                var I9_5 = "";
                var I9_6 = "";
                var I9_7 = "";
                var I9_8 = "";
                var I9_9 = "";

                var I10_3 = "";
                var I10_4 = "";
                var I10_5 = "";
                var I10_6 = "";
                var I10_7 = "";
                var I10_8 = "";
                var I10_9 = "";

                var I11_3 = "";
                var I11_4 = "";
                var I11_5 = "";
                var I11_6 = "";
                var I11_7 = "";
                var I11_8 = "";
                var I11_9 = "";

                //
                var II_1 = "";
                var II_2 = "";
                var II_3 = "";
                var II_3_1 = "";
                var II_3_2 = "";
                var II_3_3 = "";
                var II_3_4 = "";
                var II_4 = "";
                var II_5 = "";


                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dynamic? data1 = step2.form.data;

                            foreach(var item in data1.d1)
                            {
                                if(item != null)
                                {
                                    if(item.id == "1")
                                    {
                                        I1_3 = item.SoLuong;
                                        I1_4 = item.TongSo;
                                        I1_5 = item.SoHoiThao;
                                        I1_6 = item.SoCuocThi;
                                        I1_7 = item.SoHoatDong;
                                        I1_8 = item.SoKhoa;
                                        I1_9 = item.Khac;
                                    }
                                    else if (item.id == "2")
                                    {
                                        I2_3 = item.SoLuong;
                                        I2_4 = item.TongSo;
                                        I2_5 = item.SoHoiThao;
                                        I2_6 = item.SoCuocThi;
                                        I2_7 = item.SoHoatDong;
                                        I2_8 = item.SoKhoa;
                                        I2_9 = item.Khac;
                                    }
                                    else if (item.id == "3")
                                    {
                                        I3_3 = item.SoLuong;
                                        I3_4 = item.TongSo;
                                        I3_5 = item.SoHoiThao;
                                        I3_6 = item.SoCuocThi;
                                        I3_7 = item.SoHoatDong;
                                        I3_8 = item.SoKhoa;
                                        I3_9 = item.Khac;
                                    }
                                    else if (item.id == "4")
                                    {
                                        I4_3 = item.SoLuong;
                                        I4_4 = item.TongSo;
                                        I4_5 = item.SoHoiThao;
                                        I4_6 = item.SoCuocThi;
                                        I4_7 = item.SoHoatDong;
                                        I4_8 = item.SoKhoa;
                                        I4_9 = item.Khac;
                                    }
                                    else if (item.id == "5")
                                    {
                                        I5_3 = item.SoLuong;
                                        I5_4 = item.TongSo;
                                        I5_5 = item.SoHoiThao;
                                        I5_6 = item.SoCuocThi;
                                        I5_7 = item.SoHoatDong;
                                        I5_8 = item.SoKhoa;
                                        I5_9 = item.Khac;
                                    }
                                    else if (item.id == "6")
                                    {
                                        I6_3 = item.SoLuong;
                                        I6_4 = item.TongSo;
                                        I6_5 = item.SoHoiThao;
                                        I6_6 = item.SoCuocThi;
                                        I6_7 = item.SoHoatDong;
                                        I6_8 = item.SoKhoa;
                                        I6_9 = item.Khac;
                                    }
                                    else if (item.id == "7")
                                    {
                                        I7_3 = item.SoLuong;
                                        I7_4 = item.TongSo;
                                        I7_5 = item.SoHoiThao;
                                        I7_6 = item.SoCuocThi;
                                        I7_7 = item.SoHoatDong;
                                        I7_8 = item.SoKhoa;
                                        I7_9 = item.Khac;
                                    }
                                    else if (item.id == "8")
                                    {
                                        I8_3 = item.SoLuong;
                                        I8_4 = item.TongSo;
                                        I8_5 = item.SoHoiThao;
                                        I8_6 = item.SoCuocThi;
                                        I8_7 = item.SoHoatDong;
                                        I8_8 = item.SoKhoa;
                                        I8_9 = item.Khac;
                                    }
                                    else if (item.id == "9")
                                    {
                                        I9_3 = item.SoLuong;
                                        I9_4 = item.TongSo;
                                        I9_5 = item.SoHoiThao;
                                        I9_6 = item.SoCuocThi;
                                        I9_7 = item.SoHoatDong;
                                        I9_8 = item.SoKhoa;
                                        I9_9 = item.Khac;
                                    }
                                    else if (item.id == "10")
                                    {
                                        I10_3 = item.SoLuong;
                                        I10_4 = item.TongSo;
                                        I10_5 = item.SoHoiThao;
                                        I10_6 = item.SoCuocThi;
                                        I10_7 = item.SoHoatDong;
                                        I10_8 = item.SoKhoa;
                                        I10_9 = item.Khac;
                                    }
                                }    
                            }
                            int Tong1 = 0;
                            int Tong2= 0;
                            int Tong3= 0;
                            int Tong4= 0;
                            int Tong5= 0;
                            int Tong6= 0;
                            int Tong7= 0;
                            foreach (var item in data1.d1)
                            {
                                if (item != null)
                                {
                                    int sum1 = item.SoLuong;
                                    int sum2 = item.TongSo;
                                    int sum3 = item.SoHoiThao;
                                    int sum4 = item.SoCuocThi;
                                    int sum5 = item.SoHoatDong;
                                    int sum6 = item.SoKhoa;
                                    int sum7 = item.Khac;

                                    Tong1 += sum1;
                                    Tong2 += sum2;
                                    Tong3 += sum3;
                                    Tong4 += sum4;
                                    Tong5 += sum5;
                                    Tong6 += sum6;
                                    Tong7 += sum7;
                                }

                            }
                            I11_3   = Tong1.ToString();
                            I11_4   = Tong2.ToString();
                            I11_5   = Tong3.ToString();
                            I11_6   = Tong4.ToString();
                            I11_7   = Tong5.ToString();
                            I11_8   = Tong6.ToString();
                            I11_9   = Tong7.ToString();



                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data3 = step3.form.data;
                            foreach (var item in data3.d2)
                            {
                                if (item != null)
                                {
                                    if (item.tt == "1")
                                    {
                                        II_1 = item.SoLuong;
                                    }
                                    else if (item.tt == "2")
                                    {
                                        II_2 = item.SoLuong;
                                    }
                                    else if (item.tt == "3")
                                    {
                                        II_3 = item.SoLuong;
                                    }
                                    else if (item.tt == "3.1")
                                    {
                                        II_3_1 = item.SoLuong;
                                    }
                                    else if (item.tt == "3.2")
                                    {
                                        II_3_2 = item.SoLuong;
                                    }
                                    else if (item.tt == "3.3")
                                    {
                                        II_3_3 = item.SoLuong;
                                    }
                                    else if (item.tt == "3.4")
                                    {
                                        II_3_4 = item.SoLuong;
                                    }
                                    else if (item.tt == "4")
                                    {
                                        II_4 = item.SoLuong;
                                    }
                                    else if (item.tt == "5")
                                    {
                                        II_5 = item.SoLuong;
                                    }

                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data4 = step4.form.data;

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {

                        }
                    }
                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(20);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 07c/ĐMST").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("TÌNH HÌNH TRIỂN KHAI PHÁT TRIỂN HỆ SINH THÁI").Bold().FontSize(13);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);

                            //row 2
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("KHỞI NGHIỆP ĐỔI MỚI SÁNG TẠO QUỐC GIA TRÊN CẢ NƯỚC").Bold().FontSize(13);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);


                            //row 3
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Thủ tướng Chính phủ").FontSize(13);

                            //row 5
                            table.Cell().Row(5).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).AlignCenter().Text("").FontSize(13);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).Text("   1. Nội dung triển khai").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.ConstantColumn(60);
                                columns.ConstantColumn(60);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });


                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Nhóm nhiệm vụ triển khai (*)").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockHead).Text("Số lượng nhiệm vụ triển khai").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).RowSpan(2).Element(BlockHead).Text("Tổng số vốn hổ trợ").Bold().FontSize(14);
                            table.Cell().Row(1).Column(5).ColumnSpan(5).Element(BlockHead).Text("Kết quả hoạt động chính đã thực hiện").Bold().FontSize(14);

                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Số hội thảo/Hội nghị").Italic().FontSize(14);
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Số cuộc thi khởi nghiệp").Italic().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("Số hoạt động kết nối đầu tư").Italic().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("Số khóa đào tạo").Italic().FontSize(14);
                            table.Cell().Row(2).Column(9).Element(BlockHead).Text("Khác").Italic().FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Nhóm 1").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(I1_3).FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(I1_4).FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text(I1_5).FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockTT).Text(I1_6).FontSize(14);
                            table.Cell().Row(3).Column(7).Element(BlockTT).Text(I1_7).FontSize(14);
                            table.Cell().Row(3).Column(8).Element(BlockTT).Text(I1_8).FontSize(14);
                            table.Cell().Row(3).Column(9).Element(BlockTT).Text(I1_9).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Nhóm 2").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(I2_3).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(I2_4).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(I2_5).FontSize(14);
                            table.Cell().Row(4).Column(6).Element(BlockTT).Text(I2_6).FontSize(14);
                            table.Cell().Row(4).Column(7).Element(BlockTT).Text(I2_7).FontSize(14);
                            table.Cell().Row(4).Column(8).Element(BlockTT).Text(I2_8).FontSize(14);
                            table.Cell().Row(4).Column(9).Element(BlockTT).Text(I2_9).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Nhóm 3").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(I3_3).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(I3_4).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(I3_5).FontSize(14);
                            table.Cell().Row(5).Column(6).Element(BlockTT).Text(I3_6).FontSize(14);
                            table.Cell().Row(5).Column(7).Element(BlockTT).Text(I3_7).FontSize(14);
                            table.Cell().Row(5).Column(8).Element(BlockTT).Text(I3_8).FontSize(14);
                            table.Cell().Row(5).Column(9).Element(BlockTT).Text(I3_9).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Nhóm 4").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(I4_3).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(I4_4).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(I4_5).FontSize(14);
                            table.Cell().Row(6).Column(6).Element(BlockTT).Text(I4_6).FontSize(14);
                            table.Cell().Row(6).Column(7).Element(BlockTT).Text(I4_7).FontSize(14);
                            table.Cell().Row(6).Column(8).Element(BlockTT).Text(I4_8).FontSize(14);
                            table.Cell().Row(6).Column(9).Element(BlockTT).Text(I4_9).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("5").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Nhóm 5").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(I5_3).FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(I5_4).FontSize(14);
                            table.Cell().Row(7).Column(5).Element(BlockTT).Text(I5_5).FontSize(14);
                            table.Cell().Row(7).Column(6).Element(BlockTT).Text(I5_6).FontSize(14);
                            table.Cell().Row(7).Column(7).Element(BlockTT).Text(I5_7).FontSize(14);
                            table.Cell().Row(7).Column(8).Element(BlockTT).Text(I5_8).FontSize(14);
                            table.Cell().Row(7).Column(9).Element(BlockTT).Text(I5_9).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("6").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Nhóm 6").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(I6_3).FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(I6_4).FontSize(14);
                            table.Cell().Row(8).Column(5).Element(BlockTT).Text(I6_5).FontSize(14);
                            table.Cell().Row(8).Column(6).Element(BlockTT).Text(I6_6).FontSize(14);
                            table.Cell().Row(8).Column(7).Element(BlockTT).Text(I6_7).FontSize(14);
                            table.Cell().Row(8).Column(8).Element(BlockTT).Text(I6_8).FontSize(14);
                            table.Cell().Row(8).Column(9).Element(BlockTT).Text(I6_9).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("7").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text("Nhóm 7").FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text(I7_3).FontSize(14);
                            table.Cell().Row(9).Column(4).Element(BlockTT).Text(I7_4).FontSize(14);
                            table.Cell().Row(9).Column(5).Element(BlockTT).Text(I7_5).FontSize(14);
                            table.Cell().Row(9).Column(6).Element(BlockTT).Text(I7_6).FontSize(14);
                            table.Cell().Row(9).Column(7).Element(BlockTT).Text(I7_7).FontSize(14);
                            table.Cell().Row(9).Column(8).Element(BlockTT).Text(I7_8).FontSize(14);
                            table.Cell().Row(9).Column(9).Element(BlockTT).Text(I7_9).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("8").FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text("Nhóm 8").FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text(I8_3).FontSize(14);
                            table.Cell().Row(10).Column(4).Element(BlockTT).Text(I8_4).FontSize(14);
                            table.Cell().Row(10).Column(5).Element(BlockTT).Text(I8_5).FontSize(14);
                            table.Cell().Row(10).Column(6).Element(BlockTT).Text(I8_6).FontSize(14);
                            table.Cell().Row(10).Column(7).Element(BlockTT).Text(I8_7).FontSize(14);
                            table.Cell().Row(10).Column(8).Element(BlockTT).Text(I8_8).FontSize(14);
                            table.Cell().Row(10).Column(9).Element(BlockTT).Text(I8_9).FontSize(14);

                            table.Cell().Row(11).Column(1).Element(BlockTT).Text("9").FontSize(14);
                            table.Cell().Row(11).Column(2).Element(BlockItem).Text("Nhóm 9").FontSize(14);
                            table.Cell().Row(11).Column(3).Element(BlockTT).Text(I9_3).FontSize(14);
                            table.Cell().Row(11).Column(4).Element(BlockTT).Text(I9_4).FontSize(14);
                            table.Cell().Row(11).Column(5).Element(BlockTT).Text(I9_5).FontSize(14);
                            table.Cell().Row(11).Column(6).Element(BlockTT).Text(I9_6).FontSize(14);
                            table.Cell().Row(11).Column(7).Element(BlockTT).Text(I9_7).FontSize(14);
                            table.Cell().Row(11).Column(8).Element(BlockTT).Text(I9_8).FontSize(14);
                            table.Cell().Row(11).Column(9).Element(BlockTT).Text(I9_9).FontSize(14);

                            table.Cell().Row(12).Column(1).Element(BlockTT).Text("10").FontSize(14);
                            table.Cell().Row(12).Column(2).Element(BlockItem).Text("Nhóm 10").FontSize(14);
                            table.Cell().Row(12).Column(3).Element(BlockTT).Text(I10_3).FontSize(14);
                            table.Cell().Row(12).Column(4).Element(BlockTT).Text(I10_4).FontSize(14);
                            table.Cell().Row(12).Column(5).Element(BlockTT).Text(I10_5).FontSize(14);
                            table.Cell().Row(12).Column(6).Element(BlockTT).Text(I10_6).FontSize(14);
                            table.Cell().Row(12).Column(7).Element(BlockTT).Text(I10_7).FontSize(14);
                            table.Cell().Row(12).Column(8).Element(BlockTT).Text(I10_8).FontSize(14);
                            table.Cell().Row(12).Column(9).Element(BlockTT).Text(I10_9).FontSize(14);

                            table.Cell().Row(13).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(13).Column(2).Element(BlockItem).Text("Tổng").Bold().FontSize(14);
                            table.Cell().Row(13).Column(3).Element(BlockTT).Text(I11_3).FontSize(14);
                            table.Cell().Row(13).Column(4).Element(BlockTT).Text(I11_4).FontSize(14);
                            table.Cell().Row(13).Column(5).Element(BlockTT).Text(I11_5).FontSize(14);
                            table.Cell().Row(13).Column(6).Element(BlockTT).Text(I11_6).FontSize(14);
                            table.Cell().Row(13).Column(7).Element(BlockTT).Text(I11_7).FontSize(14);
                            table.Cell().Row(13).Column(8).Element(BlockTT).Text(I11_8).FontSize(14);
                            table.Cell().Row(13).Column(9).Element(BlockTT).Text(I11_9).FontSize(14);

                        });

                        column.Item().PaddingTop(10).AlignLeft().Text("(*): Thuộc các nhóm nhiệm vụ quy định từ khoản 1-10 Mục III Điều 1 Quyết định số 844/QĐ-TTg" +
                            " ngày 18 tháng 5 năm 2016 của Thủ tướng Chính phủ về việc phê duyệt Đề án 'Hỗ trợ hệ sinh thái khởi nghiệp đổi mới sáng" +
                            " tạo quốc gia đến năm 2025' và khoản 1,2,3 Điều 1 Quyết định số 188/QĐ-TTg ngày 09/02/2021 của Thủ tướng chính phủ Sửa" +
                            " đổi, bổ sung một số điều của Quyết định 844/QĐ-TTg và các chương trình, đề án, dự án hỗ trợ hệ sinh thái khởi nghiệp do" +
                            " Bộ, ngành, địa phương quản lý.").Italic().FontSize(12);

                        column.Item().AlignLeft().PaddingTop(20).PaddingBottom(10).Text("  2. Kết quả hoạt động hổ trợ hệ sinh thái hoạt động khởi nghiệp đổi mới sáng tạo (2)").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn();
                                columns.ConstantColumn(110);
                                columns.ConstantColumn(90);
                            });

                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Đơn vị tính").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Số lượng").Bold().FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockItem).Text(" Chính sách có nội dung liên quan đến hỗ trợ khởi nghiệp đổi mới sáng tạo").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text("Văn bản").Italic().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockTT).Text(II_1).FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text(" Doanh nghiệp khởi nghiệp đổi mới sáng tạo").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text("Doanh nghiệp").Italic().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(II_2).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text(" Tổ chức hỗ trợ khởi nghiệp cho khởi nghiệp sáng tạo").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text("Tổ chức/cá nhân").Italic().FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(II_3).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("3.1").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text(" Cơ sở ươm tạo").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text("").Italic().FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(II_3_1).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("3.2").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text(" Tổ chức thúc đẩy kinh doanh").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text("").Italic().FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(II_3_2).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("3.3").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text(" Nhà đầu tư tổ chức (quỹ đầu tư hoặc công ty đầu tư)").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(II_3_3).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("3.4").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text(" Tổ chức hổ trợ khác (trung tâm khởi nghiệp, đổi mới sáng tạo, trung tâm đổi mới sáng  tạo,...)").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(II_3_4).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text(" Chương trình, đề án, dự án khởi nghiệp đổi mới sáng tạo được hỗ trợ").FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text("Chương trình/Dự án/Đề án").Italic().FontSize(14);
                            table.Cell().Row(9).Column(4).Element(BlockTT).Text(II_4).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("5").FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text(" Tổng số vốn đầu tư").FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text("Triệu đồng").Italic().FontSize(14);
                            table.Cell().Row(10).Column(4).Element(BlockTT).Text(II_5).FontSize(14);


                        });
                    });

                    static IContainer BlockTT(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .AlignCenter()
                            .AlignMiddle();
                    }
                    static IContainer BlockHead(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .Padding(5)
                            .AlignTop()
                            .AlignCenter()
                            .AlignMiddle();
                    }
                    static IContainer BlockItem(IContainer container)
                    {
                        return container
                            .Border(1)
                            .Background(Colors.White)
                            .ShowOnce()
                            .MinWidth(28)
                            .MinHeight(28)
                            .AlignLeft()
                            .PaddingLeft(5)
                            .AlignMiddle();
                    }
                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
           .GeneratePdf(path);
        return path; ;
    }

    public string XuatMau8ATT13(string path, Workflow workflow)
    {

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";


                dynamic dataTableI = null;
                dynamic dataTableII = null;
                // Xuat quy trinh 1 -> có 5 bước
         
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
         

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dataTableI = step2.form.data.d;
                        
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dataTableII = step3.form.data.d;
                       
                        }

                    }
           
                }
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().PaddingBottom(15).Text("8. Báo cáo tình hình nhập khẩu máy móc, thiết bị, dây chuyền công nghệ đã qua sử dụng").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(30);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 08a/NKMM").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("TÌNH HÌNH NHẬP KHẨU MÁY MÓC THIẾT BỊ").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                            //row 2
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("DÂY CHUYỀN CÔNG NGHỆ ĐÃ QUA SỬ DỤNG,").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("Bộ tài chính").FontSize(14);

                            //row 3
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("CÁC TRƯỜNG HỢP VI PHẠM BUỘC TÁI XUẤT, XỬ PHẠT").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(14);

                            //row 5
                            table.Cell().Row(5).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).AlignCenter().Text("").Bold().FontSize(13);

                            //row 5
                            table.Cell().Row(6).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(6).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                            table.Cell().Row(6).Column(3).AlignCenter().Text("").FontSize(13);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).Text("1. Kết quả hoạt động nhập khẩu máy móc, thiết bị, dây chuyền công nghệ đã qua sử dụng").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Tên địa phương (2)").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).ColumnSpan(3).Element(BlockHead).Text("Máy móc thiết bị").Bold().FontSize(14);
                            table.Cell().Row(1).Column(6).ColumnSpan(4).Element(BlockHead).Text("Dây chuyền công nghệ").Bold().FontSize(14);

                            table.Cell().Row(2).Column(3).Element(BlockHead).Text("Lĩnh vực sản xuất (16)").Italic().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockHead).Text("Số lượng").Italic().FontSize(14);
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Nước sản xuất").Italic().FontSize(14);

                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Tên dây chuyền công nghệ").Italic().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("Số lượng").Italic().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("Lĩnh vực sản xuất").Italic().FontSize(14);
                            table.Cell().Row(2).Column(9).Element(BlockHead).Text("Nước xuất khẩu").Italic().FontSize(14);

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTableI)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;

                                    string Index = item.tt.ToString();
                                    string TenDiaPhuong = item.TenDiaPhuong.ToString();
                                    string ThietBi_LinhVuc = item.ThietBi_LinhVuc.ToString();
                                    string ThietBi_SoLuong = item.ThietBi_SoLuong.ToString();
                                    string ThietBi_NuocSanXuat = item.ThietBi_NuocSanXuat.ToString();
                                    string DayChuyen_TenCongNghe = item.DayChuyen_TenCongNghe.ToString();
                                    string DayChuyen_SoLuong = item.DayChuyen_SoLuong.ToString();
                                    string CongNghe_LinhVuc = item.CongNghe_LinhVuc.ToString();
                                    string CongNghe_NuocXuatKhau = item.CongNghe_NuocXuatKhau.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenDiaPhuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockItem).Text(ThietBi_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(ThietBi_SoLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockItem).Text(ThietBi_NuocSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockItem).Text(DayChuyen_TenCongNghe).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(DayChuyen_SoLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockItem).Text(CongNghe_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockItem).Text(CongNghe_NuocXuatKhau).FontSize(14);

                                    i++;
                                }
                            }
                          

                        });
                        column.Item().AlignLeft().PaddingTop(20).PaddingBottom(10).Text("2. Kết quả xử lý vi phạm trong nhập khẩu máy móc, thiết bị, dây chuyền công nghệ đã qua sử dụng").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Tên, địa chỉ doanh nghiệp nhập khẩu").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockHead).Text("Số tờ khai").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).ColumnSpan(5).Element(BlockHead).Text("Máy móc thiết bị").Bold().FontSize(14);
                            table.Cell().Row(1).Column(9).ColumnSpan(5).Element(BlockHead).Text("Dây chuyền công nghệ").Bold().FontSize(14);

                            table.Cell().Row(2).Column(4).Element(BlockHead).Text("Tên").Italic().FontSize(14);
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Lĩnh vực sản xuất (17)").Italic().FontSize(14);
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Nội dung vi phạm").Italic().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("Hình thức xử lý").Italic().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("Kết quả xử lý").Italic().FontSize(14);

                            table.Cell().Row(2).Column(9).Element(BlockHead).Text("Tên").Italic().FontSize(14);
                            table.Cell().Row(2).Column(10).Element(BlockHead).Text("Lĩnh vực sản xuất").Italic().FontSize(14);
                            table.Cell().Row(2).Column(11).Element(BlockHead).Text("Nội dung vi phạm").Italic().FontSize(14);
                            table.Cell().Row(2).Column(12).Element(BlockHead).Text("Hình thức xử lý").Italic().FontSize(14);
                            table.Cell().Row(2).Column(13).Element(BlockHead).Text("Kết quả xử lý").Italic().FontSize(14);

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTableII)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;
                                    string Index = item.tt.ToString();
                                    string TenDoanhNghiep = item.TenDoanhNghiep.ToString();
                                    string SoToKhai = item.SoToKhai.ToString();
                                    string ThietBi_Ten = item.ThietBi_Ten.ToString();
                                    string ThietBi_LinhVuc = item.ThietBi_LinhVuc.ToString();
                                    string ThietBi_NoiDung = item.ThietBi_NoiDung.ToString();
                                    string ThietBi_HinhThuc = item.ThietBi_HinhThuc.ToString();
                                    string ThietBi_KetQua = item.ThietBi_KetQua.ToString();
                                    string DayChuyen_Ten = item.DayChuyen_Ten.ToString();
                                    string DayChuyen_LinhVuc = item.DayChuyen_LinhVuc.ToString();
                                    string DayChuyen_NoiDung = item.DayChuyen_NoiDung.ToString();
                                    string DayChuyen_HinhThuc = item.DayChuyen_HinhThuc.ToString();
                                    string DayChuyen_KetQua = item.DayChuyen_KetQua.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenDoanhNghiep).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockItem).Text(ThietBi_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockItem).Text(ThietBi_Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockItem).Text(ThietBi_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockItem).Text(ThietBi_NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockItem).Text(ThietBi_HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockItem).Text(ThietBi_KetQua).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockItem).Text(DayChuyen_Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(BlockItem).Text(DayChuyen_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(BlockItem).Text(DayChuyen_NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(BlockItem).Text(DayChuyen_HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(13).Element(BlockItem).Text(DayChuyen_KetQua).FontSize(14);

                                    i++;
                                }
                            }
                            

                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }

                        column.Item().AlignLeft().PaddingTop(30).Text("___________________________").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(15) Tỉnh, thành phố trực thuộc trung ương nơi doanh nghiệp nghiệp sử dụng máy móc, thiết bị, dây chuyền công nghệ.").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(16)(17) Ghi tên tương ứng với cấp 2 của bảng. Hệ thống ngành kinh tế Việt Nam theo số 27/2018/QĐ-TTg ngày 06 tháng 7 " +
                            "năm 2018 của Thủ tướng chính phủ ban hàng Hệ thống ngành kinh tế Việt Nam").Italic().FontSize(11);
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
           .GeneratePdf(path);
        return path;
    }

    public string XuatMau8BTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                dynamic dataTableI = null;
                dynamic dataTableII = null;
              
                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
           

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dataTableI = step2.form.data.d;
                            
                           
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dataTableII = step3.form.data.d;
                           
                          
                        }

                    }
           
                }
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(20);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 08b/NKMM").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("TÌNH HÌNH NHẬP KHẨU MÁY MÓC, THIẾT BỊ,").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                            //row 2
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("DÂY CHUYỀN CÔNG NGHỆ ĐÃ QUA SỬ DỤNG,").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);

                            //row 3
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("CÁC TRƯỜNG HỢP VI PHẠM BUỘC TÁI XUẤT, XỬ PHẠT").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Thủ tướng chính phủ").FontSize(13);

                            //row 5
                            table.Cell().Row(5).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).AlignCenter().Text("").Bold().FontSize(13);

                            //row 5
                            table.Cell().Row(6).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(6).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                            table.Cell().Row(6).Column(3).AlignCenter().Text("").FontSize(13);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).Text("1. Kết quả hoạt động nhập khẩu máy móc, thiết bị, dây chuyền công nghệ đã qua sử dụng").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Tên địa phương (2)").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).ColumnSpan(3).Element(BlockHead).Text("Máy móc thiết bị").Bold().FontSize(14);
                            table.Cell().Row(1).Column(6).ColumnSpan(4).Element(BlockHead).Text("Dây chuyền công nghệ").Bold().FontSize(14);

                            table.Cell().Row(2).Column(3).Element(BlockHead).Text("Lĩnh vực sản xuất (16)").Italic().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockHead).Text("Số lượng").Italic().FontSize(14);
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Nước sản xuất").Italic().FontSize(14);

                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Tên dây chuyền công nghệ").Italic().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("Số lượng").Italic().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("Lĩnh vực sản xuất").Italic().FontSize(14);
                            table.Cell().Row(2).Column(9).Element(BlockHead).Text("Nước xuất khẩu").Italic().FontSize(14);

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTableI)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;

                                    string Index = item.tt.ToString();
                                    string TenDiaPhuong = item.TenDiaPhuong.ToString();
                                    string ThietBi_LinhVuc = item.ThietBi_LinhVuc.ToString();
                                    string ThietBi_SoLuong = item.ThietBi_SoLuong.ToString();
                                    string ThietBi_NuocSanXuat = item.ThietBi_NuocSanXuat.ToString();
                                    string DayChuyen_TenCongNghe = item.DayChuyen_TenCongNghe.ToString();
                                    string DayChuyen_SoLuong = item.DayChuyen_SoLuong.ToString();
                                    string DayChuyen_LinhVuc = item.DayChuyen_LinhVuc.ToString();
                                    string DayChuyen_NuocXuatKhau = item.DayChuyen_NuocXuatKhau.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenDiaPhuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockItem).Text(ThietBi_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(ThietBi_SoLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockItem).Text(ThietBi_NuocSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockItem).Text(DayChuyen_TenCongNghe).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(DayChuyen_SoLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockItem).Text(DayChuyen_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockItem).Text(DayChuyen_NuocXuatKhau).FontSize(14);

                                    i++;
                                }
                            }
                          

                        });
                        column.Item().AlignLeft().PaddingTop(40).PaddingBottom(10).Text("2. Kết quả xử lý vi phạm trong nhập khẩu máy móc, thiết bị, dây chuyền công nghệ đã qua sử dụng").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Tên, địa chỉ doanh nghiệp nhập khẩu").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockHead).Text("Số tờ khai").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).ColumnSpan(5).Element(BlockHead).Text("Máy móc thiết bị").Bold().FontSize(14);
                            table.Cell().Row(1).Column(9).ColumnSpan(5).Element(BlockHead).Text("Dây chuyền công nghệ").Bold().FontSize(14);

                            table.Cell().Row(2).Column(4).Element(BlockHead).Text("Tên").Italic().FontSize(14);
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Lĩnh vực sản xuất (17)").Italic().FontSize(14);
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Nội dung vi phạm").Italic().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("Hình thức xử lý").Italic().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("Kết quả xử lý").Italic().FontSize(14);

                            table.Cell().Row(2).Column(9).Element(BlockHead).Text("Tên").Italic().FontSize(14);
                            table.Cell().Row(2).Column(10).Element(BlockHead).Text("Lĩnh vực sản xuất").Italic().FontSize(14);
                            table.Cell().Row(2).Column(11).Element(BlockHead).Text("Nội dung vi phạm").Italic().FontSize(14);
                            table.Cell().Row(2).Column(12).Element(BlockHead).Text("Hình thức xử lý").Italic().FontSize(14);
                            table.Cell().Row(2).Column(13).Element(BlockHead).Text("Kết quả xử lý").Italic().FontSize(14);

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTableII)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;
                                    string Index = item.tt.ToString();
                                    string TenDoanhNghiep = item.TenDoanhNghiep.ToString();
                                    string SoToKhai = item.SoToKhai.ToString();
                                    string ThietBi_Ten = item.ThietBi_Ten.ToString();
                                    string ThietBi_LinhVuc = item.ThietBi_LinhVuc.ToString();
                                    string ThietBi_NoiDung = item.ThietBi_NoiDung.ToString();
                                    string ThietBi_HinhThuc = item.ThietBi_HinhThuc.ToString();
                                    string ThietBi_KetQua = item.ThietBi_KetQua.ToString();
                                    string DayChuyen_Ten = item.DayChuyen_Ten.ToString();
                                    string DayChuyen_LinhVuc = item.DayChuyen_LinhVuc.ToString();
                                    string DayChuyen_NoiDung = item.DayChuyen_NoiDung.ToString();
                                    string DayChuyen_HinhThuc = item.DayChuyen_HinhThuc.ToString();
                                    string DayChuyen_KetQua = item.DayChuyen_KetQua.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenDoanhNghiep).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockItem).Text(SoToKhai).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(ThietBi_Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockItem).Text(ThietBi_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockItem).Text(ThietBi_NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(ThietBi_HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockItem).Text(ThietBi_KetQua).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockItem).Text(DayChuyen_Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(BlockItem).Text(DayChuyen_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(BlockTT).Text(DayChuyen_NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(BlockItem).Text(DayChuyen_HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(13).Element(BlockItem).Text(DayChuyen_KetQua).FontSize(14);

                                    i++;
                                }
                            }
                          
                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .Padding(5)
                                .AlignMiddle();
                        }

                        column.Item().AlignLeft().PaddingTop(30).Text("___________________________").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(18) Tỉnh, thành phố trực thuộc trung ương nơi doanh nghiệp nghiệp sử dụng máy móc, thiết bị, dây chuyền công nghệ.").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(19)(20) Ghi tên tương ứng với cấp 2 của bảng. Hệ thống ngành kinh tế Việt Nam theo số 27/2018/QĐ-TTg ngày 06 tháng 7 " +
                            "năm 2018 của Thủ tướng chính phủ ban hàng Hệ thống ngành kinh tế Việt Nam").Italic().FontSize(11);
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })

    .GeneratePdf(path);
        return path;
    }

    public string XuatMau9ATT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";
                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";
                //biến tĩnh
                //bảng 1
                var I1_1 = "";
                var I1_2 = "";
                var I1_3 = "";
                var I1_4 = "";
                var I1_5 = "";
                var I1_6 = "";
                var I1_7 = "";
                var I1_8 = "";

                var I2_1 = "";
                var I2_2 = "";
                var I2_3 = "";
                var I2_4 = "";
                var I2_5 = "";
                var I2_6 = "";
                var I2_7 = "";
                var I2_8 = "";

                var I3_1 = "";
                var I3_2 = "";
                var I3_3 = "";
                var I3_4 = "";
                var I3_5 = "";
                var I3_6 = "";
                var I3_7 = "";
                var I3_8 = "";

                var I4_1 = "";
                var I4_2 = "";
                var I4_3 = "";
                var I4_4 = "";
                var I4_5 = "";
                var I4_6 = "";
                var I4_7 = "";
                var I4_8 = "";

                var I5_1 = "";
                var I5_2 = "";
                var I5_3 = "";
                var I5_4 = "";
                var I5_5 = "";
                var I5_6 = "";
                var I5_7 = "";
                var I5_8 = "";
                //bảng 2
                var II_0_1 = "";
                var II_0_2 = "";
                var II_0_3 = "";
                var II_0_4 = "";
                var II_0_5 = "";
                var II_0_6 = "";
                var II_0_7 = "";

                var II_1_1 = "";
                var II_1_2 = "";
                var II_1_3 = "";
                var II_1_4 = "";
                var II_1_5 = "";
                var II_1_6 = "";
                var II_1_7 = "";

                var II_1_1_1 = "";
                var II_1_1_2 = "";
                var II_1_1_3 = "";
                var II_1_1_4 = "";
                var II_1_1_5 = "";
                var II_1_1_6 = "";
                var II_1_1_7 = "";

                var II_1_2_1 = "";
                var II_1_2_2 = "";
                var II_1_2_3 = "";
                var II_1_2_4 = "";
                var II_1_2_5 = "";
                var II_1_2_6 = "";
                var II_1_2_7 = "";

                var II_1_3_1 = "";
                var II_1_3_2 = "";
                var II_1_3_3 = "";
                var II_1_3_4 = "";
                var II_1_3_5 = "";
                var II_1_3_6 = "";
                var II_1_3_7 = "";

                var II_1_4_1 = "";
                var II_1_4_2 = "";
                var II_1_4_3 = "";
                var II_1_4_4 = "";
                var II_1_4_5 = "";
                var II_1_4_6 = "";
                var II_1_4_7 = "";

                var II_2_1 = "";
                var II_2_2 = "";
                var II_2_3 = "";
                var II_2_4 = "";
                var II_2_5 = "";
                var II_2_6 = "";
                var II_2_7 = "";

                var II_2_1_1 = "";
                var II_2_1_2 = "";
                var II_2_1_3 = "";
                var II_2_1_4 = "";
                var II_2_1_5 = "";
                var II_2_1_6 = "";
                var II_2_1_7 = "";

                var II_2_2_1 = "";
                var II_2_2_2 = "";
                var II_2_2_3 = "";
                var II_2_2_4 = "";
                var II_2_2_5 = "";
                var II_2_2_6 = "";
                var II_2_2_7 = "";

                var II_2_3_1 = "";
                var II_2_3_2 = "";
                var II_2_3_3 = "";
                var II_2_3_4 = "";
                var II_2_3_5 = "";
                var II_2_3_6 = "";
                var II_2_3_7 = "";

                var II_2_4_1 = "";
                var II_2_4_2 = "";
                var II_2_4_3 = "";
                var II_2_4_4 = "";
                var II_2_4_5 = "";
                var II_2_4_6 = "";
                var II_2_4_7 = "";

                //bảng 3
                var III_1_1 = "";
                var III_1_2 = "";
                var III_1_3 = "";
                var III_1_4 = "";
                var III_1_5 = "";

                var III_2_1 = "";
                var III_2_2 = "";
                var III_2_3 = "";
                var III_2_4 = "";
                var III_2_5 = "";

                var III_3_1 = "";
                var III_3_2 = "";
                var III_3_3 = "";
                var III_3_4 = "";
                var III_3_5 = "";

                var III_4_1 = "";
                var III_4_2 = "";
                var III_4_3 = "";
                var III_4_4 = "";
                var III_4_5 = "";

                var III_5_1 = "";
                var III_5_2 = "";
                var III_5_3 = "";
                var III_5_4 = "";
                var III_5_5 = "";

                //bảng 4
                var IV1_1 = "";
                var IV1_2 = "";

                var IV2_1 = "";
                var IV2_2 = "";

                var IV3_1 = "";
                var IV3_2 = "";

                var IV4_1 = "";
                var IV4_2 = "";

                var IV5_1 = "";
                var IV5_2 = "";

                var IV6_1 = "";
                var IV6_2 = "";

                var IV7_1 = "";
                var IV7_2 = "";

                var IV8_1 = "";
                var IV8_2 = "";


                //bảng 5
                var V_1_1 = "";
                var V_1_2 = "";
                var V_1_3 = "";
                var V_1_4 = "";

                var V_2_1 = "";
                var V_2_2 = "";
                var V_2_3 = "";
                var V_2_4 = "";

                //
                var nRowII = 5;


                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 1; i <= nRowII + 1; i++)
                {
                    for (int col = 2; col <= 15; col++)
                    {
                        II_values[$"II_{i}_{col}"] = "";
                    }
                }

                //gán biến, hàng-cột, cột bắt đầu từ 2
                II_values["II_1_2"] = "gán biến";
                II_values["II_1_3"] = "gán biến";
                II_values["II_5_3"] = "gán biến"; // dòng 5 cột 3
                II_values["II_6_3"] = "gán biến"; // dòng tổng trong bảng vì nRowII + 1 = 6 cột 3

               

                var SoLuongDuAn = 0.0;
                var TongVon = 0.0;
                var TongVonGiaiNgan = 0.0;
                var TyLe = 0.0;

                dynamic dataTableI = null;
              
                var TONG = "";

                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;
                dynamic? step6;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            //dynamic? data1 = step2.form.data.d1;
                            //foreach(var item in data1)
                            //{
                            //    if(item != null)
                            //    {
                            //        if(item.tt == "1")
                            //        {
                            //            I1_1 = item.TongMucDauTu;
                            //            I1_2 = item.KeHoachVon;
                            //            I1_3 = item.ThucHien_VonCap;
                            //            I1_4 = item.ThucHien_GiaiNgan;
                            //            I1_5 = item.ThucHien_TyLe;
                            //            I1_6 = item.CongDon_VonCap;
                            //            I1_7 = item.CongDon_GiaiNgan;
                            //            I1_8 = item.CongDon_TyLe;
                            //        }
                            //        if (item.tt == "2")
                            //        {
                            //            I2_1 = item.TongMucDauTu;
                            //            I2_2 = item.KeHoachVon;
                            //            I2_3 = item.ThucHien_VonCap;
                            //            I2_4 = item.ThucHien_GiaiNgan;
                            //            I2_5 = item.ThucHien_TyLe;
                            //            I2_6 = item.CongDon_VonCap;
                            //            I2_7 = item.CongDon_GiaiNgan;
                            //            I2_8 = item.CongDon_TyLe;
                            //        }
                            //        if (item.tt == "3")
                            //        {
                            //            I3_1 = item.TongMucDauTu;
                            //            I3_2 = item.KeHoachVon;
                            //            I3_3 = item.ThucHien_VonCap;
                            //            I3_4 = item.ThucHien_GiaiNgan;
                            //            I3_5 = item.ThucHien_TyLe;
                            //            I3_6 = item.CongDon_VonCap;
                            //            I3_7 = item.CongDon_GiaiNgan;
                            //            I3_8 = item.CongDon_TyLe;
                            //        }
                            //        if (item.tt == "4")
                            //        {
                            //            I4_1 = item.TongMucDauTu;
                            //            I4_2 = item.KeHoachVon;
                            //            I4_3 = item.ThucHien_VonCap;
                            //            I4_4 = item.ThucHien_GiaiNgan;
                            //            I4_5 = item.ThucHien_TyLe;
                            //            I4_6 = item.CongDon_VonCap;
                            //            I4_7 = item.CongDon_GiaiNgan;
                            //            I4_8 = item.CongDon_TyLe;
                            //        }
                            //        if (item.tt == "5")
                            //        {
                            //            I5_1 = item.TongMucDauTu;
                            //            I5_2 = item.KeHoachVon;
                            //            I5_3 = item.ThucHien_VonCap;
                            //            I5_4 = item.ThucHien_GiaiNgan;
                            //            I5_5 = item.ThucHien_TyLe;
                            //            I5_6 = item.CongDon_VonCap;
                            //            I5_7 = item.CongDon_GiaiNgan;
                            //            I5_8 = item.CongDon_TyLe;
                            //        }
                            //    }    
                            //}

                            

                            dataTableI = step2.form.data.d1;
                            //dataTableTotalI = step2.form.data.total;
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data3 = step3.form.data.d;

                            II_0_1 = data3[0].TrongNam_SoLuongDuAn;
                            II_0_2 = data3[0].TrongNam_TongVon;
                            II_0_3 = data3[0].TrongNam_DienTich;
                            II_0_4 = data3[0].CongDon_SoLuongDuAn;
                            II_0_5 = data3[0].CongDon_TongVon;
                            II_0_6 = data3[0].CongDon_DienTich;
                            II_0_7 = data3[0].CongDon_TyLe;

                            II_1_1 = data3[1].TrongNam_SoLuongDuAn;
                            II_1_2 = data3[1].TrongNam_TongVon;
                            II_1_3 = data3[1].TrongNam_DienTich;
                            II_1_4 = data3[1].CongDon_SoLuongDuAn;
                            II_1_5 = data3[1].CongDon_TongVon;
                            II_1_6 = data3[1].CongDon_DienTich;
                            II_1_7 = data3[1].CongDon_TyLe;

                            II_1_1_1 = data3[2].TrongNam_SoLuongDuAn;
                            II_1_1_2 = data3[2].TrongNam_TongVon;
                            II_1_1_3 = data3[2].TrongNam_DienTich;
                            II_1_1_4 = data3[2].CongDon_SoLuongDuAn;
                            II_1_1_5 = data3[2].CongDon_TongVon;
                            II_1_1_6 = data3[2].CongDon_DienTich;
                            II_1_1_7 = data3[2].CongDon_TyLe;

                            II_1_2_1 = data3[3].TrongNam_SoLuongDuAn;
                            II_1_2_2 = data3[3].TrongNam_TongVon;
                            II_1_2_3 = data3[3].TrongNam_DienTich;
                            II_1_2_4 = data3[3].CongDon_SoLuongDuAn;
                            II_1_2_5 = data3[3].CongDon_TongVon;
                            II_1_2_6 = data3[3].CongDon_DienTich;
                            II_1_2_7 = data3[3].CongDon_TyLe;

                            II_1_3_1 = data3[4].TrongNam_SoLuongDuAn;
                            II_1_3_2 = data3[4].TrongNam_TongVon;
                            II_1_3_3 = data3[4].TrongNam_DienTich;
                            II_1_3_4 = data3[4].CongDon_SoLuongDuAn;
                            II_1_3_5 = data3[4].CongDon_TongVon;
                            II_1_3_6 = data3[4].CongDon_DienTich;
                            II_1_3_7 = data3[4].CongDon_TyLe;

                            II_1_4_1 = data3[5].TrongNam_SoLuongDuAn;
                            II_1_4_2 = data3[5].TrongNam_TongVon;
                            II_1_4_3 = data3[5].TrongNam_DienTich;
                            II_1_4_4 = data3[5].CongDon_SoLuongDuAn;
                            II_1_4_5 = data3[5].CongDon_TongVon;
                            II_1_4_6 = data3[5].CongDon_DienTich;
                            II_1_4_7 = data3[5].CongDon_TyLe;

                            II_2_1 = data3[6].TrongNam_SoLuongDuAn;
                            II_2_2 = data3[6].TrongNam_TongVon;
                            II_2_3 = data3[6].TrongNam_DienTich;
                            II_2_4 = data3[6].CongDon_SoLuongDuAn;
                            II_2_5 = data3[6].CongDon_TongVon;
                            II_2_6 = data3[6].CongDon_DienTich;
                            II_2_7 = data3[6].CongDon_TyLe;

                            II_2_1_1 = data3[7].TrongNam_SoLuongDuAn;
                            II_2_1_2 = data3[7].TrongNam_TongVon;
                            II_2_1_3 = data3[7].TrongNam_DienTich;
                            II_2_1_4 = data3[7].CongDon_SoLuongDuAn;
                            II_2_1_5 = data3[7].CongDon_TongVon;
                            II_2_1_6 = data3[7].CongDon_DienTich;
                            II_2_1_7 = data3[7].CongDon_TyLe;

                            II_2_2_1 = data3[8].TrongNam_SoLuongDuAn;
                            II_2_2_2 = data3[8].TrongNam_TongVon;
                            II_2_2_3 = data3[8].TrongNam_DienTich;
                            II_2_2_4 = data3[8].CongDon_SoLuongDuAn;
                            II_2_2_5 = data3[8].CongDon_TongVon;
                            II_2_2_6 = data3[8].CongDon_DienTich;
                            II_2_2_7 = data3[8].CongDon_TyLe;

                            II_2_3_1 = data3[9].TrongNam_SoLuongDuAn;
                            II_2_3_2 = data3[9].TrongNam_TongVon;
                            II_2_3_3 = data3[9].TrongNam_DienTich;
                            II_2_3_4 = data3[9].CongDon_SoLuongDuAn;
                            II_2_3_5 = data3[9].CongDon_TongVon;
                            II_2_3_6 = data3[9].CongDon_DienTich;
                            II_2_3_7 = data3[9].CongDon_TyLe;

                            II_2_4_1 = data3[10].TrongNam_SoLuongDuAn;
                            II_2_4_2 = data3[10].TrongNam_TongVon;
                            II_2_4_3 = data3[10].TrongNam_DienTich;
                            II_2_4_4 = data3[10].CongDon_SoLuongDuAn;
                            II_2_4_5 = data3[10].CongDon_TongVon;
                            II_2_4_6 = data3[10].CongDon_DienTich;
                            II_2_4_7 = data3[10].CongDon_TyLe;
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data4 = step4.form.data.d;

                            foreach(var item in data4)
                            {
                                if(item != null)
                                {
                                    if(item.tt == "1")
                                    {
                                        III_1_1 = item.SoLuongDuAn;
                                        III_1_2 = item.TongVon;
                                        III_1_3 = item.TongVonGiaiNgan;
                                        III_1_4 = item.TyLe;
                                        III_1_5 = item.GhiChu;
                                    }
                                    else if (item.tt == "2")
                                    {
                                        III_2_1 = item.SoLuongDuAn;
                                        III_2_2 = item.TongVon;
                                        III_2_3 = item.TongVonGiaiNgan;
                                        III_2_4 = item.TyLe;
                                        III_2_5 = item.GhiChu;
                                    }
                                    else if (item.tt == "3")
                                    {
                                        III_3_1 = item.SoLuongDuAn;
                                        III_3_2 = item.TongVon;
                                        III_3_3 = item.TongVonGiaiNgan;
                                        III_3_4 = item.TyLe;
                                        III_3_5 = item.GhiChu;
                                    }
                                    else if (item.tt == "4")
                                    {
                                        III_4_1 = item.SoLuongDuAn;
                                        III_4_2 = item.TongVon;
                                        III_4_3 = item.TongVonGiaiNgan;
                                        III_4_4 = item.TyLe;
                                        III_4_5 = item.GhiChu;
                                    }
                                    else if (item.NoiDung == "Tổng cộng")
                                    {
                                         III_5_1 = item.SoLuongDuAn;
                                         III_5_2 = item.TongVon;
                                         III_5_3 = item.TongVonGiaiNgan;
                                         III_5_4 = item.TyLe;
                                        III_5_5 = item.GhiChu; 
                                    }
                                }    
                            }
                            
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {
                            dynamic? data5 = step5.form.data.d;

                            IV1_1 = data5[0].SoLieuTrongNam;
                            IV1_2 = data5[0].SoLieuCongDon;

                            IV2_1 = data5[1].SoLieuTrongNam;
                            IV2_2 = data5[1].SoLieuCongDon;

                            IV3_1 = data5[2].SoLieuTrongNam;
                            IV3_2 = data5[2].SoLieuCongDon;

                            IV4_1 = data5[3].SoLieuTrongNam;
                            IV4_2 = data5[3].SoLieuCongDon;

                            IV5_1 = data5[4].SoLieuTrongNam;
                            IV5_2 = data5[4].SoLieuCongDon;

                            IV6_1 = data5[5].SoLieuTrongNam;
                            IV6_2 = data5[5].SoLieuCongDon;

                            IV7_1 = data5[6].SoLieuTrongNam;
                            IV7_2 = data5[6].SoLieuCongDon;

                            IV8_1 = data5[7].SoLieuTrongNam;
                            IV8_2 = data5[7].SoLieuCongDon;

                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 6)
                    {
                        step6 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step6 != null)
                        {
                            dynamic? data6 = step6.form.data.d;

                            V_1_1 = data6[0].SoLieuBaoCao;
                            V_1_2 = data6[1].SoLieuBaoCao;
                            V_1_3 = data6[2].SoLieuBaoCao;
                            V_1_4 = data6[3].SoLieuBaoCao;
                                       
                            V_2_1 = data6[4].SoLieuBaoCao;
                            V_2_2 = data6[5].SoLieuBaoCao;
                            V_2_3 = data6[6].SoLieuBaoCao;
                            V_2_4 = data6[7].SoLieuBaoCao;

                            TONG = data6[8].SoLieuBaoCao;


                        }
                    }
                }
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().AlignLeft().PaddingBottom(10).Text("9. Báo cáo kết quả hoạt động của các Khu công nghệ cao").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(30);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 09a/KCNC").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("KẾT QUẢ HOẠT ĐỘNG CỦA KHU CÔNG NGHỆ CAO").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                            //row 2
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("Ban quản lý Khu Công nghệ cao...").FontSize(14);

                            //row 3
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(13);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(13);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).Text("1. Tình hình thực hiện vốn đầu tư xây dựng hạ tầng kỹ thuật").Bold().FontSize(14);
                        column.Item().AlignRight().Text("Đơn vị tính: triệu đồng").Italic().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockTT).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Tên dự án, công trình").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockItem).Text(text => {
                                text.Span("Tổng nước đầu tư").Bold().FontSize(14);
                                text.Span("(NSNN/vốn khác)").Italic().FontSize(14);
                            });
                            table.Cell().Row(1).Column(4).RowSpan(2).Element(BlockHead).Text(text => {
                                text.Span("Kế hoạch vốn năm báo cáo").Bold().FontSize(14);
                                text.Span("(NSNN/vốn khác)").Italic().FontSize(14);
                            });
                            table.Cell().Row(1).Column(5).ColumnSpan(3).Element(BlockHead).Text(text => {
                                text.Span("Số liệu thực hiện trong năm báo cáo").Bold().FontSize(14);
                                text.Span("(NSNN/vốn khác)").Italic().FontSize(14);
                            });
                            table.Cell().Row(1).Column(8).ColumnSpan(3).Element(BlockHead).Text(text => {
                                text.Span("Số liệu cộng dồn từ đầu (21) đến cuối năm báo cáo").Bold().FontSize(14);
                                text.Span("(NSNN/vốn khác)").Italic().FontSize(14);
                            });

                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Vốn cấp").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Giải ngân").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("% giải ngân/vốn cấp").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("Vốn cấp").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(9).Element(BlockHead).Text("Giải ngân").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(10).Element(BlockHead).Text("% giải ngân/vốn cấp").Bold().Italic().FontSize(14);

                          

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTableI)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;

                                    string Index = item.tt ?? "";
                                    string TenDuAn = item.TenDuAn ?? "";
                                    string TongMucDauTu = item.TongMucDauTu ?? "";
                                    string KeHoachVon = item.KeHoachVon ?? "";
                                    string ThucHien_VonCap = item.ThucHien_VonCap ?? "";
                                    string ThucHien_GiaiNgan = item.ThucHien_GiaiNgan ?? "";
                                    string ThucHien_TyLe = item.ThucHien_TyLe ?? "";
                                    string CongDon_VonCap = item.CongDon_VonCap ?? "";
                                    string CongDon_GiaiNgan = item.CongDon_GiaiNgan ?? "";
                                    string CongDon_TyLe = item.CongDon_TyLe ?? "";

                                    if (Index == "I" || Index == "II" || TenDuAn == "Tổng cộng")
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(Index).FontSize(14).Bold();
                                        table.Cell().Row(rowIndex).Column(2).Element(BlockTT).Text(TenDuAn).FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(Index).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(BlockTT).Text(TenDuAn).FontSize(14);
                                    }
                              
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockTT).Text(TongMucDauTu).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(KeHoachVon).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockTT).Text(ThucHien_VonCap).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockTT).Text(ThucHien_GiaiNgan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(ThucHien_TyLe).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockTT).Text(CongDon_VonCap).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockTT).Text(CongDon_GiaiNgan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(BlockTT).Text(CongDon_TyLe).FontSize(14);

                                    i++;
                                }
                            }
                                                   
                        });
                        column.Item().AlignLeft().PaddingTop(40).PaddingBottom(10).Text("2. Tình hình thu hút đầu tư").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).ColumnSpan(3).Element(BlockHead).Text("Số liệu trong năm báo cáo").Bold().FontSize(14);
                            table.Cell().Row(1).Column(6).ColumnSpan(4).Element(BlockHead).Text("Số liệu cộng dồn từ đầu (22) đến cuối năm báo cáo").Bold().FontSize(14);

                            table.Cell().Row(2).Column(3).Element(BlockHead).Text("Số lượng dự án").Bold().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockHead).Text(text => {
                                text.Span("Tổng vốn đăng ký").Bold().FontSize(14);
                                text.Span("(Triệu USD)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text(text => {
                                text.Span("Diện tích đất").Bold().FontSize(14);
                                text.Span("(Ha)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Số lượng dự án").Bold().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text(text => {
                                text.Span("Tổng vốn đăng ký").Bold().FontSize(14);
                                text.Span("(Triệu USD)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text(text => {
                                text.Span("Diện tích đất").Bold().FontSize(14);
                                text.Span("(Ha)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(9).Element(BlockHead).Text(text => {
                                text.Span("Tỷ lệ lắp đầy (%)").Bold().FontSize(14);
                            });

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("(1)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockTT).Text("(2)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text("(3)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text("(4)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text("(5)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockTT).Text("(6)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(7).Element(BlockTT).Text("(7)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(8).Element(BlockTT).Text("(8)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(9).Element(BlockTT).Text("(9)").Bold().FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockTT).Text("Dự án còn hiệu lực (23)").Bold().FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(II_0_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(II_0_2).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(II_0_3).FontSize(14);
                            table.Cell().Row(4).Column(6).Element(BlockTT).Text(II_0_4).FontSize(14);
                            table.Cell().Row(4).Column(7).Element(BlockTT).Text(II_0_5).FontSize(14);
                            table.Cell().Row(4).Column(8).Element(BlockTT).Text(II_0_6).FontSize(14);
                            table.Cell().Row(4).Column(9).Element(BlockTT).Text(II_0_7).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("1").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockTT).Text("Dự án trong nước").Italic().Bold().FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(II_1_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(II_1_2).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(II_1_3).FontSize(14);
                            table.Cell().Row(5).Column(6).Element(BlockTT).Text(II_1_4).FontSize(14);
                            table.Cell().Row(5).Column(7).Element(BlockTT).Text(II_1_5).FontSize(14);
                            table.Cell().Row(5).Column(8).Element(BlockTT).Text(II_1_6).FontSize(14);
                            table.Cell().Row(5).Column(9).Element(BlockTT).Text(II_1_7).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("+ Dự án sản xuất").Italic().FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(II_1_1_1).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(II_1_1_2).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(II_1_1_3).FontSize(14);
                            table.Cell().Row(6).Column(6).Element(BlockTT).Text(II_1_1_4).FontSize(14);
                            table.Cell().Row(6).Column(7).Element(BlockTT).Text(II_1_1_5).FontSize(14);
                            table.Cell().Row(6).Column(8).Element(BlockTT).Text(II_1_1_6).FontSize(14);
                            table.Cell().Row(6).Column(9).Element(BlockTT).Text(II_1_1_7).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("+ Dự án R&D").Italic().FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(II_1_2_1).FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(II_1_2_2).FontSize(14);
                            table.Cell().Row(7).Column(5).Element(BlockTT).Text(II_1_2_3).FontSize(14);
                            table.Cell().Row(7).Column(6).Element(BlockTT).Text(II_1_2_4).FontSize(14);
                            table.Cell().Row(7).Column(7).Element(BlockTT).Text(II_1_2_5).FontSize(14);
                            table.Cell().Row(7).Column(8).Element(BlockTT).Text(II_1_2_6).FontSize(14);
                            table.Cell().Row(7).Column(9).Element(BlockTT).Text(II_1_2_7).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("+ Dự án đào tạo").Italic().FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(II_1_3_1).FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(II_1_3_2).FontSize(14);
                            table.Cell().Row(8).Column(5).Element(BlockTT).Text(II_1_3_3).FontSize(14);
                            table.Cell().Row(8).Column(6).Element(BlockTT).Text(II_1_3_4).FontSize(14);
                            table.Cell().Row(8).Column(7).Element(BlockTT).Text(II_1_3_5).FontSize(14);
                            table.Cell().Row(8).Column(8).Element(BlockTT).Text(II_1_3_6).FontSize(14);
                            table.Cell().Row(8).Column(9).Element(BlockTT).Text(II_1_3_7).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text("+ Dự án khác").Italic().FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text(II_1_4_1).FontSize(14);
                            table.Cell().Row(9).Column(4).Element(BlockTT).Text(II_1_4_2).FontSize(14);
                            table.Cell().Row(9).Column(5).Element(BlockTT).Text(II_1_4_3).FontSize(14);
                            table.Cell().Row(9).Column(6).Element(BlockTT).Text(II_1_4_4).FontSize(14);
                            table.Cell().Row(9).Column(7).Element(BlockTT).Text(II_1_4_5).FontSize(14);
                            table.Cell().Row(9).Column(8).Element(BlockTT).Text(II_1_4_6).FontSize(14);
                            table.Cell().Row(9).Column(9).Element(BlockTT).Text(II_1_4_7).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("2").Bold().FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text("Dự án FDI").Italic().Bold().FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text(II_2_1).FontSize(14);
                            table.Cell().Row(10).Column(4).Element(BlockTT).Text(II_2_2).FontSize(14);
                            table.Cell().Row(10).Column(5).Element(BlockTT).Text(II_2_3).FontSize(14);
                            table.Cell().Row(10).Column(6).Element(BlockTT).Text(II_2_4).FontSize(14);
                            table.Cell().Row(10).Column(7).Element(BlockTT).Text(II_2_5).FontSize(14);
                            table.Cell().Row(10).Column(8).Element(BlockTT).Text(II_2_6).FontSize(14);
                            table.Cell().Row(10).Column(9).Element(BlockTT).Text(II_2_7).FontSize(14);

                            table.Cell().Row(11).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(11).Column(2).Element(BlockItem).Text("+ Dự án sản xuất").Italic().FontSize(14);
                            table.Cell().Row(11).Column(3).Element(BlockTT).Text(II_2_1_1).FontSize(14);
                            table.Cell().Row(11).Column(4).Element(BlockTT).Text(II_2_1_2).FontSize(14);
                            table.Cell().Row(11).Column(5).Element(BlockTT).Text(II_2_1_3).FontSize(14);
                            table.Cell().Row(11).Column(6).Element(BlockTT).Text(II_2_1_4).FontSize(14);
                            table.Cell().Row(11).Column(7).Element(BlockTT).Text(II_2_1_5).FontSize(14);
                            table.Cell().Row(11).Column(8).Element(BlockTT).Text(II_2_1_6).FontSize(14);
                            table.Cell().Row(11).Column(9).Element(BlockTT).Text(II_2_1_7).FontSize(14);

                            table.Cell().Row(12).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(12).Column(2).Element(BlockItem).Text("+ Dự án R&D").Italic().FontSize(14);
                            table.Cell().Row(12).Column(3).Element(BlockTT).Text(II_2_2_1).FontSize(14);
                            table.Cell().Row(12).Column(4).Element(BlockTT).Text(II_2_2_2).FontSize(14);
                            table.Cell().Row(12).Column(5).Element(BlockTT).Text(II_2_2_3).FontSize(14);
                            table.Cell().Row(12).Column(6).Element(BlockTT).Text(II_2_2_4).FontSize(14);
                            table.Cell().Row(12).Column(7).Element(BlockTT).Text(II_2_2_5).FontSize(14);
                            table.Cell().Row(12).Column(8).Element(BlockTT).Text(II_2_2_6).FontSize(14);
                            table.Cell().Row(12).Column(9).Element(BlockTT).Text(II_2_2_7).FontSize(14);

                            table.Cell().Row(13).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(13).Column(2).Element(BlockItem).Text("+ Dự án đào tạo").Italic().FontSize(14);
                            table.Cell().Row(13).Column(3).Element(BlockTT).Text(II_2_3_1).FontSize(14);
                            table.Cell().Row(13).Column(4).Element(BlockTT).Text(II_2_3_2).FontSize(14);
                            table.Cell().Row(13).Column(5).Element(BlockTT).Text(II_2_3_3).FontSize(14);
                            table.Cell().Row(13).Column(6).Element(BlockTT).Text(II_2_3_4).FontSize(14);
                            table.Cell().Row(13).Column(7).Element(BlockTT).Text(II_2_3_5).FontSize(14);
                            table.Cell().Row(13).Column(8).Element(BlockTT).Text(II_2_3_6).FontSize(14);
                            table.Cell().Row(13).Column(9).Element(BlockTT).Text(II_2_3_7).FontSize(14);

                            table.Cell().Row(14).Column(1).Element(BlockItem).Text("").Bold().FontSize(14);
                            table.Cell().Row(14).Column(2).Element(BlockItem).Text("+ Dự án khác").Italic().FontSize(14);
                            table.Cell().Row(14).Column(3).Element(BlockTT).Text(II_2_4_1).FontSize(14);
                            table.Cell().Row(14).Column(4).Element(BlockTT).Text(II_2_4_2).FontSize(14);
                            table.Cell().Row(14).Column(5).Element(BlockTT).Text(II_2_4_3).FontSize(14);
                            table.Cell().Row(14).Column(6).Element(BlockTT).Text(II_2_4_4).FontSize(14);
                            table.Cell().Row(14).Column(7).Element(BlockTT).Text(II_2_4_5).FontSize(14);
                            table.Cell().Row(14).Column(8).Element(BlockTT).Text(II_2_4_6).FontSize(14);
                            table.Cell().Row(14).Column(9).Element(BlockTT).Text(II_2_4_7).FontSize(14);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(30).Text("3. Tình hình triển khai các dự án đầu tư").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).ColumnSpan(4).Element(BlockHead).Text("Số liệu tổng hợp đến cuối năm báo cáo").Bold().FontSize(14);
                            table.Cell().Row(1).Column(7).RowSpan(2).Element(BlockHead).Text("Ghi chú").Bold().FontSize(14);

                            table.Cell().Row(2).Column(3).Element(BlockHead).Text("Số lượng dự án").Bold().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockHead).Text(text => {
                                text.Span("Tổng vốn đăng ký").Bold().FontSize(14);
                                text.Span("(Triệu USD)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text(text => {
                                text.Span("Tổng vốn đăng ký đã giải ngân").Bold().FontSize(14);
                                text.Span("(Triệu USD)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text(text => {
                                text.Span("Tỷ lệ % vốn giải ngân/vốn đăng ký").Bold().FontSize(14);
                            });

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("(1)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockTT).Text("(2)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text("(3)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text("(4)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text("(5)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockTT).Text("(6)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(7).Element(BlockTT).Text("(7)").Bold().FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Dự án đang hoạt động").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(III_1_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(III_1_2).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(III_1_3).FontSize(14);
                            table.Cell().Row(4).Column(6).Element(BlockTT).Text(III_1_4).FontSize(14);
                            table.Cell().Row(4).Column(7).Element(BlockTT).Text(III_1_5).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Dự án đang xây dựng").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(III_2_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(III_2_2).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(III_2_3).FontSize(14);
                            table.Cell().Row(5).Column(6).Element(BlockTT).Text(III_2_4).FontSize(14);
                            table.Cell().Row(5).Column(7).Element(BlockTT).Text(III_2_5).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Dự án đang thực hiện các thủ tục xây dựng").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(III_3_1).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(III_3_2).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(III_3_3).FontSize(14);
                            table.Cell().Row(6).Column(6).Element(BlockTT).Text(III_3_4).FontSize(14);
                            table.Cell().Row(6).Column(7).Element(BlockTT).Text(III_3_5).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Dự án chậm triển khai").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(III_4_1).FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(III_4_2).FontSize(14);
                            table.Cell().Row(7).Column(5).Element(BlockTT).Text(III_4_3).FontSize(14);
                            table.Cell().Row(7).Column(6).Element(BlockTT).Text(III_4_4).FontSize(14);
                            table.Cell().Row(7).Column(7).Element(BlockTT).Text(III_4_5).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Tổng cộng").Bold().FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(III_5_1).FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(III_5_2).FontSize(14);
                            table.Cell().Row(8).Column(5).Element(BlockTT).Text(III_5_3).FontSize(14);
                            table.Cell().Row(8).Column(6).Element(BlockTT).Text(III_5_4).FontSize(14);
                            table.Cell().Row(8).Column(7).Element(BlockTT).Text(III_5_5).FontSize(14);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(30).Text("4. Tình hình hoạt động các dự án đầu tư").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).Element(BlockTT).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockTT).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockTT).Text("Số liệu trong năm báo cáo").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockTT).Text("Số liệu cộng dồn từ đầu (24) đến cuối năm báo cáo").Bold().FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("(1)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockTT).Text("(2)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text("(3)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockTT).Text("(4)").Bold().FontSize(14);


                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("I").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Giá trị sản xuất").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(IV1_1).Bold().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(IV1_2).Bold().FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Tổng số").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(IV2_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(IV2_2).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Ước giá trị sản xuất sản phẩm công nghệ cao").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(IV3_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(IV3_2).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("II").Bold().FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Chỉ cho nguyên cứu phát triển").Bold().FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(IV4_1).Bold().FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(IV4_2).Bold().FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("III").Bold().FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Giá trị xuất nhập khẩu").Bold().FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(IV5_1).Bold().FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(IV5_2).Bold().FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Nhập khẩu").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(IV6_1).FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(IV6_2).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text("Xuất khẩu").FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text(IV7_1).FontSize(14);
                            table.Cell().Row(9).Column(4).Element(BlockTT).Text(IV7_2).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("IV").Bold().FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text("Nộp ngân sách nhà nước").Bold().FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text(IV8_1).Bold().FontSize(14);
                            table.Cell().Row(10).Column(4).Element(BlockTT).Text(IV8_2).Bold().FontSize(14);


                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(30).Text("5. Số liệu lao động").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text(text => {
                                text.Span("Số liệu đến thời điểm báo cáo").Bold().FontSize(14);
                                text.Span(" (Người)").Italic().FontSize(12);
                            });
                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("(1)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockTT).Text("(2)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text("(3)").Bold().FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("I").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Lao động Việt Nam").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(V_1_1).Bold().FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Trình độ trên đại học").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(V_1_2).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Trình độ Đại học, Cao đẳng").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(V_1_3).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Trình độ khác").Italic().FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(V_1_4).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("II").Bold().FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Lao động nước ngoài").Bold().FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(V_2_1).Bold().FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Trình độ trên đại học").Italic().FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(V_2_2).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text("Trình độ Đại học, Cao đẳng").Italic().FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text(V_2_3).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text("Trình độ khác").Italic().FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text(V_2_4).FontSize(14);

                            table.Cell().Row(11).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(11).Column(2).Element(BlockItem).Text("Tổng số").Bold().FontSize(14);
                            table.Cell().Row(11).Column(3).Element(BlockTT).Text(TONG).FontSize(14);
                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }

                        column.Item().AlignLeft().PaddingTop(30).Text("___________________________").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(21) Được hiểu là từ thời điểm khởi công dự án đầu tư xây dựng Khu Công nghệ cao").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(22) Được hiểu là từ thời điểm bắt đầu dự án đầu tư").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(23) Là các dự án đã chấp thuận chủ trương đầu tư/cấp Giấy chứng nhận đăng ký đầu tư còn hiệu lực" +
                            " (đồng thời cập nhật số liệu nếu vốn đăng ký thay đổi).").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(24) Được hiểu là từ thời điểm bắt đầu dự án đầu tư").Italic().FontSize(11);
                    });


                    //page.Footer()
                    //    .AlignCenter()
                    //    .Text(x =>
                    //    {
                    //        x.Span("Trang ");
                    //        x.CurrentPageNumber();
                    //    });
                });
            })

    .GeneratePdf(path);
        return path;
    }

    public string XuatMau9BTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";
                //biến tĩnh
                //bảng 1
                var I1_1 = "";
                var I1_2 = "";
                var I1_3 = "";
                var I1_4 = "";
                var I1_5 = "";
                var I1_6 = "";
                var I1_7 = "";
                var I1_8 = "";

                var I2_1 = "";
                var I2_2 = "";
                var I2_3 = "";
                var I2_4 = "";
                var I2_5 = "";
                var I2_6 = "";
                var I2_7 = "";
                var I2_8 = "";

                var I3_1 = "";
                var I3_2 = "";
                var I3_3 = "";
                var I3_4 = "";
                var I3_5 = "";
                var I3_6 = "";
                var I3_7 = "";
                var I3_8 = "";

                var I4_1 = "";
                var I4_2 = "";
                var I4_3 = "";
                var I4_4 = "";
                var I4_5 = "";
                var I4_6 = "";
                var I4_7 = "";
                var I4_8 = "";

                var I5_1 = "";
                var I5_2 = "";
                var I5_3 = "";
                var I5_4 = "";
                var I5_5 = "";
                var I5_6 = "";
                var I5_7 = "";
                var I5_8 = "";
                //bảng 2
                var II_0_1 = "";
                var II_0_2 = "";
                var II_0_3 = "";
                var II_0_4 = "";
                var II_0_5 = "";
                var II_0_6 = "";
                var II_0_7 = "";

                var II_1_1 = "";
                var II_1_2 = "";
                var II_1_3 = "";
                var II_1_4 = "";
                var II_1_5 = "";
                var II_1_6 = "";
                var II_1_7 = "";

                var II_1_1_1 = "";
                var II_1_1_2 = "";
                var II_1_1_3 = "";
                var II_1_1_4 = "";
                var II_1_1_5 = "";
                var II_1_1_6 = "";
                var II_1_1_7 = "";

                var II_1_2_1 = "";
                var II_1_2_2 = "";
                var II_1_2_3 = "";
                var II_1_2_4 = "";
                var II_1_2_5 = "";
                var II_1_2_6 = "";
                var II_1_2_7 = "";

                var II_1_3_1 = "";
                var II_1_3_2 = "";
                var II_1_3_3 = "";
                var II_1_3_4 = "";
                var II_1_3_5 = "";
                var II_1_3_6 = "";
                var II_1_3_7 = "";

                var II_1_4_1 = "";
                var II_1_4_2 = "";
                var II_1_4_3 = "";
                var II_1_4_4 = "";
                var II_1_4_5 = "";
                var II_1_4_6 = "";
                var II_1_4_7 = "";

                var II_2_1 = "";
                var II_2_2 = "";
                var II_2_3 = "";
                var II_2_4 = "";
                var II_2_5 = "";
                var II_2_6 = "";
                var II_2_7 = "";

                var II_2_1_1 = "";
                var II_2_1_2 = "";
                var II_2_1_3 = "";
                var II_2_1_4 = "";
                var II_2_1_5 = "";
                var II_2_1_6 = "";
                var II_2_1_7 = "";

                var II_2_2_1 = "";
                var II_2_2_2 = "";
                var II_2_2_3 = "";
                var II_2_2_4 = "";
                var II_2_2_5 = "";
                var II_2_2_6 = "";
                var II_2_2_7 = "";

                var II_2_3_1 = "";
                var II_2_3_2 = "";
                var II_2_3_3 = "";
                var II_2_3_4 = "";
                var II_2_3_5 = "";
                var II_2_3_6 = "";
                var II_2_3_7 = "";

                var II_2_4_1 = "";
                var II_2_4_2 = "";
                var II_2_4_3 = "";
                var II_2_4_4 = "";
                var II_2_4_5 = "";
                var II_2_4_6 = "";
                var II_2_4_7 = "";

                //bảng 3
                var III_1_1 = "";
                var III_1_2 = "";
                var III_1_3 = "";
                var III_1_4 = "";
                var III_1_5 = "";

                var III_2_1 = "";
                var III_2_2 = "";
                var III_2_3 = "";
                var III_2_4 = "";
                var III_2_5 = "";

                var III_3_1 = "";
                var III_3_2 = "";
                var III_3_3 = "";
                var III_3_4 = "";
                var III_3_5 = "";

                var III_4_1 = "";
                var III_4_2 = "";
                var III_4_3 = "";
                var III_4_4 = "";
                var III_4_5 = "";

                var III_5_1 = "";
                var III_5_2 = "";
                var III_5_3 = "";
                var III_5_4 = "";
                var III_5_5 = "";

                //bảng 4
                var IV1_1 = "";
                var IV1_2 = "";

                var IV2_1 = "";
                var IV2_2 = "";

                var IV3_1 = "";
                var IV3_2 = "";

                var IV4_1 = "";
                var IV4_2 = "";

                var IV5_1 = "";
                var IV5_2 = "";

                var IV6_1 = "";
                var IV6_2 = "";

                var IV7_1 = "";
                var IV7_2 = "";

                var IV8_1 = "";
                var IV8_2 = "";


                //bảng 5
                var V_1_1 = "";
                var V_1_2 = "";
                var V_1_3 = "";
                var V_1_4 = "";

                var V_2_1 = "";
                var V_2_2 = "";
                var V_2_3 = "";
                var V_2_4 = "";
                var TONG = "";

                //

          

                dynamic dataTableI = null;
                dynamic dataTableTotalI = null;

                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;
                dynamic? step6;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;


                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_nam = DateTime.Now.Year.ToString();
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {                         
                            dataTableI = step2.form.data.d1;
                           
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data3 = step3.form.data.d;

                            II_0_1 = data3[0].TrongNam_SoLuongDuAn;
                            II_0_2 = data3[0].TrongNam_TongVon;
                            II_0_3 = data3[0].TrongNam_DienTich;
                            II_0_4 = data3[0].CongDon_SoLuongDuAn;
                            II_0_5 = data3[0].CongDon_TongVon;
                            II_0_6 = data3[0].CongDon_DienTich;
                            II_0_7 = data3[0].CongDon_TyLe;

                            II_1_1 = data3[1].TrongNam_SoLuongDuAn;
                            II_1_2 = data3[1].TrongNam_TongVon;
                            II_1_3 = data3[1].TrongNam_DienTich;
                            II_1_4 = data3[1].CongDon_SoLuongDuAn;
                            II_1_5 = data3[1].CongDon_TongVon;
                            II_1_6 = data3[1].CongDon_DienTich;
                            II_1_7 = data3[1].CongDon_TyLe;

                            II_1_1_1 = data3[2].TrongNam_SoLuongDuAn;
                            II_1_1_2 = data3[2].TrongNam_TongVon;
                            II_1_1_3 = data3[2].TrongNam_DienTich;
                            II_1_1_4 = data3[2].CongDon_SoLuongDuAn;
                            II_1_1_5 = data3[2].CongDon_TongVon;
                            II_1_1_6 = data3[2].CongDon_DienTich;
                            II_1_1_7 = data3[2].CongDon_TyLe;

                            II_1_2_1 = data3[3].TrongNam_SoLuongDuAn;
                            II_1_2_2 = data3[3].TrongNam_TongVon;
                            II_1_2_3 = data3[3].TrongNam_DienTich;
                            II_1_2_4 = data3[3].CongDon_SoLuongDuAn;
                            II_1_2_5 = data3[3].CongDon_TongVon;
                            II_1_2_6 = data3[3].CongDon_DienTich;
                            II_1_2_7 = data3[3].CongDon_TyLe;

                            II_1_3_1 = data3[4].TrongNam_SoLuongDuAn;
                            II_1_3_2 = data3[4].TrongNam_TongVon;
                            II_1_3_3 = data3[4].TrongNam_DienTich;
                            II_1_3_4 = data3[4].CongDon_SoLuongDuAn;
                            II_1_3_5 = data3[4].CongDon_TongVon;
                            II_1_3_6 = data3[4].CongDon_DienTich;
                            II_1_3_7 = data3[4].CongDon_TyLe;

                            II_1_4_1 = data3[5].TrongNam_SoLuongDuAn;
                            II_1_4_2 = data3[5].TrongNam_TongVon;
                            II_1_4_3 = data3[5].TrongNam_DienTich;
                            II_1_4_4 = data3[5].CongDon_SoLuongDuAn;
                            II_1_4_5 = data3[5].CongDon_TongVon;
                            II_1_4_6 = data3[5].CongDon_DienTich;
                            II_1_4_7 = data3[5].CongDon_TyLe;

                            II_2_1 = data3[6].TrongNam_SoLuongDuAn;
                            II_2_2 = data3[6].TrongNam_TongVon;
                            II_2_3 = data3[6].TrongNam_DienTich;
                            II_2_4 = data3[6].CongDon_SoLuongDuAn;
                            II_2_5 = data3[6].CongDon_TongVon;
                            II_2_6 = data3[6].CongDon_DienTich;
                            II_2_7 = data3[6].CongDon_TyLe;


                            II_2_1_1 = data3[6].TrongNam_SoLuongDuAn;
                            II_2_1_2 = data3[6].TrongNam_TongVon;
                            II_2_1_3 = data3[6].TrongNam_DienTich;
                            II_2_1_4 = data3[6].CongDon_SoLuongDuAn;
                            II_2_1_5 = data3[6].CongDon_TongVon;
                            II_2_1_6 = data3[6].CongDon_DienTich;
                            II_2_1_7 = data3[6].CongDon_TyLe;


                            II_2_2_1 = data3[7].TrongNam_SoLuongDuAn;
                            II_2_2_2 = data3[7].TrongNam_TongVon;
                            II_2_2_3 = data3[7].TrongNam_DienTich;
                            II_2_2_4 = data3[7].CongDon_SoLuongDuAn;
                            II_2_2_5 = data3[7].CongDon_TongVon;
                            II_2_2_6 = data3[7].CongDon_DienTich;
                            II_2_2_7 = data3[7].CongDon_TyLe;

                            II_2_3_1 = data3[8].TrongNam_SoLuongDuAn;
                            II_2_3_2 = data3[8].TrongNam_TongVon;
                            II_2_3_3 = data3[8].TrongNam_DienTich;
                            II_2_3_4 = data3[8].CongDon_SoLuongDuAn;
                            II_2_3_5 = data3[8].CongDon_TongVon;
                            II_2_3_6 = data3[8].CongDon_DienTich;
                            II_2_3_7 = data3[8].CongDon_TyLe;

                            II_2_4_1 = data3[9].TrongNam_SoLuongDuAn;
                            II_2_4_2 = data3[9].TrongNam_TongVon;
                            II_2_4_3 = data3[9].TrongNam_DienTich;
                            II_2_4_4 = data3[9].CongDon_SoLuongDuAn;
                            II_2_4_5 = data3[9].CongDon_TongVon;
                            II_2_4_6 = data3[9].CongDon_DienTich;
                            II_2_4_7 = data3[9].CongDon_TyLe;

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data4 = step4.form.data.d;

                            foreach (var item in data4)
                            {
                                if (item != null)
                                {
                                    if(item.tt == "1")
                                    {
                                        III_1_1 = item.SoLuongDuAn;
                                        III_1_2 = item.TongVon;
                                        III_1_3 = item.TongVonGiaiNgan;
                                        III_1_4 = item.TyLe;
                                        III_1_5 = item.GhiChu;
                                    }
                                    else if (item.tt == "2")
                                    {
                                        III_2_1 = item.SoLuongDuAn;
                                        III_2_2 = item.TongVon;
                                        III_2_3 = item.TongVonGiaiNgan;
                                        III_2_4 = item.TyLe;
                                        III_2_5 = item.GhiChu;
                                    }
                                    else if (item.tt == "3")
                                    {
                                        III_3_1 = item.SoLuongDuAn;
                                        III_3_2 = item.TongVon;
                                        III_3_3 = item.TongVonGiaiNgan;
                                        III_3_4 = item.TyLe;
                                        III_3_5 = item.GhiChu;
                                    }
                                    else if (item.tt == "4")
                                    {
                                        III_4_1 = item.SoLuongDuAn;
                                        III_4_2 = item.TongVon;
                                        III_4_3 = item.TongVonGiaiNgan;
                                        III_4_4 = item.TyLe;
                                        III_4_5 = item.GhiChu;
                                    }
                                    else if (item.NoiDung == "Tổng cộng")
                                    {
                                        III_5_1 = item.SoLuongDuAn;
                                        III_5_2 = item.TongVon;
                                        III_5_3 = item.TongVonGiaiNgan;
                                        III_5_4 = item.TyLe;
                                        III_5_5 = item.GhiChu;
                                    }
                                }
                            }

                            
                         
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {
                            dynamic? data5 = step5.form.data.d;

                            IV1_1 = data5[0].SoLieuTrongNam;
                            IV1_2 = data5[0].SoLieuCongDon;

                            IV2_1 = data5[1].SoLieuTrongNam;
                            IV2_2 = data5[1].SoLieuCongDon;

                            IV3_1 = data5[2].SoLieuTrongNam;
                            IV3_2 = data5[2].SoLieuCongDon;

                            IV4_1 = data5[3].SoLieuTrongNam;
                            IV4_2 = data5[3].SoLieuCongDon;

                            IV5_1 = data5[4].SoLieuTrongNam;
                            IV5_2 = data5[4].SoLieuCongDon;

                            IV6_1 = data5[5].SoLieuTrongNam;
                            IV6_2 = data5[5].SoLieuCongDon;

                            IV7_1 = data5[6].SoLieuTrongNam;
                            IV7_2 = data5[6].SoLieuCongDon;

                            IV8_1 = data5[7].SoLieuTrongNam;
                            IV8_2 = data5[7].SoLieuCongDon;

                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 6)
                    {
                        step6 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step6 != null)
                        {
                            dynamic? data6 = step6.form.data.d;

                            V_1_1 = data6[0].SoLieuBaoCao;
                            V_1_2 = data6[1].SoLieuBaoCao;
                            V_1_3 = data6[2].SoLieuBaoCao;
                            V_1_4 = data6[3].SoLieuBaoCao;
                            V_2_1 = data6[4].SoLieuBaoCao;
                            V_2_2 = data6[5].SoLieuBaoCao;
                            V_2_3 = data6[6].SoLieuBaoCao;
                            V_2_4 = data6[7].SoLieuBaoCao;
                            TONG =  data6[8].SoLieuBaoCao;
                        }
                    }
                }
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(30);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 09b/KCNC").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("KẾT QUẢ HOẠT ĐỘNG").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                            //row 2
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("CỦA CÁC KHU CÔNG NGHỆ CAO TRÊN CẢ NƯỚC").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(14);

                            //row 3
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Thủ tướng Chính phủ").FontSize(14);

                            //row 4
                            table.Cell().Row(5).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).AlignCenter().Text("").FontSize(13);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).Text("1. Tình hình thực hiện vốn đầu tư xây dựng hạ tầng kỹ thuật").Bold().FontSize(14);
                        column.Item().AlignRight().Text("Đơn vị tính: triệu đồng").Italic().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Tên dự án, công trình").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockHead).Text(text => {
                                text.Span("Tổng nước đầu tư").Bold().FontSize(14);
                                text.Span("(ngân sách nhà nước/vốn khác)").Italic().FontSize(14);
                            });
                            table.Cell().Row(1).Column(4).RowSpan(2).Element(BlockHead).Text(text => {
                                text.Span("Kế hoạch vốn năm báo cáo").Bold().FontSize(14);
                                text.Span("(ngân sách nhà nước/vốn khác)").Italic().FontSize(14);
                            });
                            table.Cell().Row(1).Column(5).ColumnSpan(3).Element(BlockHead).Text(text => {
                                text.Span("Số liệu thực hiện trong năm báo cáo").Bold().FontSize(14);
                                text.Span("(ngân sách nhà nước/vốn khác)").Italic().FontSize(14);
                            });
                            table.Cell().Row(1).Column(8).ColumnSpan(3).Element(BlockHead).Text(text => {
                                text.Span("Số liệu cộng dồn từ đầu (25) đến cuối năm báo cáo").Bold().FontSize(14);
                                text.Span("(ngân sách nhà nước/vốn khác)").Italic().FontSize(14);
                            });

                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Vốn cấp").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Giải ngân").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("% giải ngân/vốn cấp").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("Vốn cấp").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(9).Element(BlockHead).Text("Giải ngân").Bold().Italic().FontSize(14);
                            table.Cell().Row(2).Column(10).Element(BlockHead).Text("% giải ngân/vốn cấp").Bold().Italic().FontSize(14);

                      

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTableI)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;

                                    string Index = item.tt ?? "";
                                    string TenDuAn = item.TenDuAn ?? "";
                                    string TongMucDauTu = item.TongMucDauTu ?? "";
                                    string KeHoachVon = item.KeHoachVon ?? "";
                                    string ThucHien_VonCap = item.ThucHien_VonCap ?? "";
                                    string ThucHien_GiaiNgan = item.ThucHien_GiaiNgan ?? "";
                                    string ThucHien_TyLe = item.ThucHien_TyLe ?? "";
                                    string CongDon_VonCap = item.CongDon_VonCap ?? "";
                                    string CongDon_GiaiNgan = item.CongDon_GiaiNgan ?? "";
                                    string CongDon_TyLe = item.CongDon_TyLe ?? "";

                                    if(Index == "I" || Index == "II" || TenDuAn == "Tổng cộng")
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(Index).FontSize(14).Bold();
                                        table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenDuAn).FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(Index).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(TenDuAn).FontSize(14);
                                    } 
                                    
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockTT).Text(TongMucDauTu).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(KeHoachVon).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockTT).Text(ThucHien_VonCap).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockTT).Text(ThucHien_GiaiNgan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(ThucHien_TyLe).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockTT).Text(CongDon_VonCap).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockTT).Text(CongDon_GiaiNgan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(BlockTT).Text(CongDon_TyLe).FontSize(14);

                                    i++;
                                }
                            }
                           
                         
                        });
                        column.Item().AlignLeft().PaddingTop(40).PaddingBottom(10).Text("2. Tình hình thu hút đầu tư").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).ColumnSpan(3).Element(BlockHead).Text("Số liệu trong năm báo cáo").Bold().FontSize(14);
                            table.Cell().Row(1).Column(6).ColumnSpan(4).Element(BlockHead).Text("Số liệu cộng dồn từ đầu (22) đến cuối năm báo cáo").Bold().FontSize(14);

                            table.Cell().Row(2).Column(3).Element(BlockHead).Text("Số lượng dự án").Bold().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockHead).Text(text => {
                                text.Span("Tổng vốn đăng ký").Bold().FontSize(14);
                                text.Span("(Triệu USD)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text(text => {
                                text.Span("Diện tích đất sử dụng").Bold().FontSize(14);
                                text.Span("(Ha)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Số lượng dự án").Bold().FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text(text => {
                                text.Span("Tổng vốn đăng ký").Bold().FontSize(14);
                                text.Span("(Triệu USD)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text(text => {
                                text.Span("Diện tích đất sử dụng").Bold().FontSize(14);
                                text.Span("(Ha)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(9).Element(BlockHead).Text(text => {
                                text.Span("Tỷ lệ lắp đầy (%)").Bold().FontSize(14);
                            });

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("(1)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockTT).Text("(2)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text("(3)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text("(4)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text("(5)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockTT).Text("(6)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(7).Element(BlockTT).Text("(7)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(8).Element(BlockTT).Text("(8)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(9).Element(BlockTT).Text("(9)").Bold().FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Dự án còn hiệu lực (23)").Bold().FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(II_0_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(II_0_2).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(II_0_3).FontSize(14);
                            table.Cell().Row(4).Column(6).Element(BlockTT).Text(II_0_4).FontSize(14);
                            table.Cell().Row(4).Column(7).Element(BlockTT).Text(II_0_5).FontSize(14);
                            table.Cell().Row(4).Column(8).Element(BlockTT).Text(II_0_6).FontSize(14);
                            table.Cell().Row(4).Column(9).Element(BlockTT).Text(II_0_7).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("1").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Dự án trong nước").Italic().Bold().FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(II_1_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(II_1_2).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(II_1_3).FontSize(14);
                            table.Cell().Row(5).Column(6).Element(BlockTT).Text(II_1_4).FontSize(14);
                            table.Cell().Row(5).Column(7).Element(BlockTT).Text(II_1_5).FontSize(14);
                            table.Cell().Row(5).Column(8).Element(BlockTT).Text(II_1_6).FontSize(14);
                            table.Cell().Row(5).Column(9).Element(BlockTT).Text(II_1_7).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("+ Dự án sản xuất").Italic().FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(II_1_1_1).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(II_1_1_2).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(II_1_1_3).FontSize(14);
                            table.Cell().Row(6).Column(6).Element(BlockTT).Text(II_1_1_4).FontSize(14);
                            table.Cell().Row(6).Column(7).Element(BlockTT).Text(II_1_1_5).FontSize(14);
                            table.Cell().Row(6).Column(8).Element(BlockTT).Text(II_1_1_6).FontSize(14);
                            table.Cell().Row(6).Column(9).Element(BlockTT).Text(II_1_1_7).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("+ Dự án R&D").Italic().FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(II_1_2_1).FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(II_1_2_2).FontSize(14);
                            table.Cell().Row(7).Column(5).Element(BlockTT).Text(II_1_2_3).FontSize(14);
                            table.Cell().Row(7).Column(6).Element(BlockTT).Text(II_1_2_4).FontSize(14);
                            table.Cell().Row(7).Column(7).Element(BlockTT).Text(II_1_2_5).FontSize(14);
                            table.Cell().Row(7).Column(8).Element(BlockTT).Text(II_1_2_6).FontSize(14);
                            table.Cell().Row(7).Column(9).Element(BlockTT).Text(II_1_2_7).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("+ Dự án đào tạo").Italic().FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(II_1_3_1).FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(II_1_3_2).FontSize(14);
                            table.Cell().Row(8).Column(5).Element(BlockTT).Text(II_1_3_3).FontSize(14);
                            table.Cell().Row(8).Column(6).Element(BlockTT).Text(II_1_3_4).FontSize(14);
                            table.Cell().Row(8).Column(7).Element(BlockTT).Text(II_1_3_5).FontSize(14);
                            table.Cell().Row(8).Column(8).Element(BlockTT).Text(II_1_3_6).FontSize(14);
                            table.Cell().Row(8).Column(9).Element(BlockTT).Text(II_1_3_7).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text("+ Dự án khác").Italic().FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text(II_1_4_1).FontSize(14);
                            table.Cell().Row(9).Column(4).Element(BlockTT).Text(II_1_4_2).FontSize(14);
                            table.Cell().Row(9).Column(5).Element(BlockTT).Text(II_1_4_3).FontSize(14);
                            table.Cell().Row(9).Column(6).Element(BlockTT).Text(II_1_4_4).FontSize(14);
                            table.Cell().Row(9).Column(7).Element(BlockTT).Text(II_1_4_5).FontSize(14);
                            table.Cell().Row(9).Column(8).Element(BlockTT).Text(II_1_4_6).FontSize(14);
                            table.Cell().Row(9).Column(9).Element(BlockTT).Text(II_1_4_7).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("2").Bold().FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text("Dự án FDI").Italic().Bold().FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text(II_2_1).FontSize(14);
                            table.Cell().Row(10).Column(4).Element(BlockTT).Text(II_2_2).FontSize(14);
                            table.Cell().Row(10).Column(5).Element(BlockTT).Text(II_2_3).FontSize(14);
                            table.Cell().Row(10).Column(6).Element(BlockTT).Text(II_2_4).FontSize(14);
                            table.Cell().Row(10).Column(7).Element(BlockTT).Text(II_2_5).FontSize(14);
                            table.Cell().Row(10).Column(8).Element(BlockTT).Text(II_2_6).FontSize(14);
                            table.Cell().Row(10).Column(9).Element(BlockTT).Text(II_2_7).FontSize(14);

                            table.Cell().Row(11).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(11).Column(2).Element(BlockItem).Text("+ Dự án sản xuất").Italic().FontSize(14);
                            table.Cell().Row(11).Column(3).Element(BlockTT).Text(II_2_1_1).FontSize(14);
                            table.Cell().Row(11).Column(4).Element(BlockTT).Text(II_2_1_2).FontSize(14);
                            table.Cell().Row(11).Column(5).Element(BlockTT).Text(II_2_1_3).FontSize(14);
                            table.Cell().Row(11).Column(6).Element(BlockTT).Text(II_2_1_4).FontSize(14);
                            table.Cell().Row(11).Column(7).Element(BlockTT).Text(II_2_1_5).FontSize(14);
                            table.Cell().Row(11).Column(8).Element(BlockTT).Text(II_2_1_6).FontSize(14);
                            table.Cell().Row(11).Column(9).Element(BlockTT).Text(II_2_1_7).FontSize(14);

                            table.Cell().Row(12).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(12).Column(2).Element(BlockItem).Text("+ Dự án R&D").Italic().FontSize(14);
                            table.Cell().Row(12).Column(3).Element(BlockTT).Text(II_2_2_1).FontSize(14);
                            table.Cell().Row(12).Column(4).Element(BlockTT).Text(II_2_2_2).FontSize(14);
                            table.Cell().Row(12).Column(5).Element(BlockTT).Text(II_2_2_3).FontSize(14);
                            table.Cell().Row(12).Column(6).Element(BlockTT).Text(II_2_2_4).FontSize(14);
                            table.Cell().Row(12).Column(7).Element(BlockTT).Text(II_2_2_5).FontSize(14);
                            table.Cell().Row(12).Column(8).Element(BlockTT).Text(II_2_2_6).FontSize(14);
                            table.Cell().Row(12).Column(9).Element(BlockTT).Text(II_2_2_7).FontSize(14);

                            table.Cell().Row(13).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(13).Column(2).Element(BlockItem).Text("+ Dự án đào tạo").Italic().FontSize(14);
                            table.Cell().Row(13).Column(3).Element(BlockTT).Text(II_2_3_1).FontSize(14);
                            table.Cell().Row(13).Column(4).Element(BlockTT).Text(II_2_3_2).FontSize(14);
                            table.Cell().Row(13).Column(5).Element(BlockTT).Text(II_2_3_3).FontSize(14);
                            table.Cell().Row(13).Column(6).Element(BlockTT).Text(II_2_3_4).FontSize(14);
                            table.Cell().Row(13).Column(7).Element(BlockTT).Text(II_2_3_5).FontSize(14);
                            table.Cell().Row(13).Column(8).Element(BlockTT).Text(II_2_3_6).FontSize(14);
                            table.Cell().Row(13).Column(9).Element(BlockTT).Text(II_2_3_7).FontSize(14);

                            table.Cell().Row(14).Column(1).Element(BlockTT).Text("").Bold().FontSize(14);
                            table.Cell().Row(14).Column(2).Element(BlockItem).Text("+ Dự án khác").Italic().FontSize(14);
                            table.Cell().Row(14).Column(3).Element(BlockTT).Text(II_2_4_1).FontSize(14);
                            table.Cell().Row(14).Column(4).Element(BlockTT).Text(II_2_4_2).FontSize(14);
                            table.Cell().Row(14).Column(5).Element(BlockTT).Text(II_2_4_3).FontSize(14);
                            table.Cell().Row(14).Column(6).Element(BlockTT).Text(II_2_4_4).FontSize(14);
                            table.Cell().Row(14).Column(7).Element(BlockTT).Text(II_2_4_5).FontSize(14);
                            table.Cell().Row(14).Column(8).Element(BlockTT).Text(II_2_4_6).FontSize(14);
                            table.Cell().Row(14).Column(9).Element(BlockTT).Text(II_2_4_7).FontSize(14);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(30).Text("3. Tình hình triển khai các dự án đầu tư").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).ColumnSpan(4).Element(BlockHead).Text("Số liệu tổng hợp đến cuối năm báo cáo").Bold().FontSize(14);
                            table.Cell().Row(1).Column(7).RowSpan(2).Element(BlockHead).Text("Ghi chú").Bold().FontSize(14);

                            table.Cell().Row(2).Column(3).Element(BlockHead).Text("Số lượng dự án").Bold().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockHead).Text(text => {
                                text.Span("Tổng vốn đăng ký").Bold().FontSize(14);
                                text.Span("(Triệu USD)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text(text => {
                                text.Span("Tổng vốn đăng ký đã giải ngân").Bold().FontSize(14);
                                text.Span("(Triệu USD)").Italic().FontSize(14);
                            });
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text(text => {
                                text.Span("Tỷ lệ % vốn giải ngân/vốn đăng ký").Bold().FontSize(14);
                            });

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("(1)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockTT).Text("(2)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text("(3)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text("(4)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text("(5)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockTT).Text("(6)").Bold().FontSize(14);
                            table.Cell().Row(3).Column(7).Element(BlockTT).Text("(7)").Bold().FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Dự án đang hoạt động").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(III_1_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(III_1_2).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(III_1_3).FontSize(14);
                            table.Cell().Row(4).Column(6).Element(BlockTT).Text(III_1_4).FontSize(14);
                            table.Cell().Row(4).Column(7).Element(BlockTT).Text(III_1_5).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Dự án đang xây dựng").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(III_2_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(III_2_2).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(III_2_3).FontSize(14);
                            table.Cell().Row(5).Column(6).Element(BlockTT).Text(III_2_4).FontSize(14);
                            table.Cell().Row(5).Column(7).Element(BlockTT).Text(III_2_5).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Dự án đang thực hiện các thủ tục xây dựng").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(III_3_1).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(III_3_2).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(III_3_3).FontSize(14);
                            table.Cell().Row(6).Column(6).Element(BlockTT).Text(III_3_4).FontSize(14);
                            table.Cell().Row(6).Column(7).Element(BlockTT).Text(III_3_5).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Dự án chậm triển khai").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(III_4_1).FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(III_4_2).FontSize(14);
                            table.Cell().Row(7).Column(5).Element(BlockTT).Text(III_4_3).FontSize(14);
                            table.Cell().Row(7).Column(6).Element(BlockTT).Text(III_4_4).FontSize(14);
                            table.Cell().Row(7).Column(7).Element(BlockTT).Text(III_4_5).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Tổng cộng").Bold().FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(III_5_1).FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(III_5_2).FontSize(14);
                            table.Cell().Row(8).Column(5).Element(BlockTT).Text(III_5_3).FontSize(14);
                            table.Cell().Row(8).Column(6).Element(BlockTT).Text(III_5_4).FontSize(14);
                            table.Cell().Row(8).Column(7).Element(BlockTT).Text(III_5_5).FontSize(14);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(30).Text("4. Tình hình hoạt động các dự án đầu tư").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Số liệu trong năm báo cáo").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Số liệu cộng dồn từ đầu (24) đến cuối năm báo cáo").Bold().FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("(1)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockTT).Text("(2)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text("(3)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockTT).Text("(4)").Bold().FontSize(14);


                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("I").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Giá trị sản xuất").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(IV1_1).Bold().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(IV1_2).Bold().FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Tổng số").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(IV2_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(IV2_2).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Ước giá trị sản xuất sản phẩm công nghệ  cao").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(IV3_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(IV3_2).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("II").Bold().FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Chỉ cho nguyên cứu phát triển").Bold().FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(IV4_1).Bold().FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(IV4_2).Bold().FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("III").Bold().FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Giá trị xuất nhập khẩu").Bold().FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(IV5_1).Bold().FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(IV5_2).Bold().FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Nhập khẩu").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(IV6_1).FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(IV6_2).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text("Xuất khẩu").FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text(IV7_1).FontSize(14);
                            table.Cell().Row(9).Column(4).Element(BlockTT).Text(IV7_2).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("IV").Bold().FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text("Nộp ngân sách nhà nước").Bold().FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text(IV8_1).Bold().FontSize(14);
                            table.Cell().Row(10).Column(4).Element(BlockTT).Text(IV8_2).Bold().FontSize(14);


                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(30).Text("5. Số liệu lao động").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text(text => {
                                text.Span("Số liệu đến thời điểm báo cáo").Bold().FontSize(14);
                                text.Span(" (Người)").Italic().FontSize(12);
                            });
                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("(1)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockTT).Text("(2)").Bold().FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text("(3)").Bold().FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("I").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Lao động Việt Nam").Bold().FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(V_1_1).Bold().FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Trình độ trên đại học").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(V_1_2).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Trình độ Đại học, Cao đẳng").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(V_1_3).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Trình độ khác").Italic().FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(V_1_4).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("II").Bold().FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Lao động nước ngoài").Bold().FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(V_2_1).Bold().FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Trình độ trên đại học").Italic().FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(V_2_2).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text("Trình độ Đại học, Cao đẳng").Italic().FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockTT).Text(V_2_3).FontSize(14);

                            table.Cell().Row(10).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(10).Column(2).Element(BlockItem).Text("Trình độ khác").Italic().FontSize(14);
                            table.Cell().Row(10).Column(3).Element(BlockTT).Text(V_2_4).FontSize(14);

                            table.Cell().Row(11).Column(1).Element(BlockTT).Text("").FontSize(14);
                            table.Cell().Row(11).Column(2).Element(BlockItem).Text("Tổng số").Bold().FontSize(14);
                            table.Cell().Row(11).Column(3).Element(BlockTT).Text(TONG).Bold().FontSize(14);

                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }

                        column.Item().AlignLeft().PaddingTop(40).Text("___________________________").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(25) Được hiểu là từ thời điểm khởi công dự án đầu tư xây dựng Khu Công nghệ cao").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(26) Được hiểu là từ thời điểm bắt đầu thu hút dự án đầu tư").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(27) Là các dự án đã chấp thuận chủ trương đầu tư/cấp Giấy chứng nhận đăng ký đầu tư còn hiệu lực" +
                            " (đồng thời cập nhật số liệu nếu vốn đăng ký thay đổi).").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(28) Được hiểu là từ thời điểm bắt đầu thu hút dự án đầu tư").Italic().FontSize(11);
                    });


                    //page.Footer()
                    //    .AlignCenter()
                    //    .Text(x =>
                    //    {
                    //        x.Span("Trang ");
                    //        x.CurrentPageNumber();
                    //    });
                });
            })

    .GeneratePdf(path);
        return path;
    }

    public string XuatMau10ATT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam = "";

                var tu_ngay = "";
                var tu_thang = "";
                var tu_nam = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";
                //biến tĩnh
                //bảng 2
                var II1_1 = "";
                var II1_2 = "";
                var II1_3 = "";
                var II1_4 = "";

                var II2_1 = "";
                var II2_2 = "";
                var II2_3 = "";
                var II2_4 = "";

                var II3_1 = "";
                var II3_2 = "";
                var II3_3 = "";
                var II3_4 = "";

                var II4_1 = "";
                var II4_2 = "";
                var II4_3 = "";
                var II4_4 = "";

                var II5_1 = "";
                var II5_2 = "";
                var II5_3 = "";
                var II5_4 = "";

                //bảng 3
                var III1_1 = "";
                var III1_2 = "";
                var III1_3 = "";
                var III1_4 = "";
                var III1_5 = "";
                var III1_6 = "";
                var III1_7 = "";


                var III2_1 = "";
                var III2_2 = "";
                var III2_3 = "";
                var III2_4 = "";
                var III2_5 = "";
                var III2_6 = "";
                var III2_7 = "";


                var III3_1 = "";
                var III3_2 = "";
                var III3_3 = "";
                var III3_4 = "";
                var III3_5 = "";
                var III3_6 = "";
                var III3_7 = "";


                var III4_1 = "";
                var III4_2 = "";
                var III4_3 = "";
                var III4_4 = "";
                var III4_5 = "";
                var III4_6 = "";
                var III4_7 = "";


                var III5_1 = "";
                var III5_2 = "";
                var III5_3 = "";
                var III5_4 = "";
                var III5_5 = "";
                var III5_6 = "";
                var III5_7 = "";


                var III6_1 = "";
                var III6_2 = "";
                var III6_3 = "";
                var III6_4 = "";
                var III6_5 = "";
                var III6_6 = "";
                var III6_7 = "";


                //bảng 4
                var IV1 = "";
                var IV2 = "";
                var IV3 = "";
                var IV4 = "";
                var IV5 = "";
                var IV6 = "";
                var IV7 = "";
                var IV8 = "";

            
            
                //
                var nRowII = 7;


                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 1; i <= nRowII; i++)
                {
                    for (int col = 2; col <= 15; col++)
                    {
                        II_values[$"II_{i}_{col}"] = "";
                    }
                }

                //gán biến, hàng-cột, cột bắt đầu từ 2
                II_values["II_1_2"] = "gán biến";
                II_values["II_1_3"] = "gán biến";
                II_values["II_5_3"] = "gán biến"; // dòng 5 cột 3
                II_values["II_6_3"] = "gán biến";


                dynamic dataTableI = null;
                dynamic dataTableII = null;
                dynamic dataTableIII = null;
                dynamic dataTableIV = null;
                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;
                dynamic? step6;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_nam = DateTime.Now.Year.ToString();
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 3)
                                    {
                                        tu_nam = tuNgayParts[2];
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        tu_nam = DateTime.Now.Year.ToString();
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dataTableI = step2.form.data.d;
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data3 = step3.form.data.d;

                            foreach(var item in data3)
                            {
                                if(item != null)
                                {
                                    if(item.tt == "1")
                                    {
                                        II1_1 = item.XacLapQuyen;
                                        II1_2 = item.SoLuotHuongDan;
                                        II1_3 = item.SoVuDuocHuongDan;
                                        II1_4 = item.SoVuDuocGiaiQuyet;
                                    }
                                    else if (item.tt == "2")
                                    {
                                        II2_1 = item.XacLapQuyen;
                                        II2_2 = item.SoLuotHuongDan;
                                        II2_3 = item.SoVuDuocHuongDan;
                                        II2_4 = item.SoVuDuocGiaiQuyet;
                                    }
                                    else if (item.tt == "3")
                                    {
                                        II3_1 = item.XacLapQuyen;
                                        II3_2 = item.SoLuotHuongDan;
                                        II3_3 = item.SoVuDuocHuongDan;
                                        II3_4 = item.SoVuDuocGiaiQuyet;
                                    }
                                    else if (item.tt == "4")
                                    {
                                        II4_1 = item.XacLapQuyen;
                                        II4_2 = item.SoLuotHuongDan;
                                        II4_3 = item.SoVuDuocHuongDan;
                                        II4_4 = item.SoVuDuocGiaiQuyet;
                                    }
                                    else if (item.tt == "5")
                                    {
                                        II5_1 = item.XacLapQuyen;
                                        II5_2 = item.SoLuotHuongDan;
                                        II5_3 = item.SoVuDuocHuongDan;
                                        II5_4 = item.SoVuDuocGiaiQuyet;
                                    }
                                }    
                            }    

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data4 = step4.form.data.d;

                            foreach(var item in data4)
                            {
                                if(item != null)
                                {
                                    if(item.id == "1")
                                    {
                                        III1_1 = item.SoKHCN;
                                        III1_2 = item.QuanLy;
                                        III1_3 = item.CongAn;
                                        III1_4 = item.HaiQuan;
                                        III1_5 = item.Tong;
                                        III1_6 = item.UBND_CapTinh;
                                        III1_7 = item.UBND_CapHuyen;
                                    }
                                    else if (item.id == "2")
                                    {
                                        III2_1 = item.SoKHCN;
                                        III2_2 = item.QuanLy;
                                        III2_3 = item.CongAn;
                                        III2_4 = item.HaiQuan;
                                        III2_5 = item.Tong;
                                        III2_6 = item.UBND_CapTinh;
                                        III2_7 = item.UBND_CapHuyen;
                                    }
                                    else if (item.id == "3")
                                    {
                                        III3_1 = item.SoKHCN;
                                        III3_2 = item.QuanLy;
                                        III3_3 = item.CongAn;
                                        III3_4 = item.HaiQuan;
                                        III3_5 = item.Tong;
                                        III3_6 = item.UBND_CapTinh;
                                        III3_7 = item.UBND_CapHuyen;
                                    }
                                    else if (item.id == "4")
                                    {
                                        III4_1 = item.SoKHCN;
                                        III4_2 = item.QuanLy;
                                        III4_3 = item.CongAn;
                                        III4_4 = item.HaiQuan;
                                        III4_5 = item.Tong;
                                        III4_6 = item.UBND_CapTinh;
                                        III4_7 = item.UBND_CapHuyen;
                                    }
                                    else if (item.id == "5")
                                    {
                                        III5_1 = item.SoKHCN;
                                        III5_2 = item.QuanLy;
                                        III5_3 = item.CongAn;
                                        III5_4 = item.HaiQuan;
                                        III5_5 = item.Tong;
                                        III5_6 = item.UBND_CapTinh;
                                        III5_7 = item.UBND_CapHuyen;
                                    }
                                    else if (item.id == "6")
                                    {
                                        III6_1 = item.SoKHCN;
                                        III6_2 = item.QuanLy;
                                        III6_3 = item.CongAn;
                                        III6_4 = item.HaiQuan;
                                        III6_5 = item.Tong;
                                        III6_6 = item.UBND_CapTinh;
                                        III6_7 = item.UBND_CapHuyen;
                                    }
                                }    
                            }    

                        }

                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {
                            dynamic? data5 = step5.form.data.d;

                            foreach(var item in data5)
                            {
                                if(item != null)
                                {
                                    if(item.tt == "1")
                                    {
                                        IV1 = item.SoLuong;
                                    }
                                    else if(item.tt == "2")
                                    {
                                        IV2 = item.SoLuong;
                                    }
                                    else if (item.tt == "3")
                                    {
                                        IV3 = item.SoLuong;
                                    }
                                    else if (item.tt == "4")
                                    {
                                        IV4 = item.SoLuong;
                                    }
                                    else if (item.tt == "5")
                                    {
                                        IV5 = item.SoLuong;
                                    }
                                    else if (item.tt == "6")
                                    {
                                        IV6 = item.SoLuong;
                                    }
                                    else if (item.tt == "7")
                                    {
                                        IV7 = item.SoLuong;
                                    }
                                    else if (item.tt == "8")
                                    {
                                        IV8 = item.SoLuong;
                                    }
                                }    
                            }    
                        }
                    }
                    else if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 6)
                    {
                        step6 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step6 != null)
                        {
                            dataTableII = step6.form.data.d1;
                            dataTableIII = step6.form.data.d2;
                            dataTableIV = step6.form.data.d3;
                        }
                    }
                }
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().AlignLeft().PaddingBottom(10).Text("10. Báo cáo công tác sở hữu trí tuệ").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(20);
                                columns.RelativeColumn(70);
                                columns.RelativeColumn(20);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 10a/SHTT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).AlignCenter().Text("KẾT QUẢ CÔNG TÁC QUẢN LÝ VỀ SỞ HỮU TRÍ TUỆ VÀ TRIỂN KHAI CÁC").Bold().FontSize(13);
                            table.Cell().Row(1).Column(3).AlignCenter().Text("Đơn vị báo cáo:").Bold().FontSize(14);


                            //row 2
                            table.Cell().Row(2).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).AlignCenter().Text("BIỆN PHÁP THÚC ĐẨY HOẠT ĐỘNG SÁNG KIẾN TẠI ĐỊA PHƯƠNG").Bold().FontSize(13);
                            table.Cell().Row(2).Column(3).AlignCenter().Text("UBNN cấp tỉnh").FontSize(14);

                            //row 3
                            table.Cell().Row(3).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(3).Column(2).AlignCenter().Text("Kỳ báo cáo: Năm " + nam).Italic().FontSize(14);
                            table.Cell().Row(3).Column(3).AlignCenter().Text("Đơn vị nhận báo cáo").Bold().FontSize(14);

                            //row 4
                            table.Cell().Row(4).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(4).Column(2).AlignCenter().Text("(Từ ngày " + tu_ngay + " tháng " + tu_thang + " năm " + tu_nam + " đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic().FontSize(14);
                            table.Cell().Row(4).Column(3).AlignCenter().Text("Bộ Khoa học và Công nghệ").FontSize(14);

                            //row 4
                            table.Cell().Row(5).Column(1).Text("").Bold().FontSize(14);
                            table.Cell().Row(5).Column(2).PaddingBottom(20).AlignCenter().Text("_______________________").Italic().FontSize(14);
                            table.Cell().Row(5).Column(3).AlignCenter().Text("").FontSize(13);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).Text("1. Công tác đào tạo, tuyên truyền về sở hữu trí tuệ (SHTT)").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Nội dung đào tạo, tuyên truyền").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Hình thức đào tạo, tuyên truyền").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Đối tượng chính").Bold().FontSize(14);
                            table.Cell().Row(1).Column(5).Element(BlockHead).Text("Cơ quan tổ chức").Bold().FontSize(14);
                            table.Cell().Row(1).Column(6).Element(BlockHead).Text("Số lượng người").Bold().FontSize(14);
                            table.Cell().Row(1).Column(7).Element(BlockHead).Text("Thời gian").Bold().FontSize(14);



                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTableI)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 1;

                                    string NoiDung = item.NoiDung.ToString();
                                    string HinhThuc = item.HinhThuc.ToString();
                                    string DoiTuong = item.DoiTuong.ToString();
                                    string CoQuanToChuc = item.CoQuanToChuc.ToString();
                                    string SoLuotNguoi = item.SoLuotNguoi.ToString();
                                    string ThoiGian = item.ThoiGian.ToString();
                               


                                    table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockItem).Text(HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockItem).Text(DoiTuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockItem).Text(CoQuanToChuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockTT).Text(SoLuotNguoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(ThoiGian).FontSize(14);

                                    i++;
                                }
                            }
                        });
                        column.Item().AlignLeft().PaddingTop(40).PaddingBottom(10).Text("2. Tình hình thu hút đầu tư").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn(2);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Đối tượng SHCN").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockHead).Text(text =>
                            {
                                text.Span("Xác lập quyền SHCN").Bold().FontSize(14);
                                text.Span("(Số lượt hướng dẫn)").Italic().FontSize(14);
                            });
                            table.Cell().Row(1).Column(4).ColumnSpan(3).Element(BlockHead).Text("Bảo vệ quyền SHCN").Bold().FontSize(14);

                            table.Cell().Row(2).Column(4).Element(BlockHead).Text("Số lượt hướng dẫn").Bold().FontSize(14);
                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Số vụ được hướng dẫn và đã nộp hồ sơ").Bold().FontSize(14);
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Số vụ được giải quyết").Bold().FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Nhãn hiệu").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockItem).Text(II1_1).FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(II1_2).FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text(II1_3).FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockTT).Text(II1_4).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Chỉ dẫn địa lý").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockItem).Text(II2_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(II2_2).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(II2_3).FontSize(14);
                            table.Cell().Row(4).Column(6).Element(BlockTT).Text(II2_4).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Kiểu dáng công nghiệp").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockItem).Text(II3_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(II3_2).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(II3_3).FontSize(14);
                            table.Cell().Row(5).Column(6).Element(BlockTT).Text(II3_4).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Sáng chế/giải pháp hữu ích").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockItem).Text(II4_1).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(II4_2).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(II4_3).FontSize(14);
                            table.Cell().Row(6).Column(6).Element(BlockTT).Text(II4_4).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("5").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Các đối tượng khác (Thiết kế bố trí mạch tích hợp bán dẫn, tên thương mại)").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockItem).Text(II5_1).FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(II5_2).FontSize(14);
                            table.Cell().Row(7).Column(5).Element(BlockTT).Text(II5_3).FontSize(14);
                            table.Cell().Row(7).Column(6).Element(BlockTT).Text(II5_4).FontSize(14);

                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(30).Text("3. Công tác xử lý xâm phạm quyền SHCN").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn(3);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Đối tượng quyền SHCN (29)").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockHead).Text("Sở Khoa học và Công nghệ").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).RowSpan(2).Element(BlockHead).Text("Quản lý thị trường").Bold().FontSize(14);
                            table.Cell().Row(1).Column(5).RowSpan(2).Element(BlockHead).Text("Công An").Bold().FontSize(14);
                            table.Cell().Row(1).Column(6).RowSpan(2).Element(BlockHead).Text("Hải quan").Bold().FontSize(14);
                            table.Cell().Row(1).Column(7).ColumnSpan(2).Element(BlockHead).Text("UBND").Bold().FontSize(14);
                            table.Cell().Row(1).Column(9).RowSpan(2).Element(BlockHead).Text("Tổng").Bold().FontSize(14);


                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("UBND cấp tỉnh").Bold().FontSize(14);
                            table.Cell().Row(2).Column(8).Element(BlockHead).Text("UBND cấp huyện").Bold().FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Số vụ").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text(III1_1).FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(III1_2).FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text(III1_3).FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockTT).Text(III1_4).FontSize(14);
                            table.Cell().Row(3).Column(7).Element(BlockTT).Text(III1_5).FontSize(14);
                            table.Cell().Row(3).Column(8).Element(BlockTT).Text(III1_6).FontSize(14);
                            table.Cell().Row(3).Column(9).Element(BlockTT).Text(III1_7).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Phạt cảnh cáo (vụ)").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text(III2_1).FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(III2_2).FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text(III2_3).FontSize(14);
                            table.Cell().Row(4).Column(6).Element(BlockTT).Text(III2_4).FontSize(14);
                            table.Cell().Row(4).Column(7).Element(BlockTT).Text(III2_5).FontSize(14);
                            table.Cell().Row(4).Column(8).Element(BlockTT).Text(III2_6).FontSize(14);
                            table.Cell().Row(4).Column(9).Element(BlockTT).Text(III2_7).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Phạt tiền (vụ)").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockTT).Text(III3_1).FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(III3_2).FontSize(14);
                            table.Cell().Row(5).Column(5).Element(BlockTT).Text(III3_3).FontSize(14);
                            table.Cell().Row(5).Column(6).Element(BlockTT).Text(III3_4).FontSize(14);
                            table.Cell().Row(5).Column(7).Element(BlockTT).Text(III3_5).FontSize(14);
                            table.Cell().Row(5).Column(8).Element(BlockTT).Text(III3_6).FontSize(14);
                            table.Cell().Row(5).Column(9).Element(BlockTT).Text(III3_7).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Tổng số tiền phạt (triệu đồng)").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockTT).Text(III4_1).FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(III4_2).FontSize(14);
                            table.Cell().Row(6).Column(5).Element(BlockTT).Text(III4_3).FontSize(14);
                            table.Cell().Row(6).Column(6).Element(BlockTT).Text(III4_4).FontSize(14);
                            table.Cell().Row(6).Column(7).Element(BlockTT).Text(III4_5).FontSize(14);
                            table.Cell().Row(6).Column(8).Element(BlockTT).Text(III4_6).FontSize(14);
                            table.Cell().Row(6).Column(9).Element(BlockTT).Text(III4_7).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("5").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Số sản phẩm bị xử lý").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockTT).Text(III5_1).FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(III5_2).FontSize(14);
                            table.Cell().Row(7).Column(5).Element(BlockTT).Text(III5_3).FontSize(14);
                            table.Cell().Row(7).Column(6).Element(BlockTT).Text(III5_4).FontSize(14);
                            table.Cell().Row(7).Column(7).Element(BlockTT).Text(III5_5).FontSize(14);
                            table.Cell().Row(7).Column(8).Element(BlockTT).Text(III5_6).FontSize(14);
                            table.Cell().Row(7).Column(9).Element(BlockTT).Text(III5_7).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("6").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Số vụ cần trưng cầu giám định/xin ý kiếm chuyên môn").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockTT).Text(III6_1).FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(III6_2).FontSize(14);
                            table.Cell().Row(8).Column(5).Element(BlockTT).Text(III6_3).FontSize(14);
                            table.Cell().Row(8).Column(6).Element(BlockTT).Text(III6_4).FontSize(14);
                            table.Cell().Row(8).Column(7).Element(BlockTT).Text(III6_5).FontSize(14);
                            table.Cell().Row(8).Column(8).Element(BlockTT).Text(III6_6).FontSize(14);
                            table.Cell().Row(8).Column(9).Element(BlockTT).Text(III6_7).FontSize(14);
                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(30).Text("4. Công tác hỗ trợ phát triển tài sản trí tuệ").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.RelativeColumn(3);
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Nội dung").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Đơn vị tính").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Số lượng").Bold().FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockItem).Text("Dự án, nhiệm vụ hổ trợ phát triển tài sản trí tuệ được phê duyệt").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockDonViTinh).Text("Dự án").Italic().FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockTT).Text(IV1).FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockItem).Text("Sáng chế/Giải pháp hữu ích được hổ trợ bảo hộ, khai thác").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockDonViTinh).Text("Giải pháp").Italic().FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text(IV2).FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockItem).Text("Sản phẩm đặc thù địa phương được hỗ trợ bảo hộ, khai thác").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockDonViTinh).Text("Sản phẩm").Italic().FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text(IV3).FontSize(14);

                            table.Cell().Row(5).Column(1).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(5).Column(2).Element(BlockItem).Text("Tổ chức tập thể để quản lý tài sản trí tuệ cộng đồng").FontSize(14);
                            table.Cell().Row(5).Column(3).Element(BlockDonViTinh).Text("Hội, Hiệp hội").Italic().FontSize(14);
                            table.Cell().Row(5).Column(4).Element(BlockTT).Text(IV4).FontSize(14);

                            table.Cell().Row(6).Column(1).Element(BlockTT).Text("5").FontSize(14);
                            table.Cell().Row(6).Column(2).Element(BlockItem).Text("Lượt người được tập huấn, đào tạo về SHTT").FontSize(14);
                            table.Cell().Row(6).Column(3).Element(BlockDonViTinh).Text("Lượt người").Italic().FontSize(14);
                            table.Cell().Row(6).Column(4).Element(BlockTT).Text(IV5).FontSize(14);

                            table.Cell().Row(7).Column(1).Element(BlockTT).Text("6").FontSize(14);
                            table.Cell().Row(7).Column(2).Element(BlockItem).Text("Doanh nghiệp được hỗ trợ về SHTT").FontSize(14);
                            table.Cell().Row(7).Column(3).Element(BlockDonViTinh).Text("Lượt doanh nghiệp").Italic().FontSize(14);
                            table.Cell().Row(7).Column(4).Element(BlockTT).Text(IV6).FontSize(14);

                            table.Cell().Row(8).Column(1).Element(BlockTT).Text("7").FontSize(14);
                            table.Cell().Row(8).Column(2).Element(BlockItem).Text("Lượt phát sóng truyền hình tuyên truyền về SHTT").FontSize(14);
                            table.Cell().Row(8).Column(3).Element(BlockDonViTinh).Text("Lượt phát sóng").Italic().FontSize(14);
                            table.Cell().Row(8).Column(4).Element(BlockTT).Text(IV7).FontSize(14);

                            table.Cell().Row(9).Column(1).Element(BlockTT).Text("8").FontSize(14);
                            table.Cell().Row(9).Column(2).Element(BlockItem).Text("Tổng kinh phí chi cho hoạt động SHTT được phê duyệt").FontSize(14);
                            table.Cell().Row(9).Column(3).Element(BlockDonViTinh).Text("Triệu đồng").Italic().FontSize(14);
                            table.Cell().Row(9).Column(4).Element(BlockTT).Text(IV8).FontSize(14);

                            static IContainer BlockDonViTinh(IContainer container)
                            {
                                return container
                                    .Border(1)
                                    .Background(Colors.White)
                                    .ShowOnce()
                                    .MinWidth(28)
                                    .MinHeight(28)
                                    .AlignCenter()
                                    .AlignMiddle();
                            }
                        });
                        column.Item().AlignLeft().PaddingBottom(10).PaddingTop(50).Text("5. Kết quả triển khai các biện pháp thúc đẩy hoạt động sáng kiến").Bold().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("TT").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Đơn vị").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Tổng số giải pháp được đề nghị công nhận sáng kiến").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Tổng số sáng kiến được công nhận").Bold().FontSize(14);
                            table.Cell().Row(1).Column(5).Element(BlockHead).Text("Tổng số sáng kiến được áp dụng").Bold().FontSize(14);
                            table.Cell().Row(1).Column(6).Element(BlockHead).Text("Tổng số tiền làm lợi của sáng kiến được áp dụng").Bold().FontSize(14);
                            table.Cell().Row(1).Column(7).Element(BlockHead).Text("Tổng số tiền trả thù lao cho tác giả sáng kiến").Bold().FontSize(14);
                            table.Cell().Row(1).Column(8).Element(BlockHead).Text("Tổng số sáng kiến được chuyển giao").Bold().FontSize(14);
                            table.Cell().Row(1).Column(9).Element(BlockHead).Text("Tổng số tiền thu được từ sáng kiến được chuyển giao").Bold().FontSize(14);
                            table.Cell().Row(1).Column(10).Element(BlockHead).Text("Tổng số cán bộ được nâng lương trước thời hạn do có sáng kiến được công nhận").Bold().FontSize(14);
                            table.Cell().Row(1).Column(11).Element(BlockHead).Text("Tổng số sáng kiến được công nhận có phạm vi ảnh hưởng cấp tỉnh").Bold().FontSize(14);
                            table.Cell().Row(1).Column(12).Element(BlockHead).Text("Tổng số sáng kiến được công nhận có phạm vi ảnh hưởng toàn quốc").Bold().FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("I").Bold().FontSize(14);
                            table.Cell().Row(2).Column(2).ColumnSpan(11).Element(BlockItem).Text("Sáng kiến của các cơ quan, tổ chức, doanh nghiệp của Nhà nước").Bold().FontSize(14);



                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTableII)
                            {
                                if (item != null)
                                {
                                        string index = i.ToString();
                                        rowIndex = i + 2;

                                        string DonVi = item.DonVi.ToString();
                                        string Tong_GiaiPhap = item.Tong_GiaiPhap.ToString();
                                        string Tong_SangKienCongNhan = item.Tong_SangKienCongNhan.ToString();
                                        string Tong_SangKienApDung = item.Tong_SangKienApDung.ToString();
                                        string TongTien_LamLoi = item.TongTien_LamLoi.ToString();
                                        string TongTien_ThuLao = item.TongTien_ThuLao.ToString();
                                        string Tong_SangKienChuyenGiao = item.Tong_SangKienChuyenGiao.ToString();
                                        string TongTien_ThuDuoc = item.TongTien_ThuDuoc.ToString();
                                        string TongCanBo_NangLuong = item.TongCanBo_NangLuong.ToString();
                                        string Tong_SangKienCapTinh = item.Tong_SangKienCapTinh.ToString();
                                        string Tong_SangKienToanQuoc = item.Tong_SangKienToanQuoc.ToString();


                                        table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(index).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(DonVi).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(3).Element(BlockTT).Text(Tong_GiaiPhap).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(Tong_SangKienCongNhan).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(5).Element(BlockTT).Text(Tong_SangKienApDung).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(6).Element(BlockTT).Text(TongTien_LamLoi).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(TongTien_ThuLao).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(8).Element(BlockTT).Text(Tong_SangKienChuyenGiao).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(9).Element(BlockTT).Text(TongTien_ThuDuoc).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(10).Element(BlockTT).Text(TongCanBo_NangLuong).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(11).Element(BlockTT).Text(Tong_SangKienCapTinh).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(12).Element(BlockTT).Text(Tong_SangKienToanQuoc).FontSize(14);
                                    i++;
                                }
                            }


                            table.Cell().Row(rowIndex + 1).Column(1).Element(BlockTT).Text("II").Bold().FontSize(14);
                            table.Cell().Row(rowIndex + 1).Column(2).ColumnSpan(11).Element(BlockItem).Text("Sáng kiến của các cơ quan, tổ chức, doanh nghiệp ngoài Nhà nước").Bold().FontSize(14);

                            rowIndex = rowIndex + 1;
                            i = 1;
                            foreach (var item in dataTableIII)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = 1 + rowIndex;

                                    string DonVi = item.DonVi.ToString();
                                    string Tong_GiaiPhap = item.Tong_GiaiPhap.ToString();
                                    string Tong_SangKienCongNhan = item.Tong_SangKienCongNhan.ToString();
                                    string Tong_SangKienApDung = item.Tong_SangKienApDung.ToString();
                                    string TongTien_LamLoi = item.TongTien_LamLoi.ToString();
                                    string TongTien_ThuLao = item.TongTien_ThuLao.ToString();
                                    string Tong_SangKienChuyenGiao = item.Tong_SangKienChuyenGiao.ToString();
                                    string TongTien_ThuDuoc = item.TongTien_ThuDuoc.ToString();
                                    string TongCanBo_NangLuong = item.TongCanBo_NangLuong.ToString();
                                    string Tong_SangKienCapTinh = item.Tong_SangKienCapTinh.ToString();
                                    string Tong_SangKienToanQuoc = item.Tong_SangKienToanQuoc.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(DonVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockTT).Text(Tong_GiaiPhap).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(Tong_SangKienCongNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockTT).Text(Tong_SangKienApDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockTT).Text(TongTien_LamLoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(TongTien_ThuLao).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockTT).Text(Tong_SangKienChuyenGiao).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockTT).Text(TongTien_ThuDuoc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(BlockTT).Text(TongCanBo_NangLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(BlockTT).Text(Tong_SangKienCapTinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(BlockTT).Text(Tong_SangKienToanQuoc).FontSize(14);

                                    i++;
                                }
                            }

                            table.Cell().Row(rowIndex + 1).Column(1).Element(BlockTT).Text("III").Bold().FontSize(14);
                            table.Cell().Row(rowIndex + 1).Column(2).ColumnSpan(11).Element(BlockItem).Text(text =>
                            {
                                text.Span("Sáng kiến của các đối tượng khác").Bold().FontSize(14);
                                text.Span("(nông dân, học sinh, sinh viên, người lao động tự do,....)").Italic().FontSize(14);
                            });

                            rowIndex = rowIndex + 1;
                            i = 1;
                            foreach (var item in dataTableIV)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = 1 + rowIndex;

                                    string DonVi = item.DonVi.ToString();
                                    string Tong_GiaiPhap = item.Tong_GiaiPhap.ToString();
                                    string Tong_SangKienCongNhan = item.Tong_SangKienCongNhan.ToString();
                                    string Tong_SangKienApDung = item.Tong_SangKienApDung.ToString();
                                    string TongTien_LamLoi = item.TongTien_LamLoi.ToString();
                                    string TongTien_ThuLao = item.TongTien_ThuLao.ToString();
                                    string Tong_SangKienChuyenGiao = item.Tong_SangKienChuyenGiao.ToString();
                                    string TongTien_ThuDuoc = item.TongTien_ThuDuoc.ToString();
                                    string TongCanBo_NangLuong = item.TongCanBo_NangLuong.ToString();
                                    string Tong_SangKienCapTinh = item.Tong_SangKienCapTinh.ToString();
                                    string Tong_SangKienToanQuoc = item.Tong_SangKienToanQuoc.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(BlockTT).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockItem).Text(DonVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockTT).Text(Tong_GiaiPhap).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(Tong_SangKienCongNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockTT).Text(Tong_SangKienApDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockTT).Text(TongTien_LamLoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(TongTien_ThuLao).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(BlockTT).Text(Tong_SangKienChuyenGiao).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(BlockTT).Text(TongTien_ThuDuoc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(BlockTT).Text(TongCanBo_NangLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(BlockTT).Text(Tong_SangKienCapTinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(BlockTT).Text(Tong_SangKienToanQuoc).FontSize(14);
                                    i++;
                                }
                            }
                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }
                        column.Item().AlignLeft().Text("___________________________").Italic().FontSize(11);
                        column.Item().AlignLeft().Text("(29) Ghi rõ từng đối tượng SHCN gồm, sáng chế, giải pháp hữu ích," +
                            " kiểu dáng công nghiệp, nhãn hiệu, tên thương hiệu, thiết kế bố trí mạch tích hợp bán dẫn...").Italic().FontSize(11);
                    });


                    //page.Footer()
                    //    .AlignCenter()
                    //    .Text(x =>
                    //    {
                    //        x.Span("Trang ");
                    //        x.CurrentPageNumber();
                    //    });
                });
            })

    .GeneratePdf(path);
        return path;
    }
 
    public string XuatMau11ATT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var NUMBER_ROW = 10; // Số hàng cần nhập liệu + 1 trong bảng

                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < NUMBER_ROW; i++)
                {
                    for (int col = 2; col <= 6; col++)
                    {
                        II_values[$"II_{i + 2}_{col}"] = "";
                    }
                }

               

                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic? step2;
                dynamic Tabledata = null;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            Tabledata = step2.form.data.d;
                        }

                    }
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {

                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }

                        }

                    }

                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("11. Báo cáo tình hình xây dựng, ban hành quy chuẩn kỹ thuật, hoạt động tiếp nhận công bố hợp chuẩn, công bố hợp quy.").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 11a/QCKT").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("TÌNH HÌNH XÂY DỰNG, BAN HÀNH QUY CHUẨN KỸ THUẬT QUỐC GIA").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("VÀ QUY CHUẨN KỸ THUẬT ĐỊA PHƯƠNG").Bold();
                            table.Cell().Row(2).Column(3).Text("- Bộ, ngành;");


                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("- UBND Cấp tỉnh");

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Đơn vị nhận báo cáo").Bold();

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("Bộ Khoa học và Công nghệ");

                        });

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(15)
                                .PaddingRight(5)
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(30);
                                columns.ConstantColumn(150);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.ConstantColumn(200);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Thông tư/Quyết định").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Ngành ban hành").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Cơ quan ban hành").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("Tên quy chuẩn kỹ thuật").Bold();
                            table.Cell().Row(1).Column(6).Element(Title).Text("Ký hiệu quy chuẩn").Bold();


                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in Tabledata)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                   
                                    rowIndex = i + 1;

                                    string ThongTu = item.ThongTu.ToString();
                                    string NgayBanHanh = item.NgayBanHanh.ToString();
                                    string CoQuan = item.CoQuan.ToString();
                                    string TenKyThuat = item.TenKyThuat.ToString();
                                    string KyHieu = item.KyHieu.ToString();
                                   
                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Block).Text(ThongTu).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Block).Text(NgayBanHanh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Block).Text(CoQuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Block).Text(TenKyThuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Block).Text(KyHieu).FontSize(14);

                                    i++;
                                }
                            }


                        });
                    });



                    page.Footer();
                });
            })

    .GeneratePdf(path);
        return path;
    }

    public string XuatMau11BTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var NUMBER_ROW = 10; // Số hàng cần nhập liệu + 1 trong bảng

                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < NUMBER_ROW; i++)
                {
                    for (int col = 2; col <= 8; col++)
                    {
                        II_values[$"II_{i + 2}_{col}"] = "";
                    }
                }

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic tableData = null;
              
               

                foreach (WorkflowStep workflowStep in steps)
                {
                    
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData = step2.form.data.d;
                  
                        

                        }

                    }

                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(350);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 11b/ĐGSPH").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("TÌNH HÌNH TIẾP NHẬN").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();


                            table.Cell().Row(2).Column(1).Text("").Bold();
                            table.Cell().Row(2).Column(2).Element(Center).Text("HỒ SƠ CÔNG BỐ HỢP CHUẨN/HỢP QUY").Bold();
                            table.Cell().Row(2).Column(3).Text("UBND cấp tỉnh");


                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();


                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công Nghệ");


                        });

                        column.Item().PaddingBottom(30).AlignCenter().Text("_______________").FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Số tiếp nhận").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Tên tổ chức, cá nhận công bố").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(4).Element(Title).Text("Tên sản phẩm, hàng hoá, dịch vụ, quá trình, môi trường").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(5).Element(Title).Text("Tiêu chuẩn").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(6).Element(Title).Text("Quy chuẩn kỹ thuật").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(7).Element(Title).Text("Loại hình đánh giá").Bold();         
                            table.Cell().Row(2).Column(7).Element(Title).AlignCenter().Text(text =>
                            {
                                text.Span("Dựa trên kết quả tự đánh giá của tổ chức, cá nhân").Bold().FontSize(14);
                                text.Line("(bên thứ nhất)").Italic().FontSize(13);
                            });

                            table.Cell().Row(2).Column(8).Element(Title).AlignCenter().Text(text =>
                            {
                                text.Span("Dựa trên kết quả chứng nhận của tổ chức chứng nhận đã đăng ký hoặc tổ chức chứng nhận được chỉ định").Bold().FontSize(14);
                                text.Line("(bên thứ ba)").Italic().FontSize(13);
                            });

                           
                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;
                                    string Index = item.tt.ToString();
                                    string SoTiepNhan = item.SoTiepNhan.ToString();
                                    string TenToChuc = item.TenToChuc.ToString();
                                    string Ten = item.Ten.ToString();
                                    string TieuChuan = item.TieuChuan.ToString();
                                    string QuyChuan = item.QuyChuan.ToString();
                                    string KetQua_DanhGia = item.KetQua_DanhGia.ToString();
                                    string KetQua_ChungNhan = item.KetQua_ChungNhan.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Block).Text(SoTiepNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Block).Text(TenToChuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Block).Text(Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Block).Text(TieuChuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Block).Text(QuyChuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Block).Text(KetQua_DanhGia).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Block).Text(KetQua_ChungNhan).FontSize(14);

                                    i++;
                                }
                            }
                           

                       

                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                    });
                    page.Footer();
                });
            })

 .GeneratePdf(path);
        return path;
    }

    public string XuatMau12TT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var NUMBER_ROW = 10; // Số hàng cần nhập liệu + 1 trong bảng

                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < NUMBER_ROW; i++)
                {
                    for (int col = 2; col <= 7; col++)
                    {
                        II_values[$"II_{i + 2}_{col}"] = "";
                    }
                }

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic tableData = null;

                foreach (WorkflowStep workflowStep in steps)
                {

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                string kyBaoCao = data1?.KyBaoCao as string;
                                nam_ky = string.IsNullOrEmpty(kyBaoCao) ? DateTime.Now.Year.ToString() : kyBaoCao;

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData = step2.form.data.d;
                        }

                    }

                }



                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().PaddingTop(18).PaddingBottom(15).AlignLeft().Text("12. Báo cáo tình hình quản lý xét tặng giải thưởng chất lượng sản phẩm, hàng hoá của tổ chức, cá nhân trên địa bản tỉnh, thành phố.").Bold().FontSize(12);


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 12/GTCL").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("TÌNH HÌNH QUẢN LÝ XÉT TẶNG GIẢI THƯỞNG CHẤT LƯỢNG").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("SẢN PHẨM, HÀNG HOÁ CỦA TỔ CHỨC, CÁ NHÂN TRÊN ĐỊA BÀN TỈNH,").Bold();
                            table.Cell().Row(2).Column(3).Text("UBND cấp tỉnh");

                            table.Cell().Row(3).Column(1).Text("");
                            table.Cell().Row(3).Column(2).Element(Center).Text("THÀNH PHỐ").Bold();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(5).Column(3).Text("");

                            table.Cell().Row(6).Column(1).Text("").Bold();
                            table.Cell().Row(6).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(6).Column(3).Text("");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên tổ chức, cá nhân đã được cấp Giấy xác nhận đăng ký hoạt động xét tặng giải thưởng chất lượng sản phẩm, hàng hoá trên địa bàn").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Số Quyết định cấp Giấy xác nhận").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(4).Element(Title).Text("Tên giải thưởng").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(5).Element(Title).Text("Thời gian tổ chức xét thưởng").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(6).Element(Title).Text("Số lượng giải thưởng đã xét tặng").Bold();

                            table.Cell().Row(2).Column(6).Element(Title).Text("Tổ chức").Italic();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Cá nhân").Italic();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;

                                    string TenToChuc = item.TenToChuc.ToString();
                                    string SoQuyetDinh = item.SoQuyetDinh.ToString();
                                    string TenGiaiThuong = item.TenGiaiThuong.ToString();
                                    string ThoiGianToChuc = item.ThoiGianToChuc.ToString();
                                    string SoLuong_ToChuc = item.SoLuong_ToChuc.ToString();
                                    string SoLuong_CaNhan = item.SoLuong_CaNhan.ToString();
                                  

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Block).Text(TenToChuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Block).Text(SoQuyetDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Block).Text(TenGiaiThuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Block).Text(ThoiGianToChuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Block).Text(SoLuong_ToChuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Block).Text(SoLuong_CaNhan).FontSize(14);
                                    

                                    i++;
                                }
                            }



                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                    });



                    page.Footer();
                });
            })

 .GeneratePdf(path);
        return path;

    }

    public string XuatMau13ATT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var NUMBER_ROW = 10; // Số hàng cần nhập liệu + 1 trong bảng

                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < NUMBER_ROW; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"I_{i + 2}_{col}"] = "";
                    }
                }

                // Biến động nhập theo hàng và cột trong bảng
                II_values["I_2_2"] = "Nội dung1";
                II_values["I_2_3"] = "Nội dung2";
                II_values["I_2_4"] = "Nội dung3";


                var NUMBER_ROW_TABLE_2 = 5;

                for (int i = 0; i < NUMBER_ROW_TABLE_2; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"II_{i + 2}_{col}"] = "";
                    }
                }

                II_values["II_2_2"] = "Nội dung1";
                II_values["II_2_3"] = "Nội dung2";
                II_values["II_2_4"] = "Nội dung3";

                var NUMBER_ROW_TABLE_3 = 15;

                for (int i = 0; i < NUMBER_ROW_TABLE_3; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"III_{i + 2}_{col}"] = "";
                    }
                }

                II_values["III_2_2"] = "Nội dung1";
                II_values["III_2_3"] = "Nội dung2";
                II_values["III_2_4"] = "Nội dung3";

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;

               
 
                dynamic tableData2 = null;
                dynamic tableData3 = null;
                dynamic tableData4 = null;


                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {

                            tableData2 = step2.form.data.d;
                          
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            tableData3 = step3.form.data.d;
                         

                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            tableData4= step4.form.data.d;
                         

                        }
                    }
                }


                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().PaddingTop(18).PaddingBottom(15).AlignLeft().Text("13. Báo cáo kết quả hoạt động của Mạng lưới các cơ quan thông báo và hỏi đáp Việt Nam và kết quả hoạt động của Ban liên ngành về hàng rào kỹ thuật trong thương mại.").Bold().FontSize(12);


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 13a/TBT").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("KẾT QUẢ HOẠT ĐỘNG THÔNG BÁO VÀ HỎI ĐÁP VỀ HÀNG HOÁ").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("KỸ THUẬT TRONG THƯƠNG MẠI (TBT) TẠI ĐỊA PHƯƠNG").Bold();
                            table.Cell().Row(2).Column(3).Text("UBND cấp tỉnh");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Báo cáo hoạt động Thông báo tại địa phương").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.ConstantColumn(120);
                                columns.ConstantColumn(120);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Nội dung thông báo").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Ngày thông báo").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Mã thông báo").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string Ngay = String.Format("{0:dd/MM/yyyy}", item.Ngay);                              
                                    string Ma = item.Ma.ToString();
                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    //Thêm Bold
                                    if (NoiDung == "Tổng số thông báo đã gửi")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14).Bold();
                                    }
                                    else {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14);
                                        }   
                                    
                            
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(Ngay).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(Ma).FontSize(14);
                                    i++;
                                }

                            }
                           


                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("2. Báo cáo hoạt động Hỏi đáp tại địa phương").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên cơ quan/tổ chức/ nước thành viên hỏi").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Nội dung câu hỏi").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Nội dung trả lời").Bold();


                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string NoiDungCauHoi = item.NoiDungCauHoi.ToString();
                                    string NoiDungTraLoi = item.NoiDungTraLoi.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    //Thêm Bold
                                    if (TenCoQuan=="Tổng số câu hỏi nhận được")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    }                                 
                                    
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(NoiDungCauHoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(NoiDungTraLoi).FontSize(14);

                                    i++;
                                }

                            }
                             
                         
                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3. Báo cáo hoạt động tuyên truyền về TBT tại địa phương").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Hình thức tuyên truyền").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Nôi dung tuyên truyền").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Số lượng").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData4)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string HinhThuc = item.HinhThuc.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string SoLuong = item.SoLuong.ToString();

                                    //tongCauHoi2 = tableData4.Count;
                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLuong).FontSize(14);

                                    i++;
                                }
                            }
                         
                        });

                    });
                    page.Footer();
                });
            })
             .GeneratePdf(path);
        return path;
    }

    public string XuatMau13BTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var NUMBER_ROW = 10; // Số hàng cần nhập liệu + 1 trong bảng

                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < NUMBER_ROW; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"I_{i + 2}_{col}"] = "";
                    }
                }

                // Biến động nhập theo hàng và cột trong bảng
                II_values["I_2_2"] = "Nội dung1";
                II_values["I_2_3"] = "Nội dung2";
                II_values["I_2_4"] = "Nội dung3";


                var NUMBER_ROW_TABLE_2 = 5;

                for (int i = 0; i < NUMBER_ROW_TABLE_2; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"II_{i + 2}_{col}"] = "";
                    }
                }

                II_values["II_2_2"] = "Nội dung1";
                II_values["II_2_3"] = "Nội dung2";
                II_values["II_2_4"] = "Nội dung3";

                var NUMBER_ROW_TABLE_3 = 15;

                for (int i = 0; i < NUMBER_ROW_TABLE_3; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"III_{i + 2}_{col}"] = "";
                    }
                }

                II_values["III_2_2"] = "Nội dung1";
                II_values["III_2_3"] = "Nội dung2";
                II_values["III_2_4"] = "Nội dung3";

                var NUMBER_ROW_TABLE_4 = 20;

                for (int i = 0; i < NUMBER_ROW_TABLE_4; i++)
                {
                    for (int col = 2; col <= 5; col++)
                    {
                        II_values[$"IIII_{i + 2}_{col}"] = "";
                    }
                }

                II_values["IIII_2_2"] = "Nội dung1";
                II_values["IIII_2_3"] = "Nội dung2";
                II_values["IIII_2_4"] = "Nội dung3";
                II_values["IIII_2_5"] = "Nội dung4";

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;


                dynamic tableData2 = null;
                dynamic tableData3 = null;
                dynamic tableData4 = null;
                dynamic tableData5 = null;

              
             
        

                foreach (WorkflowStep workflowStep in steps)
                {

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {

                            tableData2 = step2.form.data.d;
                           
                        }

                    }


                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {

                            tableData3 = step3.form.data.d;
                          
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            tableData4 = step4.form.data.d;
                          
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {
                            tableData5 = step5.form.data.d;

                        }
                    }


                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 13b/TBT").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("KẾT QUẢ HOẠT ĐỘNG THÔNG BÁO VÀ HỎI ĐÁP VỀ HÀNG RÀO KỸ THUẬT").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("TRONG THƯƠNG MẠI (TBT) TẠI BỘ, NGÀNH").Bold();
                            table.Cell().Row(2).Column(3).Text("Bộ, ngành");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Báo cáo hoạt động Thông báo").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.ConstantColumn(120);
                                columns.ConstantColumn(120);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Nội dung thông báo").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Ngày thông báo").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Mã thông báo").Bold();


                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string Ngay = String.Format("{0:dd/MM/yyyy}", item.Ngay);                                  
                                    string Ma = item.Ma.ToString();

                                    //tongSoThongBaoDaGui = tableData2.Count;
                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    //Thêm Bold
                                    if (NoiDung == "Tổng số thông báo đã gửi")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14);
                                    }

                                   
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(Ngay).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(Ma).FontSize(14);

                                    i++;
                                }

                            }

                           
                           
                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("2. Báo cáo hoạt động Hỏi đáp").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên cơ quan/tổ chức/ nước thành viên hỏi").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Nội dung câu hỏi").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Nội dung trả lời").Bold();


                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string NoiDungCauHoi = item.NoiDungCauHoi.ToString();
                                    string NoiDungTraLoi = item.NoiDungTraLoi.ToString();

                                    //tongSoCauHoiNhanDuoc = tableData3.Count;

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    //Thêm Bold
                                    if (TenCoQuan == "Tổng số câu hỏi nhận được")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    }
                                  
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(NoiDungCauHoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(NoiDungTraLoi).FontSize(14);
                                    i++;
                                }
                            }
                                   

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3. Báo cáo hoạt động tuyên truyền về TBT").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Hình thức tuyên truyền").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Nội dung tuyên truyền").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Số lượng").Bold();



                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData4)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string HinhThuc = item.HinhThuc.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string SoLuong = item.SoLuong.ToString();

                                    //tongBaoCao = tableData4.Count;

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLuong).FontSize(14);

                                    i++;
                                }

                            }

                          
                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("4. Báo cáo hoạt động triển khai các cam kết TBT trong các Hiệp định thương mại tự do (FTAs)").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Hiệp định FTAs").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Nội dung thực hiện cam kết").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Hình thức thực hiện").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("Sản phẩm/kết quả đạt được").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData5)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;

                                    string HiepDinh = item.HiepDinh.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string HinhThuc = item.HinhThuc.ToString();
                                    string SanPham = item.SanPham.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(HiepDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(SanPham).FontSize(14);

                                    i++;
                                }

                            }

                        });



                    });


                    page.Footer();
                });
            })
              .GeneratePdf(path);
        return path;
    }

    public string XuatMau13CTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var NUMBER_ROW = 10; // Số hàng cần nhập liệu + 1 trong bảng

                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < NUMBER_ROW; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"I_{i + 2}_{col}"] = "";
                    }
                }

                // Biến động nhập theo hàng và cột trong bảng
                II_values["I_2_2"] = "Nội dung1";
                II_values["I_2_3"] = "Nội dung2";
                II_values["I_2_4"] = "Nội dung3";


                var NUMBER_ROW_TABLE_2 = 5;

                for (int i = 0; i < NUMBER_ROW_TABLE_2; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"II_{i + 2}_{col}"] = "";
                    }
                }

                II_values["II_2_2"] = "Nội dung1";
                II_values["II_2_3"] = "Nội dung2";
                II_values["II_2_4"] = "Nội dung3";

                var NUMBER_ROW_TABLE_3 = 15;

                for (int i = 0; i < NUMBER_ROW_TABLE_3; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"III_{i + 2}_{col}"] = "";
                    }
                }

                II_values["III_2_2"] = "Nội dung1";
                II_values["III_2_3"] = "Nội dung2";
                II_values["III_2_4"] = "Nội dung3";

                var NUMBER_ROW_TABLE_4 = 20;

                for (int i = 0; i < NUMBER_ROW_TABLE_4; i++)
                {
                    for (int col = 2; col <= 5; col++)
                    {
                        II_values[$"IV_{i + 2}_{col}"] = "";
                    }
                }

                II_values["IV_2_2"] = "Nội dung1";
                II_values["IV_2_3"] = "Nội dung2";
                II_values["IV_2_4"] = "Nội dung3";
                II_values["IV_2_5"] = "Nội dung4";

                var NUMBER_ROW_TABLE_5 = 20;

                for (int i = 0; i < NUMBER_ROW_TABLE_5; i++)
                {
                    for (int col = 2; col <= 3; col++)
                    {
                        II_values[$"V_{i + 2}_{col}"] = "";
                    }
                }

                II_values["V_2_2"] = "Nội dung1";
                II_values["V_2_3"] = "Nội dung2";
                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;
                dynamic? step6;

                dynamic tableData2 = null;
                dynamic tableData3 = null;
                dynamic tableData4 = null;
                dynamic tableData5 = null;
                dynamic tableData6 = null;

               
                foreach (WorkflowStep workflowStep in steps)
                {

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            tableData3 = step3.form.data.d;
                            
                        }

                    }


                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData2 = step2.form.data.d;
                          
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            tableData4 = step4.form.data.d;
                            
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {
                            tableData5 = step5.form.data.d;
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 6)
                    {
                        step6 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step6 != null)
                        {
                           tableData6 = step6.form.data.d;
                        }
                    }


                }




                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 13c/TBT").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("KẾT QUẢ HOẠT ĐỘNG CỦA MẠNG LƯỚI TBT VIỆT NAM").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("VÀ KẾT QUẢ HOẠT ĐỘNG CỦA BAN LIÊN NGÀNH TBT").Bold();
                            table.Cell().Row(2).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Thủ tướng Chính phủ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Báo cáo hoạt động Thông báo").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.ConstantColumn(120);
                                columns.ConstantColumn(120);
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Nội dung thông báo").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Ngày thông báo").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Mã thông báo").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string Ngay = String.Format("{0:dd/MM/yyyy}", item.Ngay);                               
                                    string Ma = item.Ma.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    if (NoiDung == "Tổng số thông báo đã gửi")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14);
                                    }
                                   
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(Ngay).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(Ma).FontSize(14);

                                    i++;
                                }

                            }
                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("2. Báo cáo hoạt động Hỏi đáp").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên cơ quan/tổ chức/ nước thành viên hỏi").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Nội dung câu hỏi").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Nội dung trả lời").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string NoiDungCauHoi = item.NoiDungCauHoi.ToString();
                                    string NoiDungTraLoi = item.NoiDungTraLoi.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();

                                    if (TenCoQuan == "Tổng số câu hỏi nhận được")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    }
                                   
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(NoiDungCauHoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(NoiDungTraLoi).FontSize(14);

                                    i++;
                                }

                            }

                          

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3. Báo cáo hoạt động tuyên truyền về TBT").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Hình thức tuyên truyền").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Nội dung tuyên truyền").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Số lượng").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData4)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string HinhThuc = item.HinhThuc.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string SoLuong = item.SoLuong.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLuong).FontSize(14);

                                    i++;
                                }

                            }

                          

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("4. Báo cáo hoạt động triển khai các cam kết TBT trong các Hiệp định thương mại tự do (FTAs)").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Hiệp định FTAs").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Nội dung thực hiện cam kết").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Hình thức thực hiện").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("Sản phẩm/kết quả đạt được").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData5)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.id.ToString();
                                    string HiepDinh = item.HiepDinh.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string HinhThuc = item.HinhThuc.ToString();
                                    string SanPham = item.SanPham.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(HiepDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(HinhThuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(SanPham).FontSize(14);

                                    i++;
                                }

                            }

                        });


                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("5. Báo cáo hoạt động của Ban liên ngành TBT").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });

                           
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Nội dung").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Kết quả đạt được").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData6)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.id.ToString();
                                    string NoiDung = item.NoiDung.ToString();
                                    string KetQua = item.NoiDung.ToString();
                                   
                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(KetQua).FontSize(14);
                                  
                                    i++;
                                }

                            }

                        });
                    });
                    page.Footer();
                });
            })
            .GeneratePdf(path);
        return path;
    }

    public string XuatMau14TT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";


                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;

                dynamic tableData1 = null;
                dynamic tableData2 = null;
                

                dynamic tableData4_1 = null;
                dynamic tableData4_2 = null;
                dynamic tableData4_3 = null;
                dynamic tableData4_4 = null;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData1 = step2.form.data.d;
                            //tableDataTotal1 = step2.form.data.total;
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            tableData2 = step3.form.data.d;
                            //tableDataTotal2 = step3.form.data.total;
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            tableData4_1 = step4.form.data.d1;
                            tableData4_2 = step4.form.data.d2;
                            tableData4_3 = step4.form.data.d3;
                            tableData4_4 = step4.form.data.d4;

                        }

                    }

                }


                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("14. Báo cáo tình hình quản lý nhà nước về đo lường").Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 14/ĐL").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("TÌNH HÌNH QUẢN LÝ NHÀ NƯỚC VỀ ĐO LƯỜNG").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("").Bold();
                            table.Cell().Row(2).Column(3).Text("UBND cấp tỉnh");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Kết quả hoạt động tiếp nhận công bố, chứng nhận đủ điều kiện sử dụng dấu định lượng trên nhãn hàng đóng gói sẵn nhóm 2").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(110);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên doanh nghiệp").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Số tiếp nhận công bố").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Số Giấy chứng nhận").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("Ngày cấp giấy chứng nhận").Bold();
                            table.Cell().Row(1).Column(6).Element(Title).Text("Tên hàng đóng gói sẵn nhóm 2").Bold();
                            table.Cell().Row(1).Column(7).Element(Title).Text("Lượng danh định (Qn)").Bold();
                            table.Cell().Row(1).Column(8).Element(Title).Text("Khối lượng bao bì").Bold();
                            table.Cell().Row(1).Column(9).Element(Title).Text("Số lượng sản xuất").Bold();
                            table.Cell().Row(1).Column(10).Element(Title).Text("Số lượng nhập khẩu").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData1)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string TenDoanhNghiep = item.TenDoanhNghiep.ToString();
                                    string SoTiepNhan = item.SoTiepNhan.ToString();
                                    string SoGiayChungNhan = item.SoGiayChungNhan.ToString();
                                    string NgayCap = item.NgayCap.ToString();
                                    string TenHangDongGoi = item.TenHangDongGoi.ToString();
                                    string LuongDanhDinh = item.LuongDanhDinh.ToString();
                                    string KhoiLuong = item.KhoiLuong.ToString();
                                    string SoLuongSanXuat = item.SoLuongSanXuat.ToString();
                                    string SoLuongNhapKhau = item.SoLuongNhapKhau.ToString();



                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenDoanhNghiep).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(SoTiepNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoGiayChungNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(NgayCap).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(TenHangDongGoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(LuongDanhDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(KhoiLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(SoLuongSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(SoLuongNhapKhau).FontSize(14);

                                    i++;
                                }

                            }



                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("2. Tình hình thực hiện kiểm định đối chứng, số lượng phương tiện đo nhóm 2 phải được kiểm định đối chứng, tổ chức được chỉ định thực hiện kiểm định đối chứng trên địa bàn địa phương").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên tổ chức được chỉ định thực hiện kiểm định đối chứng").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Tên phương tiện đo kiểm định đối chứng").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(4).Element(Title).Text("Số lượng phương tiện đo đã kiểm định").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(7).Element(Title).Text("Sự đáp ứng theo Quyết định chỉ định kiểm định phương tiện đo (tích 'x')").Bold();

                            table.Cell().Row(2).Column(4).Element(Title).Text("Tổng").Bold();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Đạt").Italic();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Không đạt").Italic();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Về số lượng phương tiện đo được kiểm định").Italic();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Về thời gian thực hiện").Italic();

                            uint rowIndex = 1;
                            uint i = 1;

                        foreach (var item in tableData2)
                        {
                            if (item != null)
                            {
                                string index = i.ToString();

                                rowIndex = i + 2;
                                string Index = item.tt.ToString();
                                string TenToChuc = item.TenToChuc.ToString();
                                string TenPhuongTien = item.TenPhuongTien.ToString();
                                string SoLuong_Tong = item.SoLuong_Tong.ToString();
                                string SoLuong_Dat = item.SoLuong_Dat.ToString();
                                string SoLuong_KhongDat = item.SoLuong_KhongDat.ToString();
                                string DapUng_SoLuong = item.DapUng_SoLuong.ToString();
                                string DapUng_ThoiGian = item.DapUng_ThoiGian.ToString();
                                    //check tham số

                                table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14);
                                table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenToChuc).FontSize(14);
                                table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TenPhuongTien).FontSize(14);
                                table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLuong_Tong).FontSize(14);
                                table.Cell().Row(rowIndex).Column(5).Element(Title).Text(SoLuong_Dat).FontSize(14);
                                table.Cell().Row(rowIndex).Column(6).Element(Title).Text(SoLuong_KhongDat).FontSize(14);

                                    if (TenToChuc == "Tổng")
                                    {
                                        table.Cell().Row(rowIndex).Column(7).Element(Title).Text(DapUng_SoLuong).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(8).Element(Title).Text(DapUng_ThoiGian).FontSize(14);


                                    }
                                    else
                                    {
                         
                                        table.Cell().Row(rowIndex).Column(7).Element(Title).Text(DapUng_SoLuong == "true" ? "X" : "").FontSize(14);
                                        table.Cell().Row(rowIndex).Column(8).Element(Title).Text(DapUng_ThoiGian == "true" ? "X" : "").FontSize(14);
                                    }
                               

                                i++;
                            }

                            }
                          

                        });

                        column.Item().PaddingTop(18).AlignLeft().Text("3. Kết quả kiểm tra nhà nước về đo lường: Kiểm tra phương tiện đo, phép đo, hoạt động kiểm định, hiệu chuẩn, thử nghiệm ... (chú ý báo cáo tình hình thực hiện kiểm tra đặc thù trong kiểm tra đo lường, chất lượng trong kinh doanh, xăng dầu) ").Bold().FontSize(12);
                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.1. Phương tiện đo").Italic().Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên phương tiện đo").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(3).Element(Title).Text("Kết quả").Bold();

                            table.Cell().Row(2).Column(3).Element(Title).Text("Số cơ sở được kiểm tra").Bold();
                            table.Cell().Row(2).Column(4).Element(Title).Text("Số phương tiện đo được kiểm tra").Bold();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Số cơ sở vi phạm ").Bold();

                            uint rowIndex = 3;
                            uint i = 1;
                            foreach (var item in tableData4_1)
                            {
                                if (item != null)
                                {

                                    string index = item.tt.ToString();


                                    string Ten = item.Ten.ToString();
                                    string KetQua_CoSo = item.KetQua_CoSo.ToString();
                                    string KetQua_PhuongTien = item.KetQua_PhuongTien.ToString();
                                    string KetQua_CoSoViPham = item.KetQua_CoSoViPham.ToString();

                                    if (Ten == "Tổng")
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text("").FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text("Tổng").FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(Ten).FontSize(14);
                                    }
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(KetQua_CoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(KetQua_PhuongTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(KetQua_CoSoViPham).FontSize(14);

                                    rowIndex++;
                                }

                            }
                            //table.Cell().Row(rowIndex + 1).Column(1).Element(Title).Text("").Bold();
                            //table.Cell().Row(rowIndex + 1).Column(2).Element(Title).Text("Tổng").Bold();
                            //table.Cell().Row(rowIndex + 1).Column(3).Element(Title).Text(TongSoCoSoDuocKiemTra1).Bold();
                            //table.Cell().Row(rowIndex + 1).Column(4).Element(Title).Text(TongSoPhuongTien1).Bold();
                            //table.Cell().Row(rowIndex + 1).Column(5).Element(Title).Text(TongSoCoSoViPham1).Bold();

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.2. Phép đo").Italic().Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên phép đo").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(3).Element(Title).Text("Kết quả").Bold();

                            table.Cell().Row(2).Column(3).Element(Title).Text("Số cơ sở được kiểm tra").Bold();
                            table.Cell().Row(2).Column(4).Element(Title).Text("Số phép đo được kiểm tra").Bold();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Số cơ sở vi phạm").Bold();

                            uint rowIndex = 3;
                            uint i = 1;
                            foreach (var item in tableData4_2)
                            {
                                if (item != null)
                                {
                                    //string index = i.ToString();

                                    //rowIndex = i + 2;
                                    string index = item.tt.ToString();
                                    string Ten = item.Ten.ToString();
                                    string KetQua_CoSo = item.KetQua_CoSo.ToString();
                                    string KetQua_PhuongTien = item.KetQua_PhepDo.ToString();
                                    string KetQua_CoSoViPham = item.KetQua_CoSoViPham.ToString();


                                    if (Ten == "Tổng")
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text("").FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text("Tổng").FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(Ten).FontSize(14);
                                    }

                                    //table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    //table.Cell().Row(rowIndex).Column(2).Element(Title).Text(Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(KetQua_CoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(KetQua_PhuongTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(KetQua_CoSoViPham).FontSize(14);

                                    //i++;
                                    rowIndex++;
                                }

                            }

                            //table.Cell().Row(rowIndex + 1).Column(1).Element(Title).Text("").Bold();
                            //table.Cell().Row(rowIndex + 1).Column(2).Element(Title).Text("Tổng").Bold();
                            //table.Cell().Row(rowIndex + 1).Column(3).Element(Title).Text(TongSoCoSoDuocKiemTra2).Bold();
                            //table.Cell().Row(rowIndex + 1).Column(4).Element(Title).Text(TongSoPhuongTien2).Bold();
                            //table.Cell().Row(rowIndex + 1).Column(5).Element(Title).Text(TongSoCoSoViPham2).Bold();
                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.3. Lượng của hàng hoá đóng gói sẵn").Italic().Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên của hàng đóng gói sẵn").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(3).Element(Title).Text("Kết quả").Bold();

                            table.Cell().Row(2).Column(3).Element(Title).Text("Số cơ sở được kiểm tra").Bold();
                            table.Cell().Row(2).Column(4).Element(Title).Text("Số hàng đóng gói sẵn được kiểm tra").Bold();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Số cơ sở vi phạm").Bold();

                            uint rowIndex = 3;
                            uint i = 1;
                            foreach (var item in tableData4_3)
                            {
                                if (item != null)
                                {
                                    //string index = i.ToString();

                                    //rowIndex = i + 2;
                                    string index = item.tt.ToString();
                                    string Ten = item.Ten.ToString();
                                    string KetQua_CoSo = item.KetQua_CoSo.ToString();
                                    string KetQua_HangDongGoi = item.KetQua_HangDongGoi.ToString();
                                    string KetQua_CoSoViPham = item.KetQua_CoSoViPham.ToString();


                                    if (Ten == "Tổng")
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text("").FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text("Tổng").FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(Ten).FontSize(14);
                                    }
                                    //table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    //table.Cell().Row(rowIndex).Column(2).Element(Title).Text(Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(KetQua_CoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(KetQua_HangDongGoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(KetQua_CoSoViPham).FontSize(14);

                                    //i++;
                                    rowIndex++;
                                }

                            }



                        });


                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.4. Hoạt động kiểm định, hiệu chuẩn, thử nghiệm").Italic().Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.ConstantColumn(400);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Nội dung báo cáo").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Số lượng").Bold();

                            uint rowIndex = 2;
                            uint i = 1;
                            foreach (var item in tableData4_4)
                            {
                                if (item != null)
                                {
                                    //string index = i.ToString();

                                    //rowIndex = i + 1;

                                    string index = item.tt.ToString();
                                    string Ten = item.NoiDung.ToString();
                                    string SoLuong = item.SoLuong.ToString();

                                    if (Ten == "Tổng")
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text("").FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text("Tổng").FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(Ten).FontSize(14);
                                    }

                                    //table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    //table.Cell().Row(rowIndex).Column(2).Element(Title).Text(Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(SoLuong).FontSize(14);

                                    rowIndex++;
                                }

                            }

                            //table.Cell().Row(rowIndex + 1).Column(1).Element(Title).Text("").Bold();
                            //table.Cell().Row(rowIndex + 1).Column(2).Element(Title).Text("Tổng").Bold();
                            //table.Cell().Row(rowIndex + 1).Column(3).Element(Block).Text(TongSoLuong).Bold();

                        });
                    });

                    page.Footer();
                });
            })
               .GeneratePdf(path);
        return path;
    }

    public string XuatMau15ATT13(string path, Workflow workflow)
    {


        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

              
                var NUMBER_ROW = 10; // Số hàng cần nhập liệu + 1 trong bảng

                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < NUMBER_ROW; i++)
                {
                    for (int col = 2; col <= 10; col++)
                    {
                        II_values[$"III_{i + 2}_{col}"] = "";
                    }
                }

                // Biến động nhập theo hàng và cột trong bảng
                II_values["III_3_2"] = "Nội dung1";
                II_values["III_3_3"] = "Nội dung2";
                II_values["III_3_4"] = "Nội dung3";
                II_values["III_3_5"] = "Nội dung4";
                II_values["III_3_6"] = "Nội dung5";
                II_values["III_3_7"] = "Nội dung6";
                II_values["III_3_8"] = "Nội dung7";
                II_values["III_3_9"] = "Nội dung8";
                II_values["III_3_10"] = "Nội dung9";

                var NUMBER_ROW_3_2 = 10; // Số hàng cần nhập liệu + 1 trong bảng

                for (int i = 0; i < NUMBER_ROW_3_2; i++)
                {
                    for (int col = 2; col <= 16; col++)
                    {
                        II_values[$"IV_{i + 2}_{col}"] = "";
                    }
                }

                // Biến động nhập theo hàng và cột trong bảng
                II_values["IV_3_2"] = "Nội dung";

                var NUMBER_ROW_3_3 = 10; // Số hàng cần nhập liệu + 1 trong bảng

                for (int i = 0; i < NUMBER_ROW_3_3; i++)
                {
                    for (int col = 2; col <= 5; col++)
                    {
                        II_values[$"V_{i + 2}_{col}"] = "";
                    }
                }

                // Biến động nhập theo hàng và cột trong bảng
                II_values["V_2_2"] = "Nội dung";

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;

                dynamic tableData4_1 = null;
                dynamic tableData4_2 = null;
                dynamic tableData4_3 = null;
                dynamic tableData2 = null;
                dynamic tableData3 = null;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            tableData4_1 = step4.form.data.d1;
                            tableData4_2 = step4.form.data.d2;
                            tableData4_3 = step4.form.data.d3;
                          
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            tableData3 = step3.form.data.d;
                           
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData2 = step2.form.data.d;
                       

                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }
                    }       
                }              
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("15. Báo cáo tính hình kiểm tra chất lượng sản phẩm, hàng hoá và hoạt động đánh giá sự phù hợp").Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 15a/KTCL").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("KẾT QUẢ KIỂM TRA CHẤT LƯỢNG SẢN PHẨM").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("HÀNG HOÁ CỦA ĐỊA PHƯƠNG").Bold();
                            table.Cell().Row(2).Column(3).Text("UBND cấp tỉnh");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay+ " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công nghệ");
                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("");

                        });
                        

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Kết quả kiểm tra chất lượng sản phẩm trong sản xuất").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(3).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(2).Element(Title).Text("Lĩnh vực sản phẩm được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(3).Element(Title).Text("Tổng số cơ sở được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(4).Element(Title).Text("Số lô sản phẩm được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(5).Element(Title).Text("Số cơ sở vi phạm").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(6).Element(Title).Text("Số cơ sở bị xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(7).Element(Title).Text("Số sản phẩm vi phạm (số lô)").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(8).Element(Title).Text("Kết quả xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(12).Element(Title).Text("Lý do những cơ sở vi phạm không xử lý").Bold();

                            table.Cell().RowSpan(2).Row(2).Column(8).Element(Title).Text("Tạm dừng sản xuất lưu thông (số cơ sở)").Bold();
                            table.Cell().ColumnSpan(2).Row(2).Column(9).Element(Title).Text("Xử phạt vi phạm hành chính").Bold();
                            table.Cell().RowSpan(2).Row(2).Column(11).Element(Title).Text("Biện pháp khắc phục hậu quả").Bold();

                            table.Cell().Row(3).Column(9).Element(Title).Text("Số cơ sở bị xử phạt").Bold();
                            table.Cell().Row(3).Column(10).Element(Title).Text("Số tiền (triệu đồng)").Bold();

                            //
                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 3;

                                    string Index = item.tt.ToString();
                                    string LinhVuc = item.LinhVuc.ToString();
                                    string TongCoSo = item.TongCoSo.ToString();
                                    string SanPhamKiemTra = item.SanPhamKiemTra.ToString();
                                    string CoSoViPham = item.CoSoViPham.ToString();
                                    string CoSoBiXuLy = item.CoSoBiXuLy.ToString();
                                    string SanPhamViPham = item.SanPhamViPham.ToString();
                                    string LyDo = item.LyDo.ToString();
                                    string TamDungSanXuat = item.TamDungSanXuat.ToString();
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc.ToString();
                                    string ViPham_SoCoSo = item.ViPham_SoCoSo.ToString();
                                    string ViPham_SoTien = item.ViPham_SoTien.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    if (LinhVuc == "Tổng")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(LinhVuc).FontSize(14).Bold();
                                    }
                                    else
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(LinhVuc).FontSize(14);
                                    }                                                          
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SanPhamKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoBiXuLy).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(LyDo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(ViPham_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(ViPham_SoTien).FontSize(14);
                                    i++;
                                }
                            }
                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("2. Kết quả kiểm tra chất lượng hàng hoá trong lưu thông").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(3).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(2).Element(Title).Text("Lĩnh vực sản phẩm được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(3).Element(Title).Text("Tổng số cơ sở được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(4).Element(Title).Text("Số lô sản phẩm được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(5).Element(Title).Text("Số cơ sở vi phạm").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(6).Element(Title).Text("Số cơ sở bị xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(7).Element(Title).Text("Số sản phẩm vi phạm (số lô)").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(8).Element(Title).Text("Kết quả xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(12).Element(Title).Text("Lý do những cơ sở vi phạm không xử lý").Bold();

                            table.Cell().RowSpan(2).Row(2).Column(8).Element(Title).Text("Tạm dừng sản xuất lưu thông (số cơ sở)").Bold();
                            table.Cell().ColumnSpan(2).Row(2).Column(9).Element(Title).Text("Xử phạt vi phạm hành chính").Bold();
                            table.Cell().RowSpan(2).Row(2).Column(11).Element(Title).Text("Biện pháp khắc phục hậu quả").Bold();

                            table.Cell().Row(3).Column(9).Element(Title).Text("Số cơ sở bị xử phạt").Bold();
                            table.Cell().Row(3).Column(10).Element(Title).Text("Số tiền (triệu đồng)").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 3;

                                    string Index = item.tt.ToString();
                                    string LinhVuc = item.LinhVuc.ToString();
                                    string TongCoSo = item.TongCoSo.ToString();
                                    string SanPhamKiemTra = item.SanPhamKiemTra.ToString();
                                    string CoSoViPham = item.CoSoViPham.ToString();
                                    string CoSoBiXuLy = item.CoSoBiXuLy.ToString();
                                    string SanPhamViPham = item.SanPhamViPham.ToString();
                                    string LyDo = item.LyDo.ToString();
                                    string TamDungSanXuat = item.TamDungSanXuat.ToString();
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc.ToString();
                                    string ViPham_SoCoSo = item.ViPham_SoCoSo.ToString();
                                    string ViPham_SoTien = item.ViPham_SoTien.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    if (LinhVuc=="Tổng")
                                    {                   
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(LinhVuc).FontSize(14).Bold();
                                    }
                                    else
                                    {                                      
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(LinhVuc).FontSize(14);
                                    }
                                  
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SanPhamKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoBiXuLy).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(LyDo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(ViPham_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(ViPham_SoTien).FontSize(14);

                                    i++;
                                }

                            }
                         

                        });

                        column.Item().PaddingTop(18).AlignLeft().Text("3. Kết quả kiểm tra chất lượng sản phẩm, hàng hoá trong nhập khẩu").Bold().FontSize(12);
                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.1. Hàng hoá đăng ký kiểm tra đã được xác nhận/ ra Thông báo kết quả kiểm tra").Italic().Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.ConstantColumn(130);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên phân nhóm hàng hoá").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Lĩnh vực hàng hoá").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(4).Element(Title).Text("Tổng số hàng hoá đăng ký kiểm tra đã được xác nhận/ ra Thông báo kết quả kiểm tra").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(7).Element(Title).Text("Chất lượng").Bold();

                            table.Cell().Row(2).Column(4).Element(Title).Text("Số lô").Italic();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Số lượng/Khối lượng hàng").Italic();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Đơn vị tính").Italic();

                            table.Cell().Row(2).Column(7).Element(Title).Text("Số lô đạt").Italic();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Số lô không đạt").Italic();
                            table.Cell().Row(2).Column(9).Element(Title).Text("Số lô không hoàn thiện hồ sơ").Italic();
                            table.Cell().Row(2).Column(10).Element(Title).Text("Số lô chờ kết quả").Italic();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4_1)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;
                                    string Index = item.id.ToString();
                                    string TenPhanNhom = item.TenPhanNhom.ToString();
                                    string LinhVuc = item.LinhVuc.ToString();
                                    string XacNhan_SoLo = item.XacNhan_SoLo.ToString();
                                    string XacNhan_SoLuong = item.XacNhan_SoLuong.ToString();
                                    string XacNhan_DonVi = item.XacNhan_DonVi.ToString();
                                    string ChatLuong_Dat = item.ChatLuong_Dat.ToString();
                                    string ChatLuong_KhongDat = item.ChatLuong_KhongDat.ToString();
                                    string ChatLuong_KhongHoanThien = item.ChatLuong_KhongHoanThien.ToString();
                                    string ChatLuong_ChoKetQua = item.ChatLuong_ChoKetQua.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenPhanNhom).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(XacNhan_SoLo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(XacNhan_SoLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(XacNhan_DonVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(ChatLuong_Dat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(ChatLuong_KhongDat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(ChatLuong_KhongHoanThien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(ChatLuong_ChoKetQua).FontSize(14);

                                    i++;
                                }

                            }

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.2. Kiểm tra định kỳ/ đột xuất tại cơ sở lưu giữ hàng hoá").Italic().Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(2).Element(Title).Text("Cơ sở được kiểm tra định kỳ/đột xuất tại cơ sở lưu giữ hàng hoá").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(4).Element(Title).Text("Sản phẩm, hàng hoá được kiể tra").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(8).Element(Title).Text("Số hàng hoá vi phạm").Bold();
                            table.Cell().ColumnSpan(6).Row(1).Column(11).Element(Title).Text("Biện pháp xử lý (tích dấu 'x') ").Bold();

                            table.Cell().Row(2).Column(2).Element(Title).Text("Tên").Italic();
                            table.Cell().Row(2).Column(3).Element(Title).Text("Địa chỉ").Italic();
                            table.Cell().Row(2).Column(4).Element(Title).Text("Tên hàng hoá").Italic();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Lĩnh vực hàng hoá").Italic();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Số lượng/khối lượng").Italic();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Đơn vị tính").Italic();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Về chất lượng").Italic();
                            table.Cell().Row(2).Column(9).Element(Title).Text("Về hồ sơ").Italic();
                            table.Cell().Row(2).Column(10).Element(Title).Text("Khác").Italic();
                            table.Cell().Row(2).Column(11).Element(Title).Text("Nâng mức biện pháp quản lý").Italic();
                            table.Cell().Row(2).Column(12).Element(Title).Text("Tái xuất, tái chế").Italic();
                            table.Cell().Row(2).Column(13).Element(Title).Text("Tiêu huỷ").Italic();
                            table.Cell().Row(2).Column(14).Element(Title).Text("Chuyển đổi mục đích sử dụng").Italic();
                            table.Cell().Row(2).Column(15).Element(Title).Text("Khác").Italic();
                            table.Cell().Row(2).Column(16).Element(Title).Text("Phạt tiền (triệu đồng)").Italic();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4_2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;
                                    string Index = item.id.ToString();
                                    string CoSo_Ten = item.CoSo_Ten.ToString();
                                    string CoSo_DiaChi = item.CoSo_DiaChi.ToString();
                                    string SanPham_Ten = item.SanPham_Ten.ToString();
                                    string SanPham_LinhVuc = item.SanPham_LinhVuc.ToString();
                                    string SanPham_SoLuong = item.SanPham_SoLuong.ToString();
                                    string SanPham_DonVi = item.SanPham_DonVi.ToString();
                                    string ViPham_ChatLuong = item.ViPham_ChatLuong.ToString();
                                    string ViPham_HoSo = item.ViPham_HoSo.ToString();
                                    string ViPham_Khac = item.ViPham_Khac.ToString();
                                    bool BienPhap_NangMuc = item.BienPhap_NangMuc;
                                    bool BienPhap_TaiXuat = item.BienPhap_TaiXuat;
                                    bool BienPhap_TieuHuy = item.BienPhap_TieuHuy;
                                    bool BienPhap_ChuyenDoi = item.BienPhap_ChuyenDoi;
                                    bool BienPhap_Khac = item.BienPhap_Khac;
                                    bool BienPhap_PhatTien = item.BienPhap_PhatTien;

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(CoSo_Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(CoSo_DiaChi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SanPham_Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(SanPham_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(SanPham_SoLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPham_DonVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(ViPham_ChatLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(ViPham_HoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(ViPham_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhap_NangMuc == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(BienPhap_TaiXuat == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(13).Element(Title).Text(BienPhap_TieuHuy == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(14).Element(Title).Text(BienPhap_ChuyenDoi == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(15).Element(Title).Text(BienPhap_Khac == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(16).Element(Title).Text(BienPhap_PhatTien ==true ? "X":"").FontSize(14);
                                    i++;
                                }

                            }
                        });
                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.3. Cơ sở được áp dụng biện pháp miễn giảm kiểm tra").Italic().Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.ConstantColumn(200);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên cơ sở được áp dụng biện pháp miễn giảm kiểm tra").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Địa chỉ").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Tên hàng hoá").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("Thời hạn miễn").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4_3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt.ToString();
                                    string TenCoSo = item.TenCoSo.ToString();
                                    string DiaChi = item.DiaChi.ToString();
                                    string TenHangHoa = item.TenHangHoa.ToString();
                                    string ThoiHanMien = item.ThoiHanMien.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(DiaChi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(TenHangHoa).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(ThoiHanMien).FontSize(14);

                                    i++;
                                }

                            }
                            

                        });
                    });
                    page.Footer();
                });
            })
              .GeneratePdf(path);
        return path;
    }

    public string XuatMau15BTT13(string path, Workflow workflow)
    {

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

              

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;

                dynamic tableData3 = null;
                dynamic tableData2 = null;
                
                dynamic tableData4_1 = null;
                dynamic tableData4_2 = null;
                dynamic tableData4_3 = null;

                dynamic tableDataTotal2 = null;
                dynamic tableDataTotal3 = null;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            tableData4_1 = step4.form.data.d1;
                            tableData4_2 = step4.form.data.d2;
                            tableData4_3 = step4.form.data.d3;
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            tableData3 = step3.form.data.d;

                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }

                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData2 = step2.form.data.d;
                           
                        }

                    }

                }


                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 15b/KTCL").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("KẾT QUẢ KIỂM TRA CHẤT LƯỢNG SẢN PHẦM, HÀNG HOÁ").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("THUỘC TRÁCH NHIỆM QUẢN LÝ CỦA BỘ, NGÀNH").Bold();
                            table.Cell().Row(2).Column(3).Text("Bộ quản lý ngành, lĩnh vực");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Kết quả kiểm tra chất lượng sản phẩm trong sản xuất").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(3).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(2).Element(Title).Text("Nhóm hàng hoá được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(3).Element(Title).Text("Tổng số cơ sở được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(4).Element(Title).Text("Số lô sản phẩm được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(5).Element(Title).Text("Số cơ sở vi phạm").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(6).Element(Title).Text("Số cơ sở bị xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(7).Element(Title).Text("Số sản phẩm vi phạm (số lô)").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(8).Element(Title).Text("Kết quả xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(12).Element(Title).Text("Lý do những cơ sở vi phạm không xử lý").Bold();

                            table.Cell().RowSpan(2).Row(2).Column(8).Element(Title).Text("Tạm dừng sản xuất lưu thông (số cơ sở)").Bold();
                            table.Cell().ColumnSpan(2).Row(2).Column(9).Element(Title).Text("Xử phạt vi phạm hành chính").Bold();
                            table.Cell().RowSpan(2).Row(2).Column(11).Element(Title).Text("Biện pháp khắc phục hậu quả").Bold();

                            table.Cell().Row(3).Column(9).Element(Title).Text("Số cơ sở bị xử phạt").Bold();
                            table.Cell().Row(3).Column(10).Element(Title).Text("Số tiền (triệu đồng)").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 3;

                                    string Index = item.tt ?? "";
                                    string NhomHangHoa = item.NhomHangHoa ?? "";
                                    string TongCoSo = item.TongCoSo.ToString();
                                    string SanPhamKiemTra = item.SanPhamKiemTra ?? "";
                                    string CoSoViPham = item.CoSoViPham ?? "";
                                    string CoSoBiXuLy = item.CoSoBiXuLy ?? "";
                                    string SanPhamViPham = item.SanPhamViPham ?? "";
                                    string LyDo = item.LyDo ?? "";
                                    string TamDungSanXuat = item.TamDungSanXuat ?? "";
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc ?? "";
                                    string XuPhat_CoSo = item.XuPhat_CoSo ?? "";
                                    string XuPhat_SoTien = item.XuPhat_SoTien ?? "";

                                   

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NhomHangHoa).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SanPhamKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoBiXuLy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuPhat_CoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuPhat_SoTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(LyDo).FontSize(14);

                                    i++;
                                }
                            }
                           
                            
                            




                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("2. Kết quả kiểm tra chất lượng hàng hoá trong lưu thông").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(3).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(2).Element(Title).Text("Nhóm hàng hoá được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(3).Element(Title).Text("Tổng số cơ sở được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(4).Element(Title).Text("Số lô sản phẩm được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(5).Element(Title).Text("Số cơ sở vi phạm").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(6).Element(Title).Text("Số cơ sở bị xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(7).Element(Title).Text("Số sản phẩm vi phạm (số lô)").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(8).Element(Title).Text("Kết quả xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(12).Element(Title).Text("Lý do những cơ sở vi phạm không xử lý").Bold();

                            table.Cell().RowSpan(2).Row(2).Column(8).Element(Title).Text("Tạm dừng sản xuất lưu thông (số cơ sở)").Bold();
                            table.Cell().ColumnSpan(2).Row(2).Column(9).Element(Title).Text("Xử phạt vi phạm hành chính").Bold();
                            table.Cell().RowSpan(2).Row(2).Column(11).Element(Title).Text("Biện pháp khắc phục hậu quả").Bold();

                            table.Cell().Row(3).Column(9).Element(Title).Text("Số cơ sở bị xử phạt").Bold();
                            table.Cell().Row(3).Column(10).Element(Title).Text("Số tiền (triệu đồng)").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 3;

                                    string Index = item.tt ?? "";
                                    string NhomHangHoa = item.NhomHangHoa ?? "";
                                    string TongCoSo = item.TongCoSo ?? "";
                                    string SanPhamKiemTra = item.SanPhamKiemTra ?? "";
                                    string CoSoViPham = item.CoSoViPham ?? "";
                                    string CoSoBiXuLy = item.CoSoBiXuLy ?? "";
                                    string SanPhamViPham = item.SanPhamViPham ?? "";
                                    string LyDo = item.LyDo ?? "";
                                    string TamDungSanXuat = item.TamDungSanXuat ?? "";
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc ?? "";
                                    string XuPhat_CoSo = item.XuPhat_CoSo ?? "";
                                    string XuPhat_SoTien = item.XuPhat_SoTien ?? "";

                               

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NhomHangHoa).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SanPhamKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoBiXuLy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuPhat_CoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuPhat_SoTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(LyDo).FontSize(14);

                                    i++;
                                }
                                
                            }
                           

                        });

                        column.Item().PaddingTop(18).AlignLeft().Text("3. Kết quả kiểm tra chất lượng sản phẩm, hàng hoá trong nhập khẩu").Bold().FontSize(12);
                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.1. Hàng hoá đăng ký kiểm tra đã được xác nhận/ ra Thông báo kết quả kiểm tra").Italic().Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.ConstantColumn(130);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên phân nhóm hàng hoá").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Lĩnh vực hàng hoá").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(4).Element(Title).Text("Tổng số hàng hoá đăng ký kiểm tra đã được xác nhận/ ra Thông báo kết quả kiểm tra").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(7).Element(Title).Text("Chất lượng").Bold();

                            table.Cell().Row(2).Column(4).Element(Title).Text("Số lô").Italic();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Số lượng/Khối lượng hàng").Italic();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Đơn vị tính").Italic();

                            table.Cell().Row(2).Column(7).Element(Title).Text("Số lô đạt").Italic();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Số lô không đạt").Italic();
                            table.Cell().Row(2).Column(9).Element(Title).Text("Số lô không hoàn thiện hồ sơ").Italic();
                            table.Cell().Row(2).Column(10).Element(Title).Text("Số lô chờ kết quả").Italic();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4_1)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;

                                    string TenPhanNhom = item.TenPhanNhom.ToString();
                                    string LinhVuc = item.LinhVuc.ToString();
                                    string XacNhan_SoLo = item.XacNhan_SoLo.ToString();
                                    string XacNhan_SoLuong = item.XacNhan_SoLuong.ToString();
                                    string XacNhan_DonVi = item.XacNhan_DonVi.ToString();
                                    string ChatLuong_Dat = item.ChatLuong_Dat.ToString();
                                    string ChatLuong_KhongDat = item.ChatLuong_KhongDat.ToString();
                                    string ChatLuong_KhongHoanThien = item.ChatLuong_KhongHoanThien.ToString();
                                    string ChatLuong_ChoKetQua = item.ChatLuong_ChoKetQua.ToString();
                                   

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenPhanNhom).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(XacNhan_SoLo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(XacNhan_SoLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(XacNhan_DonVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(ChatLuong_Dat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(ChatLuong_KhongDat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(ChatLuong_KhongHoanThien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(ChatLuong_ChoKetQua).FontSize(14);

                                    i++;
                                }

                            }
                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.2. Kiểm tra định kỳ/ đột xuất tại cơ sở lưu giữ hàng hoá").Italic().Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(2).Element(Title).Text("Cơ sở được kiểm tra định kỳ/đột xuất tại cơ sở lưu giữ hàng hoá").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(4).Element(Title).Text("Sản phẩm, hàng hoá được kiể tra").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(8).Element(Title).Text("Số hàng hoá vi phạm").Bold();
                            table.Cell().ColumnSpan(6).Row(1).Column(11).Element(Title).Text("Biện pháp xử lý (tích dấu 'x') ").Bold();

                            table.Cell().Row(2).Column(2).Element(Title).Text("Tên").Bold();
                            table.Cell().Row(2).Column(3).Element(Title).Text("Địa chỉ").Bold();
                            table.Cell().Row(2).Column(4).Element(Title).Text("Tên hàng hoá").Bold();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Lĩnh vực hàng hoá").Bold();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Số lượng/Khối lượng").Bold();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Đơn vị tính").Bold();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Về chất lượng").Bold();
                            table.Cell().Row(2).Column(9).Element(Title).Text("Về hồ sơ").Bold();
                            table.Cell().Row(2).Column(10).Element(Title).Text("Khác").Bold();
                            table.Cell().Row(2).Column(11).Element(Title).Text("Nâng mức biện pháp quản lý").Bold();
                            table.Cell().Row(2).Column(12).Element(Title).Text("Tái xuất/tái chế").Bold();
                            table.Cell().Row(2).Column(13).Element(Title).Text("Tiêu huỷ").Bold();
                            table.Cell().Row(2).Column(14).Element(Title).Text("Chuyển đổi mục đích sử dụng").Bold();
                            table.Cell().Row(2).Column(15).Element(Title).Text("Khác").Bold();
                            table.Cell().Row(2).Column(16).Element(Title).Text("Phạt tiền (triệu đồng)").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4_2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;

                                    string CoSoKiemTra_Ten = item.CoSoKiemTra_Ten.ToString();
                                    string CoSoKiemTra_DiaChi = item.CoSoKiemTra_DiaChi.ToString();
                                    string SanPham_Ten = item.SanPham_Ten.ToString();
                                    string SanPham_LinhVuc = item.SanPham_LinhVuc.ToString();
                                    string SanPham_SoLuong = item.SanPham_SoLuong.ToString();
                                    string SanPham_DonVi = item.SanPham_DonVi.ToString();
                                    string ViPham_ChatLuong = item.ViPham_ChatLuong.ToString();
                                    string ViPham_HoSo = item.ViPham_HoSo.ToString();
                                    string ViPham_Khac = item.ViPham_Khac.ToString();
                                    bool BienPhap_NangMuc = item.BienPhap_NangMuc;
                                    bool BienPhap_TaiXuat = item.BienPhap_TaiXuat;
                                    bool BienPhap_TieuHuy = item.BienPhap_TieuHuy;
                                    bool BienPhap_ChuyenDoi = item.BienPhap_ChuyenDoi;
                                    bool BienPhap_Khac = item.BienPhap_Khac;
                                    bool BienPhap_PhatTien = item.BienPhap_PhatTien;

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(CoSoKiemTra_Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(CoSoKiemTra_DiaChi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SanPham_Ten).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(SanPham_LinhVuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(SanPham_SoLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPham_DonVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(ViPham_ChatLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(ViPham_HoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(ViPham_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhap_NangMuc == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(BienPhap_TaiXuat == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(13).Element(Title).Text(BienPhap_TieuHuy == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(14).Element(Title).Text(BienPhap_ChuyenDoi == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(15).Element(Title).Text(BienPhap_Khac == true ? "X" : "").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(16).Element(Title).Text(BienPhap_PhatTien == true ? "X":"").FontSize(14);


                                    i++;
                                }

                            }
                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3.3. Cơ sở được áp dụng biện pháp miễn giảm kiểm tra").Italic().Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.ConstantColumn(200);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên cơ sở được áp dụng biện pháp miễn giảm kiểm tra").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Địa chỉ").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Tên hàng hoá").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("Thời hạn miễn").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4_3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;

                                    string TenCoSo = item.TenCoSo.ToString();
                                    string DiaChi = item.DiaChi.ToString();
                                    string TenHangHoa = item.TenHangHoa.ToString();
                                    string ThoiHanMien = item.ThoiHanMien.ToString();
                                  
                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(DiaChi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(TenHangHoa).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(ThoiHanMien).FontSize(14);

                                    i++;
                                }

                            }
                        });
                    });
                    page.Footer();
                });
            })
               .GeneratePdf(path);
        return path;
    }

    public string XuatMau15CTT13(string path, Workflow workflow)
    {

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;

                //var TongHieuLuc_LanDau = 0.0;
                //var TongHieuLuc_ThayDoi = 0.0;
                //var TongLinhVuc_ThuNghiem = 0.0;
                //var TongLinhVuc_ChungNhan = 0.0;
                //var TongLinhVuc_GiamDinh = 0.0;
                //var TongLinhVuc_KiemDinh = 0.0;

                dynamic tableData2 = null;
                dynamic tableDataTotal2 = null;

                foreach (WorkflowStep workflowStep in steps)
                {
                   
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }

                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData2 = step2.form.data.d;
                            //Thêm cột tổng
                            //tableDataTotal2 = step2.form.data.total;
                        }

                    }

                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 15c/ĐGSPH").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("TÌNH HÌNH CHỈ ĐỊNH TỔ CHỨC ĐÁNH GIÁ SỰ PHÙ HỢP").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("").Bold();
                            table.Cell().Row(2).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(2).Column(3).Text("- Bộ, ngành");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(3).Column(3).Text("- UBND cấp tỉnh");

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(4).Column(3).Text("Đơn vị nhận báo cáo;").Bold();

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("Bộ Khoa học và Công nghệ");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên tổ chức đánh giá sự phù hợp").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Số Quyết định chỉ định, ngày ban hành").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(4).Element(Title).Text("Hiệu lực của Quyết định chỉ định").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(6).Element(Title).Text("Lĩnh vực được chỉ định").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(10).Element(Title).Text("Tên, số hiệu quy chuẩn kỹ thuật/văn bản quy phạm pháp luật").Bold();

                            table.Cell().Row(2).Column(4).Element(Title).Text("Chỉ định lần đầu").Italic();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Thay đổi, bổ sung").Italic();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Thử nghiệm").Italic();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Chứng nhận").Italic();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Giám định").Italic();
                            table.Cell().Row(2).Column(9).Element(Title).Text("Kiểm định").Italic();


                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;

                                    string Index = item.tt ?? "";
                                    string TenToChuc = item.TenToChuc ?? "";
                                    string SoQuyetDinh = item.SoQuyetDinh ?? "";
                                    string TenHieuChuan = item.TenHieuChuan ?? "";
                                    string HieuLuc_LanDau = item.HieuLuc_LanDau ?? "";
                                    string HieuLuc_ThayDoi = item.HieuLuc_ThayDoi ?? "";
                                    string LinhVuc_ThuNghiem = item.LinhVuc_ThuNghiem ?? "";
                                    string LinhVuc_ChungNhan = item.LinhVuc_ChungNhan ?? "";
                                    string LinhVuc_GiamDinh = item.LinhVuc_GiamDinh ?? "";
                                    string LinhVuc_KiemDinh = item.LinhVuc_KiemDinh ?? "";


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenToChuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(SoQuyetDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(HieuLuc_LanDau).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(HieuLuc_ThayDoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(LinhVuc_ThuNghiem).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(LinhVuc_ChungNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(LinhVuc_GiamDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(LinhVuc_KiemDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(TenHieuChuan).FontSize(14);

                                    i++;
                                }

                            }
                          

                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }


                    });
                    page.Footer();
                });
            })
              .GeneratePdf(path);
        return path;
    }

    public string XuatMau15DTT13(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var NUMBER_ROW = 10; // Số hàng cần nhập liệu + 1 trong bảng
                int TOTAL_NUMBER_ROW = NUMBER_ROW + 4;

                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < TOTAL_NUMBER_ROW; i++)
                {
                    for (int col = 2; col <= 11; col++)
                    {
                        II_values[$"I_{i + 2}_{col}"] = "";
                    }
                }

                // Biến động nhập theo hàng và cột trong bảng
                II_values["I_5_2"] = "Bộ KH&CN";
                II_values["I_5_3"] = "Nội dung1";
                II_values["I_5_4"] = "Nội dung3";
                II_values["I_5_5"] = "Nội dung4";
                II_values["I_5_6"] = "Nội dung5";
                II_values["I_5_7"] = "Nội dung6";
                II_values["I_6_2"] = "Bộ...";


                var NUMBER_ROW_2 = 10;
                for (int i = 0; i < NUMBER_ROW_2; i++)
                {
                    for (int col = 2; col <= 11; col++)
                    {
                        II_values[$"II_{i + 2}_{col}"] = "";
                    }
                }

                II_values["II_2_2"] = "Lĩnh vực ...";


                // Bảng 2 
                var NUMBER_ROW_3 = 10;
                for (int i = 0; i < NUMBER_ROW_3; i++)
                {
                    for (int col = 2; col <= 11; col++)
                    {
                        II_values[$"III_{i + 2}_{col}"] = "";
                    }
                }

                II_values["III_5_2"] = "Bộ KH&CN";
                II_values["III_6_2"] = "Bộ...";


                var NUMBER_ROW_4 = 10;
                for (int i = 0; i < NUMBER_ROW_4; i++)
                {
                    for (int col = 2; col <= 11; col++)
                    {
                        II_values[$"IV_{i + 2}_{col}"] = "";
                    }
                }

                II_values["IV_2_2"] = "Lĩnh vực ...";


                // Bảng 3 

                var NUMBER_ROW_5 = 10;
                for (int i = 0; i < NUMBER_ROW_5; i++)
                {
                    for (int col = 2; col <= 14; col++)
                    {
                        II_values[$"V_{i + 2}_{col}"] = "";
                    }
                }

                II_values["V_4_2"] = "Bộ KH&CN";
                II_values["V_5_2"] = "Bộ...";


                var NUMBER_ROW_6 = 10;
                for (int i = 0; i < NUMBER_ROW_6; i++)
                {
                    for (int col = 2; col <= 14; col++)
                    {
                        II_values[$"VI_{i + 2}_{col}"] = "";
                    }
                }

                II_values["VI_2_2"] = "Lĩnh vực ...";

                // Bảng 4

                var NUMBER_ROW_7 = 10;
                for (int i = 0; i < NUMBER_ROW_7; i++)
                {
                    for (int col = 2; col <= 9; col++)
                    {
                        II_values[$"VII_{i + 2}_{col}"] = "";
                    }
                }

                II_values["VII_4_2"] = "Bộ KH&CN";

                var NUMBER_ROW_8 = 10;
                for (int i = 0; i < NUMBER_ROW_8; i++)
                {
                    for (int col = 2; col <= 9; col++)
                    {
                        II_values[$"VIII_{i + 2}_{col}"] = "";
                    }
                }

                II_values["VIII_2_2"] = "...";

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;

                dynamic tableData3_1 = null;
                dynamic tableData3_2 = null;
                dynamic tableDataTotal3 = null;

                dynamic tableData2_1 = null;
                dynamic tableData2_2 = null;
                dynamic tableDataTotal2 = null;

                dynamic tableData4_1 = null;
                dynamic tableData4_2 = null;
                dynamic tableDataTotal4 = null;

                dynamic tableData5_1 = null;


                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            tableData3_1 = step3.form.data.d1;
                            tableData3_2 = step3.form.data.d2;
                            tableDataTotal3 = step3.form.data.total;
                        }

                    }


                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData2_1 = step2.form.data.d1;
                            tableData2_2 = step2.form.data.d2;
                            tableDataTotal2 = step2.form.data.total;
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            tableData4_1 = step4.form.data.d1;
                            tableData4_2 = step4.form.data.d2;
                            tableDataTotal4 = step4.form.data.total;

                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {
                            tableData5_1 = step5.form.data.d;
                            
                        }

                    }

                }
                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 15d/KTCL").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("KẾT QUẢ KIỂM TRA CHẤT LƯỢNG SẢN PHẨM, HÀNG HOÁ").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("VÀ HOẠT ĐỘNG ĐÁNH GIÁ SỰ PHÙ HỢP").Bold();
                            table.Cell().Row(2).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Thủ tướng Chính phủ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("").Bold();

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Kết quả kiểm tra chất lượng sản phẩm trong sản xuất").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(3).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(2).Element(Title).Text("Tên cơ quan/Lĩnh vực quản lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(3).Element(Title).Text("Tổng số cơ sở được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(4).Element(Title).Text("Số lô sản phẩm được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(5).Element(Title).Text("Số cơ sở vi phạm").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(6).Element(Title).Text("Số cơ sở bị xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(7).Element(Title).Text("Số sản phẩm hàng hoá vi phạm (số lô)").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(8).Element(Title).Text("Kết quả xử lý").Bold();

                            table.Cell().RowSpan(2).Row(2).Column(8).Element(Title).Text("Tạm dừng sản xuất lưu thông (sô cơ sở)").Bold();
                            table.Cell().ColumnSpan(2).Row(2).Column(9).Element(Title).Text("Xử phạt vi phạm hành chính").Bold();
                            table.Cell().RowSpan(2).Row(2).Column(11).Element(Title).Text("Biện pháp khắc phục hậu quả").Bold();

                            table.Cell().Row(3).Column(9).Element(Title).Text("Số cơ sở bị xử phạt").Bold();
                            table.Cell().Row(3).Column(10).Element(Title).Text("Số tiền (triệu đồng)").Bold();

                            table.Cell().Row(4).Column(1).Element(Title).Text("A").Bold();
                            table.Cell().ColumnSpan(10).Row(4).Column(2).Element(Title).AlignLeft().Text("Kết quả kiểm tra chất lượng sản phẩm trong sản xuất thuộc trách nhiệm quản lý của các Bộ, ngành").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData2_1)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 4;

                                    string Index = item.id.ToString();
                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string TongSoCoSo = item.TongSoCoSo.ToString();
                                    string SoLoKiemTra = item.SoLoKiemTra.ToString();
                                    string CoSoViPham = item.CoSoViPham.ToString();
                                    string CoSoXuLy = item.CoSoXuLy.ToString();
                                    string SanPhamViPham = item.SanPhamViPham.ToString();
                                    string TamDungSanXuat = item.TamDungSanXuat.ToString();
                                    string XuPhat_SoCoSo = item.XuPhat_SoCoSo.ToString();
                                    string XuPhat_SoTien = item.XuPhat_SoTien.ToString();
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongSoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLoKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoXuLy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuPhat_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuPhat_SoTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);

                                    i++;
                                }

                            }
                        });

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("B").Bold();
                            table.Cell().ColumnSpan(10).Row(1).Column(2).Element(Title).AlignLeft().Text("Kết quả kiểm tra chất lượng sản phẩm trong sản xuất tại các địa phương").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData2_2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;

                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string TongSoCoSo = item.TongSoCoSo.ToString();
                                    string SoLoKiemTra = item.SoLoKiemTra.ToString();
                                    string CoSoViPham = item.CoSoViPham.ToString();
                                    string CoSoXuLy = item.CoSoXuLy.ToString();
                                    string SanPhamViPham = item.SanPhamViPham.ToString();
                                    string TamDungSanXuat = item.TamDungSanXuat.ToString();
                                    string XuPhat_SoCoSo = item.XuPhat_SoCoSo.ToString();
                                    string XuPhat_SoTien = item.XuPhat_SoTien.ToString();
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongSoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLoKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoXuLy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuPhat_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuPhat_SoTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);

                                    i++;
                                }

                            }
                            rowIndex++;
                            //Thêm cột tổng
                            foreach (var item in tableDataTotal2)
                            {
                                if (item != null)
                                {                                                            
                                    string TongSoCoSo = item.TongSoCoSo.ToString();
                                    string SoLoKiemTra = item.SoLoKiemTra.ToString();
                                    string CoSoViPham = item.CoSoViPham.ToString();
                                    string CoSoXuLy = item.CoSoXuLy.ToString();
                                    string SanPhamViPham = item.SanPhamViPham.ToString();
                                    string TamDungSanXuat = item.TamDungSanXuat.ToString();
                                    string XuPhat_SoCoSo = item.XuPhat_SoCoSo.ToString();
                                    string XuPhat_SoTien = item.XuPhat_SoTien.ToString();
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text("").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text("Tổng").FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongSoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLoKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoXuLy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuPhat_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuPhat_SoTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);

                                   
                                }

                            }
                        });


                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("2.Kết quả kiểm tra chất lượng hàng hoá trong lưu thông").Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(3).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(2).Element(Title).Text("Tên cơ quan/Lĩnh vực quản lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(3).Element(Title).Text("Tổng số cơ sở được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(4).Element(Title).Text("Số lô sản phẩm được kiểm tra").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(5).Element(Title).Text("Số cơ sở vi phạm").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(6).Element(Title).Text("Số cơ sở bị xử lý").Bold();
                            table.Cell().RowSpan(3).Row(1).Column(7).Element(Title).Text("Số sản phẩm hàng hoá vi phạm (số lô)").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(8).Element(Title).Text("Kết quả xử lý").Bold();

                            table.Cell().RowSpan(2).Row(2).Column(8).Element(Title).Text("Tạm dừng sản xuất lưu thông (sô cơ sở)").Bold();
                            table.Cell().ColumnSpan(2).Row(2).Column(9).Element(Title).Text("Xử phạt vi phạm hành chính").Bold();
                            table.Cell().RowSpan(2).Row(2).Column(11).Element(Title).Text("Biện pháp khắc phục hậu quả").Bold();

                            table.Cell().Row(3).Column(9).Element(Title).Text("Số cơ sở bị xử phạt").Bold();
                            table.Cell().Row(3).Column(10).Element(Title).Text("Số tiền (triệu đồng)").Bold();

                            table.Cell().Row(4).Column(1).Element(Title).Text("A").Bold();
                            table.Cell().ColumnSpan(10).Row(4).Column(2).Element(Title).AlignLeft().Text("Kết quả kiểm tra chất lượng sản phẩm trong sản xuất thuộc trách nhiệm quản lý của các bộ, ngành").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData3_1)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 4;

                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string TongSoCoSo = item.TongSoCoSo.ToString();
                                    string SoLoKiemTra = item.SoLoKiemTra.ToString();
                                    string CoSoViPham = item.CoSoViPham.ToString();
                                    string CoSoXuLy = item.CoSoXuLy.ToString();
                                    string SanPhamViPham = item.SanPhamViPham.ToString();
                                    string TamDungSanXuat = item.TamDungSanXuat.ToString();
                                    string XuPhat_SoCoSo = item.XuPhat_SoCoSo.ToString();
                                    string XuPhat_SoTien = item.XuPhat_SoTien.ToString();
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongSoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLoKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoXuLy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuPhat_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuPhat_SoTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);

                                    i++;
                                }

                            }
                        });

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("B").Bold();
                            table.Cell().ColumnSpan(10).Row(1).Column(2).Element(Title).AlignLeft().Text("Kết quả kiểm tra chất lượng sản phẩm trong sản xuất tại các địa phương").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData3_2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;

                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string TongSoCoSo = item.TongSoCoSo.ToString();
                                    string SoLoKiemTra = item.SoLoKiemTra.ToString();
                                    string CoSoViPham = item.CoSoViPham.ToString();
                                    string CoSoXuLy = item.CoSoXuLy.ToString();
                                    string SanPhamViPham = item.SanPhamViPham.ToString();
                                    string TamDungSanXuat = item.TamDungSanXuat.ToString();
                                    string XuPhat_SoCoSo = item.XuPhat_SoCoSo.ToString();
                                    string XuPhat_SoTien = item.XuPhat_SoTien.ToString();
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongSoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLoKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoXuLy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuPhat_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuPhat_SoTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);

                                    i++;
                                }
                               
                            }
                            rowIndex++;
                            //Thêm cột tổng
                            foreach (var item in tableDataTotal3)
                            {
                                if (item != null)
                                {
                                                          
                                    string TongSoCoSo = item.TongSoCoSo.ToString();
                                    string SoLoKiemTra = item.SoLoKiemTra.ToString();
                                    string CoSoViPham = item.CoSoViPham.ToString();
                                    string CoSoXuLy = item.CoSoXuLy.ToString();
                                    string SanPhamViPham = item.SanPhamViPham.ToString();
                                    string TamDungSanXuat = item.TamDungSanXuat.ToString();
                                    string XuPhat_SoCoSo = item.XuPhat_SoCoSo.ToString();
                                    string XuPhat_SoTien = item.XuPhat_SoTien.ToString();
                                    string BienPhapKhacPhuc = item.BienPhapKhacPhuc.ToString();

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text("").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text("Tổng").FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongSoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLoKiemTra).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(CoSoViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(CoSoXuLy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SanPhamViPham).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(TamDungSanXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuPhat_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuPhat_SoTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(BienPhapKhacPhuc).FontSize(14);                       
                                }
                            }
                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("3. Kết quả kiểm tra chất lượng hàng hoá trong nhập khẩu").Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên cơ quan/Lĩnh vực quản lý").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Tổng số lô hàng hoá đăng ký kiểm tra đã được xác nhận/ra Thông báo kết quả kiểm tra").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(4).Element(Title).Text("Tổng số cơ sở được kiểm tra định kỳ/đột xuất tại cơ sở lưu giữ hàng hoá(cơ sở)").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(5).Element(Title).Text("Cơ sở vi phạm").Bold();
                            table.Cell().ColumnSpan(6).Row(1).Column(8).Element(Title).Text("Biện pháp xử lý").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(14).Element(Title).Text("Số cơ sở được áp dụng biện pháp miễn giám kiểm tra (cơ sở)").Bold();

                            table.Cell().Row(2).Column(5).Element(Title).Text("Về chất lượng (cơ sở)").Bold();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Về hồ sơ (cơ sở)").Bold();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Khác (cơ sở)").Bold();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Nâng mức biện pháp quản lý (cơ sở)").Bold();
                            table.Cell().Row(2).Column(9).Element(Title).Text("Phạt tiền (triệu đồng)").Bold();
                            table.Cell().Row(2).Column(10).Element(Title).Text("Tái xuất/tái chế (cơ sở)").Bold();
                            table.Cell().Row(2).Column(11).Element(Title).Text("Tiêu huỷ (cơ sở)").Bold();
                            table.Cell().Row(2).Column(12).Element(Title).Text("Chuyển đổi mục đích sử dụng (cơ sở)").Bold();
                            table.Cell().Row(2).Column(13).Element(Title).Text("Khác (cơ sở)").Bold();

                            table.Cell().Row(3).Column(1).Element(Title).Text("A").Bold();
                            table.Cell().ColumnSpan(13).Row(3).Column(2).Element(Title).AlignLeft().Text("Kết quả kiểm tra chất lượng sản phẩm, hàng hoá trong nhập khẩu thuộc trách nhiệm quả lý của các bộ, ngành").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4_1)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 3;

                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string Tong_DaXacNhan = item.Tong_DaXacNhan.ToString();
                                    string Tong_KiemTraDinhKy = item.Tong_KiemTraDinhKy.ToString();
                                    string CoSoMienGiam = item.CoSoMienGiam.ToString();

                                    string ViPham_ChatLuong = item.ViPham_ChatLuong.ToString();
                                    string ViPham_HoSo = item.ViPham_HoSo.ToString();
                                    string ViPham_Khac = item.ViPham_Khac.ToString();
                                    string XuLy_NangMuc = item.XuLy_NangMuc.ToString();
                                    string XuLy_PhatTien = item.XuLy_PhatTien.ToString();
                                    string XuLy_TaiXuat = item.XuLy_TaiXuat.ToString();
                                    string XuLy_TieuHuy = item.XuLy_TieuHuy.ToString();
                                    string XuLy_ChuyenDoi = item.XuLy_ChuyenDoi.ToString();
                                    string XuLy_Khac = item.XuLy_Khac.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(Tong_DaXacNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(Tong_KiemTraDinhKy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(ViPham_ChatLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(ViPham_HoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(ViPham_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(XuLy_NangMuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuLy_PhatTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuLy_TaiXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(XuLy_TieuHuy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(XuLy_ChuyenDoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(13).Element(Title).Text(XuLy_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(14).Element(Title).Text(CoSoMienGiam).FontSize(14);

                                    i++;
                                }
                            }
                        });

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });
                            
                            // row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("B").Bold();
                            table.Cell().ColumnSpan(13).Row(1).Column(2).Element(Title).AlignLeft().Text("Kết quả kiểm tra chất lượng sản phẩm, hàng hoá trong nhập khẩu tại địa phương").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4_2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 1;

                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string Tong_DaXacNhan = item.Tong_DaXacNhan.ToString();
                                    string Tong_KiemTraDinhKy = item.Tong_KiemTraDinhKy.ToString();
                                    string CoSoMienGiam = item.CoSoMienGiam.ToString();

                                    string ViPham_ChatLuong = item.ViPham_ChatLuong.ToString();
                                    string ViPham_HoSo = item.ViPham_HoSo.ToString();
                                    string ViPham_Khac = item.ViPham_Khac.ToString();
                                    string XuLy_NangMuc = item.XuLy_NangMuc.ToString();
                                    string XuLy_PhatTien = item.XuLy_PhatTien.ToString();
                                    string XuLy_TaiXuat = item.XuLy_TaiXuat.ToString();
                                    string XuLy_TieuHuy = item.XuLy_TieuHuy.ToString();
                                    string XuLy_ChuyenDoi = item.XuLy_ChuyenDoi.ToString();
                                    string XuLy_Khac = item.XuLy_Khac.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(Tong_DaXacNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(Tong_KiemTraDinhKy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(ViPham_ChatLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(ViPham_HoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(ViPham_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(XuLy_NangMuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuLy_PhatTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuLy_TaiXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(XuLy_TieuHuy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(XuLy_ChuyenDoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(13).Element(Title).Text(XuLy_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(14).Element(Title).Text(CoSoMienGiam).FontSize(14);
                                    
                                    i++;
                                }

                            }
                            rowIndex++;
                            //Thêm cột tổng
                            foreach (var item in tableDataTotal4)
                            {
                                if (item != null)
                                {
                                                                    
                                    string Tong_DaXacNhan = item.Tong_DaXacNhan.ToString();
                                    string Tong_KiemTraDinhKy = item.Tong_KiemTraDinhKy.ToString();
                                    string CoSoMienGiam = item.CoSoMienGiam.ToString();
                                    string ViPham_ChatLuong = item.ViPham_ChatLuong.ToString();
                                    string ViPham_HoSo = item.ViPham_HoSo.ToString();
                                    string ViPham_Khac = item.ViPham_Khac.ToString();
                                    string XuLy_NangMuc = item.XuLy_NangMuc.ToString();
                                    string XuLy_PhatTien = item.XuLy_PhatTien.ToString();
                                    string XuLy_TaiXuat = item.XuLy_TaiXuat.ToString();
                                    string XuLy_TieuHuy = item.XuLy_TieuHuy.ToString();
                                    string XuLy_ChuyenDoi = item.XuLy_ChuyenDoi.ToString();
                                    string XuLy_Khac = item.XuLy_Khac.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text("").FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text("Tổng").FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(Tong_DaXacNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(Tong_KiemTraDinhKy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(ViPham_ChatLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(ViPham_HoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(ViPham_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(XuLy_NangMuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(XuLy_PhatTien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(10).Element(Title).Text(XuLy_TaiXuat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(11).Element(Title).Text(XuLy_TieuHuy).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(12).Element(Title).Text(XuLy_ChuyenDoi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(13).Element(Title).Text(XuLy_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(14).Element(Title).Text(CoSoMienGiam).FontSize(14);

                                   
                                }

                            }
                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("4. Kết quả tình hình chỉ định tổ chức đánh giá sự phù hợp").Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(60);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên cơ quan, đơn vị").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Tổng số tổ chức đánh giá, sự phù hợp được chỉ định").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(4).Element(Title).Text("Theo lĩnh vực đánh giá sự phù hợp").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(8).Element(Title).Text("Theo hiệu lực của Quyết định chỉ định").Bold();

                            table.Cell().Row(2).Column(4).Element(Title).Text("Thử nghiệm").Italic();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Chứng nhận").Italic();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Giám định").Italic();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Kiểm định").Italic();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Số lượng tổ chức đánh giá sự phù hợp được chỉ định lần đầu").Italic();
                            table.Cell().Row(2).Column(9).Element(Title).Text("Số lượng tổ chức giá sự phù hợp được chỉ định thay đổi, bổ sung").Italic();

                            

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData5_1)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;

                                    string Index = item.tt.ToString();
                                    string TenCoQuan = item.TenCoQuan.ToString();
                                    string TongSoToChuc = item.TongSoToChuc.ToString();
                                    string LinhVuc_ThuNghiem = item.LinhVuc_ThuNghiem.ToString();
                                    string LinhVuc_ChungNhan = item.LinhVuc_ChungNhan.ToString();
                                    string LinhVuc_GiamDinh = item.LinhVuc_GiamDinh.ToString();
                                    string LinhVuc_KiemDinh = item.LinhVuc_KiemDinh.ToString();
                                    string HieuLuc_LanDau = item.HieuLuc_LanDau.ToString();
                                    string HieuLuc_ThayDoi = item.HieuLuc_ThayDoi.ToString();
                                    //
                                    string[] check = { "A", "B" };
                                    if (check.Contains(Index))
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14).Bold();
                                    }else
                                    {
                                        table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14);
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoQuan).FontSize(14);
                                    }

                                 
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TongSoToChuc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(LinhVuc_ThuNghiem).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(LinhVuc_ChungNhan).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(LinhVuc_GiamDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(LinhVuc_KiemDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(HieuLuc_LanDau).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(HieuLuc_ThayDoi).FontSize(14);

                                    i++;
                                }

                            }

                        });

                      

                    });

                    page.Footer();
                });
            })
            .GeneratePdf(path);
        return path;
    }

    public string XuatMau16ATT13(string path, Workflow workflow)
    {

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

            

           

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic tableData2 = null;
                dynamic tableData3_1 = null;
                dynamic tableData3_2 = null;
                dynamic tableData3_3 = null;


                foreach (WorkflowStep workflowStep in steps)
                {

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            tableData2 = step2.form.data.d;
                            
                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            tableData3_1 = step3.form.data.d1;
                            tableData3_2 = step3.form.data.d2;
                            tableData3_3 = step3.form.data.d3;                         
                        }

                    }

                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("16. Báo cáo về công tác quản lý an toàn bức xạ và hạt nhân và phát triển, ứng dụng năng lượng nguyên tử").Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();

                            });

                            //row 1

                            table.Cell().Row(1).Column(1).Text("Biểu số 16a/ATBX").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("CÔNG TÁC QUẢN LÝ AN TOÀN BỨC XẠ").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("VÀ HẠT NHÂN TẠI ĐỊA PHƯƠNG").Bold();
                            table.Cell().Row(2).Column(3).Text("UBND cấp tỉnh");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("").Bold();

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Tình hình cấp phép tiến hành công việc bức xạ").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên cơ sở").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Số giấy phép").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Ngày cấp").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("Số lượng nhân viên bức xạ").Bold();
                            table.Cell().Row(1).Column(6).Element(Title).Text("Số lượng thiết bị X-quang").Bold();

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;
                                    string Index = item.tt ??"";
                                    string TenCoSo = item.TenCoSo ??"";
                                    string SoGiayPhep = item.SoGiayPhep ?? "";
                                    string NgayCap = String.Format("{0:dd/MM/yyyy}", item.NgayCap) ?? "";
                                    string SL_NhanVien = item.SL_NhanVien ?? "";
                                    string SL_ThietBi = item.SL_ThietBi ?? "";

                                  

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    if (TenCoSo=="Tổng")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoSo).FontSize(14).Bold();
                                    }
                                    else { table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoSo).FontSize(14); }                                                                
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(SoGiayPhep).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(NgayCap).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(SL_NhanVien).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(SL_ThietBi).FontSize(14);

                                    i++;
                                }

                            }
                           

                          

                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(40)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(18).AlignLeft().Text("2. Kết quả kiểm tra chất lượng hàng hoá trong lưu thông").Bold().FontSize(12);
                        column.Item().PaddingBottom(10).AlignLeft().Text("2.1 Kết quả thanh tra và xử phạt vi phạm hành chính").Bold().Italic();
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên cơ sở").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Địa chỉ").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(4).Element(Title).Text("Lĩnh vực hoạt động").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(7).Element(Title).Text("Hành vi vi phạm bị xử lý nếu có (nêu rõ Điều, khoản, điểm xử phạt vi phạm hành chính)").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(8).Element(Title).Text("Số tiền đã xử phạt (triệu đồng)").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(9).Element(Title).Text("Các điểm cần lưu ý về cơ sở (nếu có)").Bold();

                            table.Cell().Row(2).Column(4).Element(Title).Text("Y tế").Bold();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Công nghiệp").Bold();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Khác").Bold();
                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData3_1)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;

                                    string Index = item.tt ?? "";
                                    string TenCoSo = item.TenCoSo ?? "";
                                    string DiaChi = item.DiaChi?? "";
                                    string HanhVi = item.HanhVi ?? "";
                                    string SoTienXuPhat = item.SoTienXuPhat ?? "";
                                    string LuuY = item.LuuY ?? "";
                                    string LinhVuc_YTe = item.LinhVuc_YTe ?? "";
                                    string LinhVuc_CongNghiep = item.LinhVuc_CongNghiep ?? "";
                                    string LinhVuc_Khac = item.LinhVuc_Khac ?? "";


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(DiaChi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(LinhVuc_YTe).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(LinhVuc_CongNghiep).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(LinhVuc_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(HanhVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(SoTienXuPhat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(LuuY).FontSize(14);

                                    i++;
                                }

                            }



                        });

                        column.Item().PaddingTop(10).PaddingBottom(10).AlignLeft().Text("2.2 Kết quả kiểm tra và xử phạt vi phạm hành chính").Bold().Italic();
                        column.Item().Table(table =>
                        {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.ConstantColumn(50);
                            columns.ConstantColumn(100);
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                        });

                        //row 1
                        table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên cơ sở").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Địa chỉ").Bold();
                        table.Cell().ColumnSpan(3).Row(1).Column(4).Element(Title).Text("Lĩnh vực hoạt động").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(7).Element(Title).Text("Hành vi vi phạm bị xử lý nếu có (nêu rõ Điều, khoản, điểm xử phạt vi phạm hành chính)").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(8).Element(Title).Text("Số tiền đã xử phạt (triệu đồng)").Bold();
                        table.Cell().RowSpan(2).Row(1).Column(9).Element(Title).Text("Các điểm cần lưu ý về cơ sở (nếu có)").Bold();

                        table.Cell().Row(2).Column(4).Element(Title).Text("Y tế").Bold();
                        table.Cell().Row(2).Column(5).Element(Title).Text("Công nghiệp").Bold();
                        table.Cell().Row(2).Column(6).Element(Title).Text("Khác").Bold();

                        uint rowIndex = 1;
                        uint i = 1;
                        foreach (var item in tableData3_2)
                        {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;
                                    string Index = item.tt ?? "";
                                    string TenCoSo = item.TenCoSo ?? "";
                                    string DiaChi = item.DiaChi ?? "";
                                    string HanhVi = item.HanhVi ?? "";
                                    string SoTienXuPhat = item.SoTienXuPhat ?? "";
                                    string LuuY = item.LuuY ?? "";
                                    string LinhVuc_YTe = item.LinhVuc_YTe ?? "";
                                    string LinhVuc_CongNghiep = item.LinhVuc_CongNghiep ?? "";
                                    string LinhVuc_Khac = item.LinhVuc_Khac ?? "";



                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(DiaChi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(LinhVuc_YTe).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(LinhVuc_CongNghiep).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(LinhVuc_Khac).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(HanhVi).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(SoTienXuPhat).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(9).Element(Title).Text(LuuY).FontSize(14);

                                    i++;
                                }

                            }



                        });

                        column.Item().PaddingTop(10).PaddingBottom(10).AlignLeft().Text("2.3 Đánh giá tình hình thực hiện quy định của pháp luật đối với cơ sở tiến hành công việc bức xạ").Bold().Italic();
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(300);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Nội dung đánh giá").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(3).Element(Title).Text("Thực hiện đầy đủ").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(5).Element(Title).Text("Chưa thực hiện đầy đủ").Bold();
                            table.Cell().ColumnSpan(2).Row(1).Column(7).Element(Title).Text("Chưa thực hiện").Bold();

                            table.Cell().Row(2).Column(3).Element(Title).Text("Số cơ sở").Bold();
                            table.Cell().Row(2).Column(4).Element(Title).Text("Tỷ lệ (%)").Bold();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Số cơ sở").Bold();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Tỷ lệ (%)").Bold();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Số cơ sở").Bold();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Tỷ lệ (%)").Bold();
                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData3_3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;

                                    string Index = item.tt?? "";
                                    string NoiDung = item.NoiDung ?? "";
                                    string DayDu_SoCoSo = item.DayDu_SoCoSo ?? "";
                                    string DayDu_TyLe = item.DayDu_TyLe ?? "";
                                    string KhongDayDu_SoCoSo = item.KhongDayDu_SoCoSo ?? "";
                                    string KhongDayDu_TyLe = item.KhongDayDu_TyLe ?? "";
                                    string ChuaThucHien_SoCoSo = item.ChuaThucHien_SoCoSo ?? "";
                                    string ChuaThucHien_TyLe = item.ChuaThucHien_TyLe ?? "";

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14).Bold();
                                    if (NoiDung == "Tổng")
                                    {
                                        table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14).Bold();
                                    }
                                    else { table.Cell().Row(rowIndex).Column(2).Element(Title).Text(NoiDung).FontSize(14); }

                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(DayDu_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(DayDu_TyLe).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(KhongDayDu_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(KhongDayDu_TyLe).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(ChuaThucHien_SoCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(ChuaThucHien_TyLe).FontSize(14);


                                    i++;
                                }

                            }



                        });
                    });

                    page.Footer();
                });
            })
           .GeneratePdf(path);
        return path; ;
    }

    public string XuatMau16BTT13(string path, Workflow workflow)
    {


        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var I_2_3 = "";
                var I_2_4 = "";

                var I_3_2 = "";
                var I_3_3 = "";

                var I_4_2 = "";
                var I_4_3 = "";

                var I_5_2 = "";
                var I_5_3 = "";

                var I_6_2 = "";
                var I_6_3 = "";

                var I_7_2 = "";
                var I_7_3 = "";

                var I_8_2 = "";
                var I_8_3 = "";

                var II_3_3 = "Nội dung";
                var II_3_4 = "";
                var II_3_5 = "";
                var II_3_6 = "";
                var II_3_7 = "";
                var II_3_8 = "";

                var II_4_3 = "";
                var II_4_4 = "";
                var II_4_5 = "";
                var II_4_6 = "";
                var II_4_7 = "";
                var II_4_8 = "";

                var II_5_3 = "";
                var II_5_4 = "";
                var II_5_5 = "";
                var II_5_6 = "";
                var II_5_7 = "";
                var II_5_8 = "";

                var II_6_3 = "";
                var II_6_4 = "";
                var II_6_5 = "";
                var II_6_6 = "";
                var II_6_7 = "";
                var II_6_8 = "";

                var II_7_3 = "";
                var II_7_4 = "";
                var II_7_5 = "";
                var II_7_6 = "";
                var II_7_7 = "";
                var II_7_8 = "";

                var III_3_3 = "";
                var III_3_4 = "";
                var III_3_5 = "";
                var III_3_6 = "";
                var III_3_7 = "";

                var III_4_3 = "";
                var III_4_4 = "";
                var III_4_5 = "";
                var III_4_6 = "";
                var III_4_7 = "";

                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;

                foreach (WorkflowStep workflowStep in steps)
                {

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dynamic? data1 = step2.form.data;
                            I_2_3 = data1.d1[0].YHocHatNhan;
                            I_2_4 = data1.d1[0].XaTri;

                            I_3_2 = data1.d1[1].YHocHatNhan;
                            I_3_3 = data1.d1[1].XaTri;

                            I_4_2 = data1.d1[2].YHocHatNhan;
                            I_4_3 = data1.d1[2].XaTri;

                            I_5_2 = data1.d1[3].YHocHatNhan;
                            I_5_3 = data1.d1[3].XaTri;

                            I_6_2 = data1.d1[4].YHocHatNhan;
                            I_6_3 = data1.d1[4].XaTri;

                            I_7_2 = data1.d1[5].YHocHatNhan;
                            I_7_3 = data1.d1[5].XaTri;

                            I_8_2 = data1.d1[6].YHocHatNhan;
                            I_8_3 = data1.d1[6].XaTri;

                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {
                            dynamic? data1 = step3.form.data;
                            II_3_3 = data1.d1[0].Soi_AnNinh;
                            II_3_4 = data1.d1[0].Soi_LinhKien;
                            II_3_5 = data1.d1[0].CongNghiep_HoaChat;
                            II_3_6 = data1.d1[0].CongNghiep_DauKhi;
                            II_3_7 = data1.d1[0].CongNghiep_Thep;
                            II_3_8 = data1.d1[0].CongNghiep_Khac;

                            II_4_3 = data1.d1[1].Soi_AnNinh;
                            II_4_4 = data1.d1[1].Soi_LinhKien;
                            II_4_5 = data1.d1[1].CongNghiep_HoaChat;
                            II_4_6 = data1.d1[1].CongNghiep_DauKhi;
                            II_4_7 = data1.d1[1].CongNghiep_Thep;
                            II_4_8 = data1.d1[1].CongNghiep_Khac;

                            II_5_3 = data1.d1[2].Soi_AnNinh;
                            II_5_4 = data1.d1[2].Soi_LinhKien;
                            II_5_5 = data1.d1[2].CongNghiep_HoaChat;
                            II_5_6 = data1.d1[2].CongNghiep_DauKhi;
                            II_5_7 = data1.d1[2].CongNghiep_Thep;
                            II_5_8 = data1.d1[2].CongNghiep_Khac;

                            II_6_3 = data1.d1[3].Soi_AnNinh;
                            II_6_4 = data1.d1[3].Soi_LinhKien;
                            II_6_5 = data1.d1[3].CongNghiep_HoaChat;
                            II_6_6 = data1.d1[3].CongNghiep_DauKhi;
                            II_6_7 = data1.d1[3].CongNghiep_Thep;
                            II_6_8 = data1.d1[3].CongNghiep_Khac;

                            II_7_3 = data1.d1[4].Soi_AnNinh;
                            II_7_4 = data1.d1[4].Soi_LinhKien;
                            II_7_5 = data1.d1[4].CongNghiep_HoaChat;
                            II_7_6 = data1.d1[4].CongNghiep_DauKhi;
                            II_7_7 = data1.d1[4].CongNghiep_Thep;
                            II_7_8 = data1.d1[4].CongNghiep_Khac;

                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data1 = step4.form.data;
                            III_3_3 = data1.d1[0].SoThietBi;
                            III_3_4 = data1.d1[0].KhoiLuong_HaiSan;
                            III_3_5 = data1.d1[0].KhoiLuong_HaiSan;
                            III_3_6 = data1.d1[0].KhoiLuong_ChieuXa;
                            III_3_7 = data1.d1[0].KhoiLuong_Khac;

                            III_4_3 = data1.d1[1].SoThietBi;
                            III_4_4 = data1.d1[1].KhoiLuong_HaiSan;
                            III_4_5 = data1.d1[1].KhoiLuong_HaiSan;
                            III_4_6 = data1.d1[1].KhoiLuong_ChieuXa;
                            III_4_7 = data1.d1[1].KhoiLuong_Khac;

                        }

                    }

                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 16b/NLNT").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("CÔNG TÁC PHÁT TRIỂN ỨNG DỤNG NĂNG LƯỢNG").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("NGUYÊN TỬ TẠI ĐỊA PHƯƠNG").Bold();
                            table.Cell().Row(2).Column(3).Text("UBND cấp tỉnh");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Ứng dụng năng lượng nguyên tử trong lĩnh vực y tế").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(400);
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Nội dung").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Y học hạt nhân (34)").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Xạ trị (35)").Bold();

                            table.Cell().Row(2).Column(1).Element(Title).Text("1").Bold();
                            table.Cell().Row(2).Column(2).Element(Block).Text("Số cơ sở có ứng dụng");
                            table.Cell().Row(2).Column(3).Element(Block).Text(I_2_3 ?? "");
                            table.Cell().Row(2).Column(4).Element(Block).Text(I_2_4 ?? "");

                            table.Cell().Row(3).Column(1).Element(Title).Text("2").Bold();
                            table.Cell().Row(3).Column(2).Element(Block).Text("Số thiết bị");
                            table.Cell().Row(3).Column(3).Element(Block).Text(I_3_2 ?? "");
                            table.Cell().Row(3).Column(4).Element(Block).Text(I_3_3 ?? "");

                            table.Cell().Row(4).Column(1).Element(Title).Text("3").Bold();
                            table.Cell().Row(4).Column(2).Element(Block).Text("Số thiết bị được lắp đặt mới trong kỳ báo cáo");
                            table.Cell().Row(4).Column(3).Element(Block).Text(I_4_2 ?? "");
                            table.Cell().Row(4).Column(4).Element(Block).Text(I_4_3 ?? "");

                            table.Cell().Row(5).Column(1).Element(Title).Text("4").Bold();
                            table.Cell().Row(5).Column(2).Element(Block).Text("Số bác sĩ");
                            table.Cell().Row(5).Column(3).Element(Block).Text(I_5_2 ?? "");
                            table.Cell().Row(5).Column(4).Element(Block).Text(I_5_3 ?? "");

                            table.Cell().Row(6).Column(1).Element(Title).Text("5").Bold();
                            table.Cell().Row(6).Column(2).Element(Block).Text("Số kỹ thuật viên");
                            table.Cell().Row(6).Column(3).Element(Block).Text(I_6_2 ?? "");
                            table.Cell().Row(6).Column(4).Element(Block).Text(I_6_3 ?? "");

                            table.Cell().Row(7).Column(1).Element(Title).Text("6").Bold();
                            table.Cell().Row(7).Column(2).Element(Block).Text("Số bệnh nhân được chuẩn đoán/điều trị");
                            table.Cell().Row(7).Column(3).Element(Block).Text(I_7_2 ?? "");
                            table.Cell().Row(7).Column(4).Element(Block).Text(I_7_3 ?? "");

                            table.Cell().Row(8).Column(1).Element(Title).Text("7").Bold();
                            table.Cell().Row(8).Column(2).Element(Block).Text("Tổng hoạt động dược chất phóng xạ được sử dụng trong kỳ báo cáo (mCi)");
                            table.Cell().Row(8).Column(3).Element(Block).Text(I_8_2 ?? "");
                            table.Cell().Row(8).Column(4).Element(Block).Text(I_8_3 ?? "");

                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(8)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(50).AlignLeft().Text("______________________________________________").Bold().FontSize(12);
                        column.Item().AlignLeft().Text("(34) Thiết bị y học hạt nhân: SPECT, SPECT/CT, PET/CT, Cyclotron, ... ").FontSize(11);
                        column.Item().AlignLeft().Text("(35) Thiết bị xạ trị: xạ trị Co0-60, LINAC, HDR, gamma knife, cycber knife.").FontSize(11);

                        column.Item().PaddingTop(10).PaddingBottom(10).AlignLeft().Text("2. Ứng dụng năng lượnng nguyên tử trong lĩnh vực công nghiệp").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(250);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Nội dung").Bold();
                            table.Cell().ColumnSpan(6).Row(1).Column(3).Element(Title).Text("Lĩnh vực ứng dụng").Bold();

                            table.Cell().Row(2).Column(3).Element(Title).Text("Soi an ninh hải quan").Italic();
                            table.Cell().Row(2).Column(4).Element(Title).Text("Soi bo mạch, linh kiện").Italic();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Công nghiệp hoá chất, phân bón").Italic();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Công nghiệp dầu khí").Italic();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Công nghiệp thép, xi măng").Italic();
                            table.Cell().Row(2).Column(8).Element(Title).Text("Công nghiệp bia nước giải khát, giấy và khác").Italic();

                            table.Cell().Row(3).Column(1).Element(Title).Text("1").Bold();
                            table.Cell().Row(3).Column(2).Element(Block).Text("Số cơ sở có ứng dụng");
                            table.Cell().Row(3).Column(3).Element(Block).Text(II_3_3 ?? "");
                            table.Cell().Row(3).Column(4).Element(Block).Text(II_3_4 ?? "");
                            table.Cell().Row(3).Column(5).Element(Block).Text(II_3_5 ?? "");
                            table.Cell().Row(3).Column(6).Element(Block).Text(II_3_6 ?? "");
                            table.Cell().Row(3).Column(7).Element(Block).Text(II_3_7 ?? "");
                            table.Cell().Row(3).Column(8).Element(Block).Text(II_3_8 ?? "");

                            table.Cell().Row(4).Column(1).Element(Title).Text("2").Bold();
                            table.Cell().Row(4).Column(2).Element(Block).Text("Tổng số nguồn phóng xạ kín");
                            table.Cell().Row(4).Column(3).Element(Block).Text(II_4_3 ?? "");
                            table.Cell().Row(4).Column(4).Element(Block).Text(II_4_4 ?? "");
                            table.Cell().Row(4).Column(5).Element(Block).Text(II_4_5 ?? "");
                            table.Cell().Row(4).Column(6).Element(Block).Text(II_4_6 ?? "");
                            table.Cell().Row(4).Column(7).Element(Block).Text(II_4_7 ?? "");
                            table.Cell().Row(4).Column(8).Element(Block).Text(II_4_8 ?? "");

                            table.Cell().Row(5).Column(1).Element(Title).Text("3").Bold();
                            table.Cell().Row(5).Column(2).Element(Block).Text("Tổng số thiết bị bức xạ");
                            table.Cell().Row(5).Column(3).Element(Block).Text(II_5_3 ?? "");
                            table.Cell().Row(5).Column(4).Element(Block).Text(II_5_4 ?? "");
                            table.Cell().Row(5).Column(5).Element(Block).Text(II_5_5 ?? "");
                            table.Cell().Row(5).Column(6).Element(Block).Text(II_5_6 ?? "");
                            table.Cell().Row(5).Column(7).Element(Block).Text(II_5_7 ?? "");
                            table.Cell().Row(5).Column(8).Element(Block).Text(II_5_8 ?? "");

                            table.Cell().Row(6).Column(1).Element(Title).Text("4").Bold();
                            table.Cell().Row(6).Column(2).Element(Block).Text("Số thiết bị được lắp đặt mới trong kỳ báo cáo");
                            table.Cell().Row(6).Column(3).Element(Block).Text(II_6_3 ?? "");
                            table.Cell().Row(6).Column(4).Element(Block).Text(II_6_4 ?? "");
                            table.Cell().Row(6).Column(5).Element(Block).Text(II_6_5 ?? "");
                            table.Cell().Row(6).Column(6).Element(Block).Text(II_6_6 ?? "");
                            table.Cell().Row(6).Column(7).Element(Block).Text(II_6_7 ?? "");
                            table.Cell().Row(6).Column(8).Element(Block).Text(II_6_8 ?? "");

                            table.Cell().Row(7).Column(1).Element(Title).Text("5").Bold();
                            table.Cell().Row(7).Column(2).Element(Block).Text("Số nhân viên bức xạ");
                            table.Cell().Row(7).Column(3).Element(Block).Text(II_7_3 ?? "");
                            table.Cell().Row(7).Column(4).Element(Block).Text(II_7_4 ?? "");
                            table.Cell().Row(7).Column(5).Element(Block).Text(II_7_5 ?? "");
                            table.Cell().Row(7).Column(6).Element(Block).Text(II_7_6 ?? "");
                            table.Cell().Row(7).Column(7).Element(Block).Text(II_7_7 ?? "");
                            table.Cell().Row(7).Column(8).Element(Block).Text(II_7_8 ?? "");
                        });

                        column.Item().PaddingBottom(10).PaddingTop(18).AlignLeft().Text("3. Chiếu xạ công nghiệp").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.ConstantColumn(250);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Thiết bị chiếu xạ công nghiệp").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Số thiết bị").Bold();
                            table.Cell().ColumnSpan(4).Row(1).Column(4).Element(Title).Text("Khối lượng chiếu xạ trong kỳ báo cáo (tấn/m3)").Bold();

                            table.Cell().Row(2).Column(4).Element(Title).Text("Hải sản").Italic();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Trái cây").Italic();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Chiếu xạ khử trùng y tế").Italic();
                            table.Cell().Row(2).Column(7).Element(Title).Text("Mặt hàng khác").Italic();

                            table.Cell().Row(3).Column(1).Element(Title).Text("1").Bold();
                            table.Cell().Row(3).Column(2).Element(Title).Text("Thiết bị chiếu xạ công nghiệp dùng nguồn Co 60");
                            table.Cell().Row(3).Column(3).Element(Block).Text(III_3_3 ?? "");
                            table.Cell().Row(3).Column(4).Element(Block).Text(III_3_4 ?? "");
                            table.Cell().Row(3).Column(5).Element(Block).Text(III_3_5 ?? "");
                            table.Cell().Row(3).Column(6).Element(Block).Text(III_3_6 ?? "");
                            table.Cell().Row(3).Column(7).Element(Block).Text(III_3_7 ?? "");

                            table.Cell().Row(4).Column(1).Element(Title).Text("2").Bold();
                            table.Cell().Row(4).Column(2).Element(Title).Text("Thiết bị chiếu xạ công nghiệp dùng máy giá tốc");
                            table.Cell().Row(4).Column(3).Element(Block).Text(III_4_3 ?? "");
                            table.Cell().Row(4).Column(4).Element(Block).Text(III_4_4 ?? "");
                            table.Cell().Row(4).Column(5).Element(Block).Text(III_4_5 ?? "");
                            table.Cell().Row(4).Column(6).Element(Block).Text(III_4_6 ?? "");
                            table.Cell().Row(4).Column(7).Element(Block).Text(III_4_7 ?? "");

                        });

                    });
                });
            })
               .GeneratePdf(path);
        return path;
    }

    public string XuatMau16CTT13(string path, Workflow workflow)
    {

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var tu_ngay = "";
                var tu_thang = "";
                var nam_ky = "";

                var den_ngay = "";
                var den_thang = "";
                var den_nam = "";

                var I_2_3 = "";
                var I_2_4 = "";

                var I_3_2 = "";
                var I_3_3 = "";

                var I_4_2 = "";
                var I_4_3 = "";

                var I_5_2 = "";
                var I_5_3 = "";

                var I_6_2 = "";
                var I_6_3 = "";

                var I_7_2 = "";
                var I_7_3 = "";

                //var TongSoLuongGiayPhep = 0.0;
                //var TongSoLuongThietBi = 0.0;

                //var TongHiepDinh = 0.0;
                //var TongNghiDinh = 0.0;

                var NUMBER_ROW_1 = 10; // Số hàng cần nhập liệu + 1 trong bảng
                Dictionary<string, string> II_values = new Dictionary<string, string>();

                for (int i = 0; i < NUMBER_ROW_1; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"II_{i + 2}_{col}"] = "";
                    }
                }

                II_values["II_2_2"] = "Nội dung";

                // Bảng 3 

                var III_3_3 = "";
                var III_3_4 = "";
                var III_3_5 = "";
                var III_3_6 = "";
                var III_3_7 = "";
                var III_3_8 = "";
                var III_3_9 = "";

                var III_4_3 = "";
                var III_4_4 = "";
                var III_4_5 = "";
                var III_4_6 = "";
                var III_4_7 = "";
                var III_4_8 = "";
                var III_4_9 = "";

                var III_5_3 = "";
                var III_5_4 = "";
                var III_5_5 = "";
                var III_5_6 = "";
                var III_5_7 = "";
                var III_5_8 = "";
                var III_5_9 = "";

                var III_6_3 = "";
                var III_6_4 = "";
                var III_6_5 = "";
                var III_6_6 = "";
                var III_6_7 = "";
                var III_6_8 = "";
                var III_6_9 = "";

                var III_7_3 = "";
                var III_7_4 = "";
                var III_7_5 = "";
                var III_7_6 = "";
                var III_7_7 = "";
                var III_7_8 = "";
                var III_7_9 = "";

                var III_8_3 = "";
                var III_8_4 = "";
                var III_8_5 = "";
                var III_8_6 = "";
                var III_8_7 = "";
                var III_8_8 = "";
                var III_8_9 = "";

                var III_9_3 = "";
                var III_9_4 = "";
                var III_9_5 = "";
                var III_9_6 = "";
                var III_9_7 = "";
                var III_9_8 = "";
                var III_9_9 = "";

                // Bảng 4
                var NUMBER_ROW_2 = 10;
                for (int i = 0; i < NUMBER_ROW_2; i++)
                {
                    for (int col = 2; col <= 4; col++)
                    {
                        II_values[$"IV_{i + 2}_{col}"] = "";
                    }
                }

                II_values["IV_3_2"] = "Bộ Công thương";

                // Bảng 5 
                var NUMBER_ROW_3 = 10;
                for (int i = 0; i < NUMBER_ROW_3; i++)
                {
                    for (int col = 2; col <= 8; col++)
                    {
                        II_values[$"V_{i + 2}_{col}"] = "";
                    }
                }

                II_values["V_2_2"] = "Bộ Công thương";


                List<WorkflowStep> steps = workflow.WorkflowSteps;

                dynamic? step1;
                dynamic? step2;
                dynamic? step3;
                dynamic? step4;
                dynamic? step5;
                dynamic? step6;

                dynamic tableData2 = null;
                dynamic tableData3 = null;
                dynamic tableData4 = null;
               


                foreach (WorkflowStep workflowStep in steps)
                {

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 4)
                    {
                        step4 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step4 != null)
                        {
                            dynamic? data1 = step4.form.data;
                            III_3_3 = data1.d[0].Tong_ThanhTraKiemTra;
                            III_3_4 = data1.d[0].LinhVuc_YTe;
                            III_3_5 = data1.d[0].LinhVuc_CongNghiep;
                            III_3_6 = data1.d[0].LinhVuc_Khac;
                            III_3_7 = data1.d[0].Tong_ToChucXuPhat;
                            III_3_8 = data1.d[0].Tong_TienXuPhat;
                            III_3_9 = data1.d[0].HanhViDienHinh;

                            III_4_3 = data1.d[1].Tong_ThanhTraKiemTra;
                            III_4_4 = data1.d[1].LinhVuc_YTe;
                            III_4_5 = data1.d[1].LinhVuc_CongNghiep;
                            III_4_6 = data1.d[1].LinhVuc_Khac;
                            III_4_7 = data1.d[1].Tong_ToChucXuPhat;
                            III_4_8 = data1.d[1].Tong_TienXuPhat;
                            III_4_9 = data1.d[1].HanhViDienHinh;

                            III_5_3 = data1.d[2].Tong_ThanhTraKiemTra;
                            III_5_4 = data1.d[2].LinhVuc_YTe;
                            III_5_5 = data1.d[2].LinhVuc_CongNghiep;
                            III_5_6 = data1.d[2].LinhVuc_Khac;
                            III_5_7 = data1.d[2].Tong_ToChucXuPhat;
                            III_5_8 = data1.d[2].Tong_TienXuPhat;
                            III_5_9 = data1.d[2].HanhViDienHinh;

                            III_6_3 = data1.d[3].Tong_ThanhTraKiemTra;
                            III_6_4 = data1.d[3].LinhVuc_YTe;
                            III_6_5 = data1.d[3].LinhVuc_CongNghiep;
                            III_6_6 = data1.d[3].LinhVuc_Khac;
                            III_6_7 = data1.d[3].Tong_ToChucXuPhat;
                            III_6_8 = data1.d[3].Tong_TienXuPhat;
                            III_6_9 = data1.d[3].HanhViDienHinh;

                            III_7_3 = data1.d[4].Tong_ThanhTraKiemTra;
                            III_7_4 = data1.d[4].LinhVuc_YTe;
                            III_7_5 = data1.d[4].LinhVuc_CongNghiep;
                            III_7_6 = data1.d[4].LinhVuc_Khac;
                            III_7_7 = data1.d[4].Tong_ToChucXuPhat;
                            III_7_8 = data1.d[4].Tong_TienXuPhat;
                            III_7_9 = data1.d[4].HanhViDienHinh;

                            III_8_3 = data1.d[5].Tong_ThanhTraKiemTra;
                            III_8_4 = data1.d[5].LinhVuc_YTe;
                            III_8_5 = data1.d[5].LinhVuc_CongNghiep;
                            III_8_6 = data1.d[5].LinhVuc_Khac;
                            III_8_7 = data1.d[5].Tong_ToChucXuPhat;
                            III_8_8 = data1.d[5].Tong_TienXuPhat;
                            III_8_9 = data1.d[5].HanhViDienHinh;

                            //Thêm cột tổng 
                            III_9_3 = data1.d[6].Tong_ThanhTraKiemTra;
                            III_9_4 = data1.d[6].LinhVuc_YTe;
                            III_9_5 = data1.d[6].LinhVuc_CongNghiep;
                            III_9_6 = data1.d[6].LinhVuc_Khac;
                            III_9_7 = data1.d[6].Tong_ToChucXuPhat;
                            III_9_8 = data1.d[6].Tong_TienXuPhat;
                            III_9_9 = data1.d[6].HanhViDienHinh;

                        }
                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            if (data1 != null)
                            {
                                // Giá trị mặc định cho nam_ky nếu data1.KyBaoCao là null
                                nam_ky = data1.KyBaoCao ?? DateTime.Now.Year.ToString();

                                // Xử lý TuNgay
                                if (data1.TuNgay == null)
                                {
                                    tu_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    tu_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var tuNgayParts = ((string)data1.TuNgay).Split(' ')[0].Split('/');
                                    if (tuNgayParts.Length >= 2)
                                    {
                                        tu_thang = tuNgayParts[0];
                                        tu_ngay = tuNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng TuNgay không hợp lệ nếu cần
                                        tu_thang = DateTime.Now.Month.ToString("D2");
                                        tu_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }

                                // Xử lý DenNgay
                                if (data1.DenNgay == null)
                                {
                                    den_nam = DateTime.Now.Year.ToString();
                                    den_thang = DateTime.Now.Month.ToString("D2"); // Đảm bảo tháng có hai chữ số
                                    den_ngay = DateTime.Now.Day.ToString("D2");    // Đảm bảo ngày có hai chữ số
                                }
                                else
                                {
                                    var denNgayParts = ((string)data1.DenNgay).Split(' ')[0].Split('/');
                                    if (denNgayParts.Length >= 3)
                                    {
                                        den_nam = denNgayParts[2];
                                        den_thang = denNgayParts[0];
                                        den_ngay = denNgayParts[1];
                                    }
                                    else
                                    {
                                        // Xử lý định dạng DenNgay không hợp lệ nếu cần
                                        den_nam = DateTime.Now.Year.ToString();
                                        den_thang = DateTime.Now.Month.ToString("D2");
                                        den_ngay = DateTime.Now.Day.ToString("D2");
                                    }
                                }
                            }
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 2)
                    {
                        step2 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step2 != null)
                        {
                            dynamic? data1 = step2.form.data;
                            I_2_3 = data1.d[0].CongViecLienQuan;
                            I_2_4 = data1.d[0].SoLuongGiayPhep;

                            I_3_2 = data1.d[1].CongViecLienQuan;
                            I_3_3 = data1.d[1].SoLuongGiayPhep;

                            I_4_2 = data1.d[2].CongViecLienQuan;
                            I_4_3 = data1.d[2].SoLuongGiayPhep;

                            I_5_2 = data1.d[3].CongViecLienQuan;
                            I_5_3 = data1.d[3].SoLuongGiayPhep;

                            I_6_2 = data1.d[4].CongViecLienQuan;
                            I_6_3 = data1.d[4].SoLuongGiayPhep;

                            I_7_2 = data1.d[5].CongViecLienQuan;
                            I_7_3 = data1.d[5].SoLuongGiayPhep;

                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 3)
                    {
                        step3 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step3 != null)
                        {

                            tableData2 = step3.form.data.d;
                            //tableDataTotal2 = step3.form.data.total;
                        }

                    }

                    
                   
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 5)
                    {
                        step5 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step5 != null)
                        {
                            tableData3 = step5.form.data.d;
                            //tableDataTotal3 = step5.form.data.total;
                        }

                    }

                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 6)
                    {
                        step6= JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step6 != null)
                        {
                            tableData4 = step6.form.data.d;

                        }

                    }

                }



                container.Page(page =>
                {
                    page.Size(PageSizes.A4.Landscape());
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(450);
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 16c/ATBX").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("CÔNG TÁC QUẢN LÝ AN TOÀN BỨC XẠ").Bold();
                            table.Cell().Row(1).Column(3).Text("Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Element(Center).Text("VÀ HẠT NHÂN TOÀN QUỐC").Bold();
                            table.Cell().Row(2).Column(3).Text("Bộ Khoa học và Công nghệ");

                            table.Cell().Row(3).Column(1).Text("").Bold();
                            table.Cell().Row(3).Column(2).Element(Center).Text("Kỳ báo cáo: Năm " + nam_ky).Italic();
                            table.Cell().Row(3).Column(3).Text("Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("(Từ ngày " + tu_ngay + "tháng " + tu_thang + " năm đến ngày " + den_ngay + " tháng " + den_thang + " năm " + den_nam + " )").Italic();
                            table.Cell().Row(4).Column(3).Text("Thủ tướng Chính phủ");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("_______________").FontSize(12);
                            table.Cell().Row(5).Column(3).Text("");

                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("1. Hoạt động cấp phép tiến hành công việc bức xạ của Bộ Khoa học và Công nghệ").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.ConstantColumn(120);
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Lĩnh vực sử dụng").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Công việc bức xạ liên quan").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Số lượng Giấy phép").Bold();

                            table.Cell().Row(2).Column(1).Element(Title).Text("1").Bold();
                            table.Cell().Row(2).Column(2).Element(Block).Text("Công nghiệp");
                            table.Cell().Row(2).Column(3).Element(Block).Text(I_2_3 ?? "");
                            table.Cell().Row(2).Column(4).Element(Block).Text(I_2_4 ?? "");

                            table.Cell().Row(3).Column(1).Element(Title).Text("2").Bold();
                            table.Cell().Row(3).Column(2).Element(Block).Text("Y tế");
                            table.Cell().Row(3).Column(3).Element(Block).Text(I_3_2 ?? "");
                            table.Cell().Row(3).Column(4).Element(Block).Text(I_3_3 ?? "");

                            table.Cell().Row(4).Column(1).Element(Title).Text("3").Bold();
                            table.Cell().Row(4).Column(2).Element(Block).Text("Kinh doanh");
                            table.Cell().Row(4).Column(3).Element(Block).Text(I_4_2 ?? "");
                            table.Cell().Row(4).Column(4).Element(Block).Text(I_4_3 ?? "");

                            table.Cell().Row(5).Column(1).Element(Title).Text("4").Bold();
                            table.Cell().Row(5).Column(2).Element(Block).Text("Nghiên cứu và đào tạo");
                            table.Cell().Row(5).Column(3).Element(Block).Text(I_5_2 ?? "");
                            table.Cell().Row(5).Column(4).Element(Block).Text(I_5_3 ?? "");

                            table.Cell().Row(6).Column(1).Element(Title).Text("5").Bold();
                            table.Cell().Row(6).Column(2).Element(Block).Text("Lĩnh vực khác");
                            table.Cell().Row(6).Column(3).Element(Block).Text(I_6_2 ?? "");
                            table.Cell().Row(6).Column(4).Element(Block).Text(I_6_3 ?? "");

                            table.Cell().Row(7).Column(1).Element(Title).Text("").Bold();
                            table.Cell().Row(7).Column(2).Element(Block).Text("Tổng").Bold();
                            table.Cell().Row(7).Column(3).Element(Block).Text(I_7_2 ?? "");
                            table.Cell().Row(7).Column(4).Element(Block).Text(I_7_3 ?? "");

                        });

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(8)
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        column.Item().PaddingTop(10).PaddingBottom(10).AlignLeft().Text("2. Hoạt động cấp phép tiến hành công việc bức xạ của Uỷ ban nhân dân tỉnh, thành phố trực thuộc Trung ưng").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên sở").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Số lượng Giấy phép đã cấp").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Số lượng thiết bị X quang đã cấp").Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData2)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;

                                    string Index = item.tt ?? "";
                                    string TenSo = item.TenSo ?? "";
                                    string SoLuongGiayPhep = item.SoLuongGiayPhep ?? "";
                                    string SoLuongThietBi = item.SoLuongThietBi ?? "";
                                
                                   

                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(SoLuongGiayPhep).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(SoLuongThietBi).FontSize(14);
                                    i++;
                                }
                            }
                          

                       
                          
                        });

                        column.Item().PaddingBottom(10).PaddingTop(18).AlignLeft().Text("3. Kết quả thanh tra, kiểm tra và xử phạt vi phạm hành chính").Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(70);
                                columns.ConstantColumn(120);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên Cơ quan, đơn vị").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(3).Element(Title).Text("Tổng số cuộc thanh tra/kiểm tra").Bold();
                            table.Cell().ColumnSpan(3).Row(1).Column(4).Element(Title).Text("Lĩnh vực hoạt động của đối tượng thanh tra").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(7).Element(Title).Text("Tổng số tổ chức, cá nhân bị xử phạt").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(8).Element(Title).Text("Tổng số tiền đã xử phạt (triệu đồng)").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(9).Element(Title).Text("Các hành vi vi phạm điển hình đã bị xử lý").Bold();

                            table.Cell().Row(2).Column(4).Element(Title).Text("Y tế (%)").Bold();
                            table.Cell().Row(2).Column(5).Element(Title).Text("Công nghiệp (%)").Bold();
                            table.Cell().Row(2).Column(6).Element(Title).Text("Khác (%)").Bold();

                            table.Cell().Row(3).Column(1).Element(Title).Text("A").Bold();
                            table.Cell().Row(3).Column(2).Element(Title).Text("Bộ Khoa học và Công nghệ").Bold();
                            table.Cell().Row(3).Column(3).Element(Block).Text(III_3_3 ?? "");
                            table.Cell().Row(3).Column(4).Element(Block).Text(III_3_4 ?? "");
                            table.Cell().Row(3).Column(5).Element(Block).Text(III_3_5 ?? "");
                            table.Cell().Row(3).Column(6).Element(Block).Text(III_3_6 ?? "");
                            table.Cell().Row(3).Column(7).Element(Block).Text(III_3_7 ?? "");
                            table.Cell().Row(3).Column(8).Element(Block).Text(III_3_8 ?? "");
                            table.Cell().Row(3).Column(9).Element(Block).Text(III_3_9 ?? "");

                            table.Cell().Row(4).Column(1).Element(Title).Text("1").Bold();
                            table.Cell().Row(4).Column(2).Element(Title).Text("Kết quả thanh tra và xử phạt vi phạm hành chính");
                            table.Cell().Row(4).Column(3).Element(Block).Text(III_4_3 ?? "");
                            table.Cell().Row(4).Column(4).Element(Block).Text(III_4_4 ?? "");
                            table.Cell().Row(4).Column(5).Element(Block).Text(III_4_5 ?? "");
                            table.Cell().Row(4).Column(6).Element(Block).Text(III_4_6 ?? "");
                            table.Cell().Row(4).Column(7).Element(Block).Text(III_4_7 ?? "");
                            table.Cell().Row(4).Column(8).Element(Block).Text(III_4_8 ?? "");
                            table.Cell().Row(4).Column(9).Element(Block).Text(III_4_9 ?? "");

                            table.Cell().Row(5).Column(1).Element(Title).Text("2").Bold();
                            table.Cell().Row(5).Column(2).Element(Title).Text("Kết quả kiểm tra và xử phạt vi phạm hành chính");
                            table.Cell().Row(5).Column(3).Element(Block).Text(III_5_3 ?? "");
                            table.Cell().Row(5).Column(4).Element(Block).Text(III_5_4 ?? "");
                            table.Cell().Row(5).Column(5).Element(Block).Text(III_5_5 ?? "");
                            table.Cell().Row(5).Column(6).Element(Block).Text(III_5_6 ?? "");
                            table.Cell().Row(5).Column(7).Element(Block).Text(III_5_7 ?? "");
                            table.Cell().Row(5).Column(8).Element(Block).Text(III_5_8 ?? "");
                            table.Cell().Row(5).Column(9).Element(Block).Text(III_5_9 ?? "");

                            table.Cell().Row(6).Column(1).Element(Title).Text("B").Bold();
                            table.Cell().Row(6).Column(2).Element(Title).Text("Uỷ ban nhân dân cấp tỉnh").Bold();
                            table.Cell().Row(6).Column(3).Element(Block).Text(III_6_3 ?? "");
                            table.Cell().Row(6).Column(4).Element(Block).Text(III_6_4 ?? "");
                            table.Cell().Row(6).Column(5).Element(Block).Text(III_6_5 ?? "");
                            table.Cell().Row(6).Column(6).Element(Block).Text(III_6_6 ?? "");
                            table.Cell().Row(6).Column(7).Element(Block).Text(III_6_7 ?? "");
                            table.Cell().Row(6).Column(8).Element(Block).Text(III_6_8 ?? "");
                            table.Cell().Row(6).Column(9).Element(Block).Text(III_6_9 ?? "");

                            table.Cell().Row(7).Column(1).Element(Title).Text("1").Bold();
                            table.Cell().Row(7).Column(2).Element(Title).Text("Kết quả thanh tra và xử phạt vi phạm hành chính");
                            table.Cell().Row(7).Column(3).Element(Block).Text(III_7_3 ?? "");
                            table.Cell().Row(7).Column(4).Element(Block).Text(III_7_4 ?? "");
                            table.Cell().Row(7).Column(5).Element(Block).Text(III_7_5 ?? "");
                            table.Cell().Row(7).Column(6).Element(Block).Text(III_7_6 ?? "");
                            table.Cell().Row(7).Column(7).Element(Block).Text(III_7_7 ?? "");
                            table.Cell().Row(7).Column(8).Element(Block).Text(III_7_8 ?? "");
                            table.Cell().Row(7).Column(9).Element(Block).Text(III_7_9 ?? "");

                            table.Cell().Row(8).Column(1).Element(Title).Text("2").Bold();
                            table.Cell().Row(8).Column(2).Element(Title).Text("Kết quả kiểm tra và xử phạt vi phạm hành chính");
                            table.Cell().Row(8).Column(3).Element(Block).Text(III_8_3 ?? "");
                            table.Cell().Row(8).Column(4).Element(Block).Text(III_8_4 ?? "");
                            table.Cell().Row(8).Column(5).Element(Block).Text(III_8_5 ?? "");
                            table.Cell().Row(8).Column(6).Element(Block).Text(III_8_6 ?? "");
                            table.Cell().Row(8).Column(7).Element(Block).Text(III_8_7 ?? "");
                            table.Cell().Row(8).Column(8).Element(Block).Text(III_8_8 ?? "");
                            table.Cell().Row(8).Column(9).Element(Block).Text(III_8_9 ?? "");

                            table.Cell().Row(9).Column(1).Element(Title).Text("").Bold();
                            table.Cell().Row(9).Column(2).Element(Title).Text("Tổng").Bold();
                            table.Cell().Row(9).Column(3).Element(Block).Text(III_9_3 ?? "");
                            table.Cell().Row(9).Column(4).Element(Block).Text(III_9_4 ?? "");
                            table.Cell().Row(9).Column(5).Element(Block).Text(III_9_5 ?? "");
                            table.Cell().Row(9).Column(6).Element(Block).Text(III_9_6 ?? "");
                            table.Cell().Row(9).Column(7).Element(Block).Text(III_9_7 ?? "");
                            table.Cell().Row(9).Column(8).Element(Block).Text(III_9_8 ?? "");
                            table.Cell().Row(9).Column(9).Element(Block).Text(III_9_9 ?? "");

                        });

                        column.Item().PaddingBottom(10).PaddingTop(18).AlignLeft().Text("4. Hoạt động thanh sát hạt nhân của IAEA tại Việt Nam").Bold().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Tên sở").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Số khai báo").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Số khai báo").Bold();

                            table.Cell().Row(2).Column(3).Element(Title).Text("Theo Hiệp định thanh sát hạt nhân").Italic().Bold();
                            table.Cell().Row(2).Column(4).Element(Title).Text("Theo Nghị định thư bổ sung").Italic().Bold();

                            uint rowIndex = 1;
                            uint i = 1;

                            foreach (var item in tableData3)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 2;
                                    string Index = item.tt ?? "";
                                    string TenCoSo = item.TenCoSo ?? "";
                                    string HiepDinh = item.HiepDinh ?? "";
                                    string NghiDinh = item.NghiDinh ?? "";


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(Index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(HiepDinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(NghiDinh).FontSize(14);

                                    i++;
                                }
                                
                            }
                            

                        });

                        column.Item().PaddingBottom(10).PaddingTop(18).AlignLeft().Text("5. Hoạt động thanh sát trong nước").Bold().FontSize(12);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("TT").Bold();
                            table.Cell().Row(1).Column(2).Element(Title).Text("Tên cơ sở (địa chỉ)").Bold();
                            table.Cell().Row(1).Column(3).Element(Title).Text("Tên vật liệu hạt nhân (VLHN) và vật liệu hạt nhân nguồn (VLHNN)").Bold();
                            table.Cell().Row(1).Column(4).Element(Title).Text("Trạng thái vật lý và hoá học của VLHN và VLHNN").Bold();
                            table.Cell().Row(1).Column(5).Element(Title).Text("Khối lượng của VLHN và VLHNN đang có tại cơ sở").Bold();
                            table.Cell().Row(1).Column(6).Element(Title).Text("Khối lượng của Uran nghèo (DU) đang được lưu giữ (nếu có)").Bold();
                            table.Cell().Row(1).Column(7).Element(Title).Text("Sự tăng hoặc giảm của VLHN và VLHNN so với báo cáo trước").Bold();
                            table.Cell().Row(1).Column(8).Element(Title).Text("Sự thay đổi về địa điểm và địa chỉ của nơi làm việc, kho lưu giữ VLHN, VLHNN hoặc DU so với các báo cáo trước đó với IAEA").Bold();
                            
                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in tableData4)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();

                                    rowIndex = i + 1;

                                    string TenCoSo = item.TenCoSo.ToString();
                                    string TenVatLieu = item.TenVatLieu.ToString();
                                    string TrangThai = item.TrangThai.ToString();
                                    string KhoiLuong = item.KhoiLuong.ToString();
                                    string KhoiLuongUran = item.KhoiLuongUran.ToString();
                                    string SuTangGiam = item.SuTangGiam.ToString();
                                    string SuThayDoi = item.SuThayDoi.ToString();


                                    table.Cell().Row(rowIndex).Column(1).Element(Title).Text(index).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(TenCoSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(TenVatLieu).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(TrangThai).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(KhoiLuong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(KhoiLuongUran).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(SuTangGiam).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(8).Element(Title).Text(SuThayDoi).FontSize(14);

                                    i++;
                                }

                            }

                          
                        });
                    });
                });
            })
                .GeneratePdf(path);
        return path;
    }
    #endregion

    #region Thông tu 15
    public string XuatMau01TT15(string path, Workflow workflow)
    {
        var DonVi = "";
        var KyNgay = "";
        var NguoiKyLapBieu = "";
        var NguoiKyKiemTra = "";
        var NguoiKyThuTruong = "";
        int day = 00;
        int month = 00;
        int year = 0000;


     
        var pageSizes = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7)>();
      

        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;



        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    DonVi = data1.DonVi;
                    NguoiKyLapBieu = data1.NguoiLapBieu.NguoiKy ?? "";
                    NguoiKyKiemTra = data1.NguoiKiemTraBieu.NguoiKy ?? "";
                    NguoiKyThuTruong = data1.ThuTruongDonVi.NguoiKy ?? "";
                    KyNgay = data1.ThuTruongDonVi.KyNgay ?? "";
                   
                    string[] parts = KyNgay.Split(' ');
                    string datePart = parts[0];
                    string[] dateParts = datePart.Split('/');
                    day = int.Parse(dateParts[0]);
                    month = int.Parse(dateParts[1]);
                    year = int.Parse(dateParts[2]);

                    if (data1.d != null)
                    {
                        foreach (var page in data1.d)
                        {
                            string NoiDung = page.tt + ' ' + page.NoiDung;
                            pageSizes.Add((
                            NoiDung,
                            page.MaSo ?? "",
                            page.Tong ?? "",
                            page.NhaNuoc_TrungUong ?? "",
                            page.NhaNuoc_DiaPhuong ?? "",
                            page.KinhTe_NgoaiNhaNuoc ?? "",
                            page.KinhTe_VonNuocNgoai ?? ""

                            ));
                        }

                    }
                   
                }
            }
           
        }     
        //-------------------------------------------------------
        
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().AlignCenter().Text(text =>
                       {
                           text.Line("Phụ lục 2").Bold();

                       });
                       column.Item().Text(text =>
                       {
                           text.Line("BIỂU MẪU VÀ HƯỚNG DẪN ĐIỀN BIỂU MẪU BÁO CÁO THỐNG KÊ NGÀNH KHOA HỌC VÀ CÔNG NGHỆ ").Bold();
                           text.Line("(Ban hành kèm theo Thông số 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018 của Bộ trưởng Bộ Khoa học và Công nghệ) ").Italic();
                       });

                       column.Item().Row(
                       row =>
                       {

                          
                           row.RelativeItem(5)
                                        .AlignLeft()
                                         .Text(text =>
                                         {
                                            
                                             text.AlignLeft();
                                             text.Line("Biểu số 01/KHCN-TC").Bold();
                                             text.Line("Ban hành kèm theo Thông tư số 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018");
                                             text.Line("Ngày nhận báo cáo:Ngày 15/02 năm sau");
                                         });
                                           row.RelativeItem(7)
                                          .AlignCenter()
                                          .Text(text =>
                                        {
                         
                          text.AlignCenter();
                          text.Line("SỐ TỔ CHỨC KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                          text.Span("(Có đến ngày 31/12 năm     )").Italic();

                      });
                           row.RelativeItem(4)
                                   .AlignRight()
                                   .Text(text =>
                                   {
                                      
                                       text.AlignLeft();
                                       text.Line("Đơn vị báo cáo:").Bold();
                                       text.Line(DonVi);
                                       text.Line("Đơn vị nhận báo cáo:").Bold();
                                       text.Span("Cục Thông tin KH&CN quốc gia");
                                   });
                       });
                   });
                    page.Content()

                       .Column(column =>
                       {
                           //nọi dung
                           column.Item().PaddingTop(5).AlignRight().Text(text =>
                           {
                               text.Span("Đơn vị tính:Tổ chức").Italic();
                           });
                           column.Item().Row(
                              row =>
                              {
                                  //START table
                                  //                   
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(80);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);


                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("");
                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("Mã số ");
                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("Tổng số");
                                          header.Cell().ColumnSpan(4).Element(CellStyle).AlignCenter().Text("Chia theo loại hình kinh tế ");
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Nhà nước");
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Ngoài nhà nước");
                                          header.Cell().RowSpan(2).Element(CellStyle).AlignCenter().Text("Có vốn đầu tư nước ngoài");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Trung ương");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Địa phương");


                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page1 in pageSizes)
                                      {
                                          string[] check = { "1 Tổng số (trong đó)", "1.1 Chia theo thẩm quyền thành lập", "1.2 Chia theo loại hình tổ chức", "1.3 Lĩnh vực khoa học và công nghệ" };

                                          if (check.Contains(page1.content1)) { table.Cell().Element(CellStyle).AlignLeft().Text(page1.content1).Bold(); }
                                          else { table.Cell().Element(CellStyle).AlignLeft().Text(page1.content1); }
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content2);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content6);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content7);
                                        
                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });
                                  column.Item().Row(
                                      
                                  row =>
                                  {

                   
                          
                          row.RelativeItem(5)
                          .PaddingTop(20)
                          .PaddingVertical(10)
                              .AlignLeft()
                              .Text(text =>
                                        {
                                          
                                            text.AlignCenter();
                                            text.Line("Người lập biểu").Bold();
                                            text.Line("(ký,ghi rõ họ tên)").Italic();
                                            text.Line(NguoiKyLapBieu).LineHeight(2);
                                        });
                          row.RelativeItem(5)
                                       .PaddingTop(20)
                             .PaddingVertical(10)
                     .AlignLeft()
                     .Text(text =>
                     {
                        

                         text.AlignCenter();
                         text.Line("Người kiểm tra biểu").Bold();
                         text.Line("(ký,ghi rõ họ tên)").Italic();
                         text.Line(NguoiKyKiemTra).LineHeight(2);

                     });

                          row.RelativeItem(5)
                             .PaddingTop(20)
                             .PaddingBottom(80)
                                  .AlignRight()
                                  .Text(text =>
                                  {
                                      text.AlignCenter();
                                      text.Line($" ,ngày  {day}  tháng   {month}  năm {year}").Italic();
                                      text.Line("Thủ trưởng đơn vị").Bold();
                                      text.Line("(Ký, ghi rõ họ tên và đóng dấu)").Italic();
                                      text.Line(NguoiKyThuTruong).LineHeight(2);
                                  });

                                });
                                  //END table
                                  column.Item().Text(text =>
                                  {
                                      text.Line("HƯỚNG DẪN ĐIỀN BIỂU MẪU 01/KHCN-TC SỐ TỔ CHỨC KHOA HỌC VÀ CÔNG NGHỆ").Bold();

                                  });


                                  column.Item()

                                  .Text(text =>
                                  {
                                      text.Line("1.Khái niệm, phương pháp tính").Bold();
                                      text.Line("Tổ chức khoa học và công nghệ (KH&CN) là tổ chức có chức năng chủyếu là nghiên cứu khoa học, nghiên cứu triển khai và phát triển công nghệ, hoạt động dịch vụ KH&CN, được thành lập và đăng ký hoạt động theo quy định của pháp luật");
                                      text.Span("Phương pháp tính: Tổng số tổ chức KH&CN có tại thời điểm báo cáo.");
                                  });
                                  column.Item()
                                  .Text(text =>
                                  {

                                      text.Line("1.1 Thẩm quyền thành lập.").Bold().Italic();
                                      text.Line("a) Quốc hội, Ủy ban thường vụ Quốc hội thành lập tổ chức KH&CNthuộc Quốc hội, Ủy ban thường vụ Quốc hội;");
                                      text.Line("b) Chính phủ thành lập tổ chức KH&CN thuộc Chính phủ;");
                                      text.Line("c) Toà án nhân dân tối cao thành lập tổ chức KH&CN thuộc Tòa án nhândân tối cao;");
                                      text.Line("d) Viện Kiểm sát nhân dân tối cao thành lập tổ chức KH&CN thuộc ViệnKiểm sát nhân dân tối cao;");
                                      text.Line("đ) Thủ tướng Chính phủ thành lập hoặc ủy quyền cho Bộ trưởng, Thủ trưởng cơ quan ngang bộ, cơ quan thuộc Chính phủ thành lập tổ chức KH&CN thuộc bộ, cơ quan ngang bộ, cơ quan thuộc Chính phủ;");
                                      text.Line("e) Bộ trưởng, Thủ trưởng cơ quan ngang bộ, cơ quan thuộc Chính phủthành lập tổ chức KH&CN thuộc bộ, cơ quan ngang bộ, cơ quan thuộc Chính phủ, trừ trường hợp quy định tại điểm điều khoản này;");
                                      text.Line("g) Ủy ban nhân dân cấp tỉnh thành lập tổ chức KH&CN của địa phương theo thẩm quyền;");
                                      text.Line("h) Tổ chức chính trị, tổ chức chính trị - xã hội, tổ chức xã hội, tổ chức xã hội - nghề nghiệp thành lập tổ chức KH&CN theo quy định của pháp luật vàđiều lệ;");
                                      text.Line("i) Doanh nghiệp, tổ chức khác, cá nhân thành lập tổ chức KH&CN củamình.");


                                      text.Line("1.2 Loại hình tổ chức.").Bold().Italic();
                                      text.Span("- Tổ chức nghiên cứu khoa học và phát triển công nghệ:").Italic();
                                      text.Line("Tổ chức nghiên cứu khoa học, tổ chức nghiên cứu khoa học và phát triển công nghệ được tổchức dưới hình thức viện hàn lâm, viện, trung tâm, phòng thí nghiệm, trạm.nghiên cứu, trạm quan trắc, trạm thử nghiệm và hình thức khác do Bộ trưởng BộKH&CN quy định;");
                                      text.Span("- Cơ sở giáo dục đại học, cao đẳng").Italic();
                                      text.Line("được tổ chức theo quy định của Luật giáo dục đại học bao gồm: Trường đại học, học viện; đại học quốc gia, đại họcvùng; viện nghiên cứu khoa học được phép đào tạo trình độ tiến sĩ; Trường cao đẳng được tổ chức theo Luật giáo dục nghề nghiệp;");
                                      text.Line("-Tổ chức dịch vụ KH & CN").Italic();
                                      text.Line(" được tổ chức dưới hình thức trung tâm, văn phòng, phòng thử nghiệm và hình thức khác do Bộ trưởng Bộ KH&CN quy định. Đây là những đơn vị có nhiệm vụ tiến hành các hoạt động phục vụ, hỗ trợ kỹ thuật cho việc nghiên cứu khoa học và phát triển công nghệ; hoạt động liên quan đến sở hữu trí tuệ, chuyển giao công nghệ, tiêu chuẩn, quy chuẩn kỹ thuật, đo lường, chất lượng sản phẩm, hàng hóa, an toàn bức xạ, hạt nhân và năng lượng nguyên tử; dịch vụ về thông tin, tư vấn, đào tạo, bồi dưỡng, phổ biến, ứng dụng thành tựu KH&CN trong các lĩnh vực kinh tế - xã hội. Tổ chức dịch vụ KH&CN được quy định Quyết định số 12/2008/QĐ-BKHCN ngày 4/9/2008 của Bộ KH&CN về việc ban hành một số bảng phân loại thống kê KH&CN (Quyết định 12/2008/QĐ-BKHCN), bao gồm: ");
                                      text.Line(" “DV thông tin, thư viện”, “DV bảo tàng KH&CN”, “DV dịch thuật, biên tập, xuất bản cho KH&CN”, “DV điều tra cơ bản định kỳ, thường xuyên”, “DV thống kê, điều tra xã hội”, “DV tiêu chuẩn, quy chuẩn kỹ thuật, đo lường, chất lượng sản phẩm, hàng hóa”, “DV tư vấn về KH&CN”, “DV sở hữu trí tuệ”, “DV năng lượng nguyên tử, an toàn bức xạ hạt nhân”, “DV chuyển giao công nghệ” và “DV KH&CN khác”.").Italic();


                                      text.Line("1.3. Lĩnh vực KH&CN chính.").Bold().Italic();
                                      text.Line("Lĩnh vực nghiên cứu:").Bold();
                                      text.Line("Tính số tổ chức KH&CN chia theo lĩnh vực nghiên cứu. Tính đến cấp 1 của Bảng phân loại lĩnh vực nghiên cứu KH&CN ban hành kèm theo Quyết định 12/2008/QĐ-BKHCN như sau:");
                                      text.Line("- Khoa học tự nhiên;");
                                      text.Line("- Khoa học kỹ thuật và công nghệ;");
                                      text.Line("- Khoa học y, dược;");
                                      text.Line("- Khoa học nông nghiệp;");
                                      text.Line("- Khoa học xã hội;");
                                      text.Line("- Khoa học nhân văn.");
                                      text.Line("Trường hợp tổ chức thực hiện nghiên cứu trong nhiều lĩnh vực thì chỉ lấy chức năng chính theo nhiệm vụ được giao.");


                                      text.Line("1.4. Loại hình kinh tế.").Bold().Italic();
                                      text.Line("Chia theo 3 loại hình kinh tế:");
                                      text.Line("- Nhà nước (Trung ương và địa phương);");
                                      text.Line("- Ngoài nhà nước;");
                                      text.Line("- Có vốn đầu tư nước ngoài");


                                      text.Line("2. Cách ghi biểu").Bold().Italic();
                                      text.Line("Chia theo 3 loại hình kinh tế:");
                                      text.Line("- Cột 1: Tổng số tổ chức KH&CN, tương ứng với các dòng ở cột A;");
                                      text.Line("- Cột 2-5: Tổng số tổ chức hoạt động KH&CN theo loại hình kinh tế tương ứng với các dòng ở cột A.");
                                      text.Line(" 3. Nguồn số liệu").Bold();
                                      text.Line("Hồ sơ quản lý của Văn phòng đăng ký hoạt động KH&CN; Vụ Tổ chức cán bộ (Bộ KH&CN).");
                                      text.Line("Số liệu thống kê do cơ quan, đơn vị thuộc các Bộ, cơ quan ngang Bộ, cơ quan thuộc Chính phủ, Tòa án nhân dân tối cao, Viện kiểm sát nhân dân tối cao được giao nhiệm vụ thống kê KH&CN; Sở KH&CN các tỉnh, TP trực thuộc Trung ương tổng hợp.");

                                  });

                              });
                       });
                    page.Footer()
           .Column(column =>
           {
               ;

               column.Item()
                  .Text(footerText =>
                  {

                  });
           });
                });
            })

    .GeneratePdf(path);
        return path;
    }

    public string XuatMau02TT15(string path, Workflow workflow)
    {

        var DonVi = "";
        var KyNgay = "";
        var NguoiKyLapBieu = "";
        var NguoiKyKiemTra = "";
        var NguoiKyThuTruong = "";
        int day = 00;
        int month = 00;
        int year = 0000;

   

        var pageSizes = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8, string content9, string content10)>()
{
       ("A", "B","1","2","3","4","5","6","7","8"),
      
};
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;
                    DonVi = data1.DonVi;
                    NguoiKyLapBieu = data1.NguoiLapBieu.NguoiKy ?? "";
                    NguoiKyKiemTra = data1.NguoiKiemTraBieu.NguoiKy ?? "";
                    NguoiKyThuTruong = data1.ThuTruongDonVi.NguoiKy ?? "";
                    KyNgay = data1.ThuTruongDonVi.KyNgay ?? "";

                    string[] parts = KyNgay.Split(' ');

                    string datePart = parts[0];
                    string[] dateParts = datePart.Split('/');

                    day = int.Parse(dateParts[0]);
                    month = int.Parse(dateParts[1]);
                    year = int.Parse(dateParts[2]);

                    if (data1.d != null)
                    {
                        foreach (var page in data1.d)
                        {
                            string NoiDung;
                       
                            NoiDung = page.tt + ' ' + page.NoiDung;

                            pageSizes.Add((
                            NoiDung,
                            page.MaSo ?? "",
                            page.Tong ?? "",
                            page.TienSi ?? "",
                            page.ThacSi ?? "",
                            page.DaiHoc ?? "",
                            page.CaoDang ?? "",
                            page.Khac ?? "",
                            page.GiaoSu ?? "",
                            page.PhoGiaoSu ?? ""
                            ));
                        }

                    }
                  
                }
            }

        }

        //-------------------------------------------------------

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().Row(
                       row =>
                       {
                           //row.Spacing(10);
                           row.RelativeItem(5)
                                        .AlignLeft()
                                         .Text(text =>
                                         {
                                             //text.ParagraphSpacing(1);
                                             text.AlignLeft();
                                             text.Line("Biểu số 02/KHCN-NL").Bold();
                                             text.Line("Ban hành kèm theo Thông tư số 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018");
                                             text.Line("Ngày nhận báo cáo:Ngày 15/02 năm sau");
                                         });
                           row.RelativeItem(7)
                      .AlignCenter()
                      .Text(text =>
                      {
                          //text.ParagraphSpacing(1);
                          text.AlignCenter();
                          text.Line("SỐ NGƯỜI TRONG CÁC TỔ CHỨC KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                          text.Span("(Có đến ngày 31/12 năm       )").Italic();

                      });
                           row.RelativeItem(4)
                                   .AlignRight()
                                   .Text(text =>
                                   {
                                       //text.ParagraphSpacing(1);
                                       text.AlignLeft();
                                       text.Line("Đơn vị báo cáo:").Bold();
                                       text.Line(DonVi);
                                       text.Line("Đơn vị nhận báo cáo:").Bold();
                                       text.Span("Cục Thông tin KH&CN quốc gia");
                                       });
                       });
                   });
                    page.Content()
                       .Column(column =>
                       {
                           //nọi dung
                           column.Item().PaddingTop(5).AlignRight().Text(text =>
                           {
                               text.Span("Đơn vị tính:Người").Italic();
                           });
                           column.Item().Row(
                              row =>
                              {
                                  //START table              
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(80);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);

                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("");
                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("Mã số ");
                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("Tổng số");
                                          header.Cell().ColumnSpan(5).Element(CellStyle).AlignCenter().Text("Chia theo trình độ chuyên môn ");
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Chức danh");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Tiến sĩ");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Thạc sĩ");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Đại học");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Cao đẳng");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Khác");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Giáo sư");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Phó Giáo sư");
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page1 in pageSizes)
                                      {
                                          string[] check = { "1 Tổng số", "2 Chia theo loại hình tổ chức", "3 Chia theo quốc tịch", "4 Chia theo lĩnh vực đào tạo", "5 Chia theo độ tuổi" };
                                          if (check.Contains(page1.content1)) { table.Cell().Element(CellStyle).AlignLeft().Text(page1.content1).Bold(); }
                                          else { table.Cell().Element(CellStyle).AlignLeft().Text(page1.content1); }

                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content2);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content6);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content7);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content8);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content9);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content10);
                                         
                                      }
                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                  });

                                  column.Item().Row(
                              row =>
                              {

                          //row.Spacing(10);
                          row.RelativeItem(5)
                          .PaddingTop(20)
                          .PaddingVertical(10)
                                       .AlignLeft()
                                        .Text(text =>
                                        {
                                            //text.ParagraphSpacing(1);
                                            text.AlignCenter();
                                            text.Line("Người lập biểu").Bold();
                                            text.Line("(ký,ghi rõ họ tên)").Italic();
                                            text.Line(NguoiKyLapBieu).LineHeight(2);
                                        });
                          row.RelativeItem(5)
                            .PaddingTop(20)
                             .PaddingVertical(10)
                     .AlignLeft()
                     .Text(text =>
                     {
                         //text.ParagraphSpacing(1);
                         text.AlignCenter();
                         text.Line("Người kiểm tra biểu").Bold();
                         text.Line("(ký,ghi rõ họ tên)").Italic();
                         text.Line(NguoiKyKiemTra).LineHeight(2);

                     });

                          row.RelativeItem(5)
                            .PaddingTop(20)
                             .PaddingBottom(80)
                                  .AlignRight()
                                  .Text(text =>
                                  {
                                      //text.ParagraphSpacing(1);
                                      text.AlignCenter();
                                      text.Line($"     ,ngày  {day} tháng  {month}  năm {year}").Italic();
                                      text.Line("Thủ trưởng đơn vị").Bold();
                                      text.Line("(Ký, ghi rõ họ tên và đóng dấu)").Italic();
                                      text.Line(NguoiKyThuTruong).LineHeight(2);
                                  });

                      });
                                  //END table

                                  column.Item().Text(text =>
                                  {
                                      text.Line("HƯỚNG DẪN ĐIỀN BIỂU MẪU 02/KHCN-NL SỐ NGƯỜI TRONG CÁC TỔ CHỨC KHOA HỌC VÀ CÔNG NGHỆ").Bold();

                                  });
                                  column.Item()
                                  .Text(text =>
                                  {
                                      text.ParagraphSpacing(20);
                                      text.Line("1.Khái niệm, phương pháp tính").Bold();
                                      text.Span("Số người trong các tổ chức KH&CN").Italic();
                                      text.Line(" là những lao động được tổ chức KH&CN quản lý, sử dụng và trả lương, bao gồm cả lao động được tuyển dụng chính thức và lao động hợp đồng từ 01 năm trở lên.");
                                      text.Span("Phương pháp tính: Tổng số người trong các tổ chức KH&CN tại thời điểm báo cáo.");
                                  });
                                  column.Item()

                                  .Text(text =>

                                  {
                                      text.ParagraphSpacing(8);
                                      text.Line("2. Cách ghi biểu.").Bold();
                                      text.Line("- Cột 1: Ghi tổng số người trong các tổ chức KH&CN, tương ứng với các dòng cột A. (Giá trị Cột 1= cột 2 + cột 3 + cột 4 + cột 5 + cột 6);");
                                      text.Line("- Cột 2 - cột 8: Ghi số người trong các tổ chức KH&CN theo trình độ chuyên môn và chức danh, tương ứng với các dòng cột A. Một người ở cột trình độ chuyên môn có thể được ghi trùng ở cột chức danh.");
                                      text.Span("Mục \"1. \"Trong đó số Nữ\":").Bold();
                                      text.Line("Dùng để xác định số người trong các tổ chức KH&CN có giới tính nữ.");
                                      text.Span("Mục \"2. Chia theo loại hình tổ chức\":").Bold();
                                      text.Line(" Gồm 3 phân nhóm: Tổ chức nghiên cứu khoa học và phát triển công nghệ; Cơ sở giáo dục đại học, cao đẳng; Tổ chức dịch vụ KH&CN. Trong đó mỗi phân nhóm chia theo số nữ và dân tộc thiểu số.");
                                      text.Span("Mục \"3. Chia theo quốc tịch\":").Bold();
                                      text.Line("Trong đó chia theo 2 nhóm là người Việt Nam (dân tộc Kinh và dân tộc thiểu số) và người nước ngoài. Nếu có lao động là người dân tộc thiểu số, thì tính tổng số, không phân biệt thành nhóm dân tộc thiểu số (như H'mong, Thái,..). Nếu có người nước ngoài thì chỉ ghi số lượng, không phân biệt quốc tịch.");
                                      text.Span("Mục \"4. Chia theo lĩnh vực đào tạo\":").Bold();


                                      text.Line("Chia theo các lĩnh vực chính: 1. Khoa học tự nhiên; 2. Khoa học kỹ thuật và công nghệ; 3. Khoa học y, dược; 4. Khoa học nông nghiệp; 5. Khoa học xã hội; 6. Khoa học nhân văn; 7. Khác..");
                                      text.Span("Mục 5. “Chia theo độ tuổi”:").Bold();
                                      text.Line(": đến 35 tuổi, từ 36-55 tuổi, từ 56-60 tuổi, từ 61-65 tuổi, trên 65 tuổi.");
                                      text.Line("3. Nguồn số liệu").Bold();
                                      text.Span("Hồ sơ quản lý của Vụ Tổ chức cán bộ (Bộ KH&CN).");
                                      text.Line("Số liệu thống kê do cơ quan, đơn vị thuộc các Bộ, cơ quan ngang Bộ, cơ quan thuộc Chính phủ, Tòa án nhân dân tối cao, Viện kiểm sát nhân dân tối cao được giao nhiệm vụ thống kê KH&CN; Sở KH&CN các tỉnh, TP trực thuộc Trung ương tổng hợp");
                                      text.Span("Mời bạn đọc cùng tham khảo thêm tại mục ");
                                      text.SectionLink("thủ tục hành chính", "https://www.questpdf.com").FontColor(Colors.Blue.Medium).Underline();
                                      text.Span(" trong mục");
                                      text.Line(" biểu mẫu nhé.").FontColor(Colors.Blue.Medium).Underline();

                                  });

                              });
                       });
                    page.Footer()
           .Column(column =>
           {
               ;
               column.Item()
                  .Text(footerText =>
                  {
                  });
           });
                });
            })
               .GeneratePdf(path);
        return path;
    }

    public string XuatMau03TT15(string path, Workflow workflow)
    {

        var DonVi = "";
        var KyNgay = "";
        var NguoiKyLapBieu = "";
        var NguoiKyKiemTra = "";
        var NguoiKyThuTruong = "";
        int day = 00;
        int month = 00;
        int year = 0000;

        var pageSizes3 = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7)>()
{
       ("A", "B","1","2","3","4","5"),
       //("Tổng chi trong đó:", "01", "", "", "", "", ""),
  };    
       
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
       


        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;

                    DonVi = data1.DonVi;
                    NguoiKyLapBieu = data1.NguoLapBieu.NguoiKy ?? "";
                    NguoiKyKiemTra = data1.NguoiKiemTraBieu.NguoiKy ?? "";
                    NguoiKyThuTruong = data1.ThuTruongDonVi.NguoiKy ?? "";
                    //Tách ngày,tháng năm
                    KyNgay = data1.ThuTruongDonVi.KyNgay ?? "";

                    string[] parts = KyNgay.Split(' ');
                    string datePart = parts[0];
                    string[] dateParts = datePart.Split('/');

                    day = int.Parse(dateParts[0]);
                    month = int.Parse(dateParts[1]);
                    year = int.Parse(dateParts[2]);

                    if ( data1.d != null)
                    {
                        foreach (var page in data1.d)
                        {                     

                            string NoiDung;
                            NoiDung = page.tt + '.' + ' ' + page.NoiDung; 
                          

                            pageSizes3.Add((
                                          NoiDung,
                                          page.MaSo ?? "",
                                          page.Tong ?? "",
                                          page.NganSach_TrungUong ?? "",
                                          page.NganSach_DiaPhuong ?? "",
                                          page.NguonNgoaiNganSach ?? "",
                                          page.NguonNguocNgoai ?? ""
                                     
                            ));
                        }
                    }                 
                }

            }
        }
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));
                    page.Header().ShowOnce()
                   .Column(column =>
                   {
                       column.Item().Row(
                       row =>
                       {

                           //row.Spacing(10);
                           row.RelativeItem(5)
                                        .AlignLeft()
                                         .Text(text =>
                                         {
                                             //text.ParagraphSpacing(1);
                                             text.AlignLeft();
                                             text.Line("Biểu số 03/KHCN-CP").Bold();
                                             text.Line("Ban hành kèm theo Thông tư số 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018");
                                             text.Line("Ngày nhận báo cáo:Ngày 15/02 năm sau");
                                         });
                           row.RelativeItem(7)
                      .AlignCenter()
                      .Text(text =>
                      {
                          //text.ParagraphSpacing(1);
                          text.AlignCenter();
                          text.Line("CHI CHO KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                          text.Span("(Từ ngày 01/01 đến ngày 31/12 năm     )").Italic();
                      });
                           row.RelativeItem(4)
                                   .AlignRight()
                                   .Text(text =>
                                   {
                                       //text.ParagraphSpacing(1);
                                       text.AlignLeft();
                                       text.Line("Đơn vị báo cáo:").Bold();
                                       text.Line(DonVi);
                                       text.Line("Đơn vị nhận báo cáo:").Bold();
                                       text.Span("Cục Thông tin KH&CN quốc gia");
                                   });
                       });
                   });
                    page.Content()
                       //.PaddingVertical(0, Unit.Centimetre)
                       .Column(column =>
                       {
                           //nọi dung
                           column.Item().PaddingTop(5).AlignRight().Text(text =>
                           {
                               text.Span("Đơn vị tính:Triệu đồng").Italic();
                           });
                           column.Item().Row(
                              row =>
                              {
                                  //START table
                                  //                   
                                  column.Item().Table(table =>
                                  {
                                      IContainer DefaultCellStyle(IContainer container, string backgroundColor)
                                      {
                                          return container
                                              .Border(1)
                                              .BorderColor(Colors.Black)
                                              .ShowOnce()
                                              .PaddingVertical(5)
                                              .PaddingHorizontal(5)
                                              .AlignMiddle();
                                      }
                                      table.ColumnsDefinition(columns =>
                                      {
                                          columns.RelativeColumn(60);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);
                                          columns.RelativeColumn(30);


                                      });
                                      table.Header(header =>
                                      {
                                          // please be sure to call the 'header' handler!                               

                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("");
                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("Mã số ");
                                          header.Cell().RowSpan(3).Element(CellStyle).AlignCenter().Text("Tổng số");
                                          header.Cell().ColumnSpan(4).Element(CellStyle).AlignCenter().Text("Chi theo nguồn cấp kinh phí");
                                          header.Cell().ColumnSpan(2).Element(CellStyle).AlignCenter().Text("Ngân sách nhà nước");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nguồn trong nước ngoài ngân sách nhà nước");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Nguồn nước ngoài");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Trung ương");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("Địa phương");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("");
                                          header.Cell().Element(CellStyle).AlignCenter().Text("");
                                          ;
                                          IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.Grey.Lighten3);
                                      });
                                      foreach (var page1 in pageSizes3)
                                      {
                                          bool isBold = !page1.content1.Contains("Cấp quốc gia") && !page1.content1.Contains("Cấp tỉnh") && !page1.content1.Contains("Cấp bộ") && !page1.content1.Contains("Cấp cơ sở");
                                       
                                          if (isBold)
                                          {
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page1.content1).Bold();
                                          
                                          }
                                          else
                                          {
                                            
                                              table.Cell().Element(CellStyle).AlignLeft().Text(page1.content1);

                                          }

                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content2);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content3);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content4);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content5);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content6);
                                          table.Cell().Element(CellStyle).AlignCenter().Text(page1.content7);
                                      
                                      }

                                      IContainer CellStyle(IContainer container) => DefaultCellStyle(container, Colors.White).ShowOnce();
                                      //}
                                  });

                                  column.Item().Row(
                                  row =>
                                  {

                                      //row.Spacing(10);
                                      row.RelativeItem(5)
                                      .PaddingVertical(6)
                                       .PaddingTop(20)
                                                   .AlignLeft()
                                                    .Text(text =>
                                                    {
                                                        //text.ParagraphSpacing(1);
                                                        text.AlignCenter();
                                                        text.Line("Người lập biểu").Bold();
                                                        text.Line("(ký,ghi rõ họ tên)").Italic();
                                                        text.Line(NguoiKyLapBieu).LineHeight(2); ;
                                                    });
                                      row.RelativeItem(5)
                                       .PaddingTop(20)
                                         .PaddingVertical(10)
                                 .AlignLeft()
                                 .Text(text =>
                                 {
                                     //text.ParagraphSpacing(1);
                                     text.AlignCenter();
                                     text.Line("Người kiểm tra biểu").Bold();
                                     text.Line("(ký,ghi rõ họ tên)").Italic();
                                     text.Line(NguoiKyKiemTra).LineHeight(2); ;

                                 });

                                      row.RelativeItem(5)
                                      .PaddingTop(20)
                                         .PaddingBottom(80)
                                              .AlignRight()
                                              .Text(text =>
                                              {
                                                  //text.ParagraphSpacing(1);
                                                  text.AlignCenter();
                                                  text.Line($"   ,ngày {day}    tháng {month}  năm {year}").Italic();
                                                  text.Line("Thủ trưởng đơn vị").Bold();
                                                  text.Line("(Ký, ghi rõ họ tên và đóng dấu)").Italic();
                                                  text.Line(NguoiKyThuTruong).LineHeight(2); ;
                                              });

                                  });
                                  //END table
                                  column.Item()

                                  .Text(text =>

                                  {

                                      text.Span("Mời bạn đọc cùng tham khảo thêm tại mục ");

                                      text.SectionLink("thủ tục hành chính", "https://www.questpdf.com").FontColor(Colors.Blue.Medium).Underline();
                                      text.Span(" trong mục");
                                      text.Line(" biểu mẫu nhé.").FontColor(Colors.Blue.Medium).Underline();

                                  });

                              });
                       });
                    page.Footer()
           .Column(column =>
           {


               column.Item()
                  .Text(footerText =>
                  {
                  });
           });
                });
            })
              .GeneratePdf(path);
        return path;
    }

    public string XuatMau04TT15(string path, Workflow workflow)
    {

        var ngay = "";
        var thang = "";
        var nam = "";

        var don_vi_bao_bao = "";


        // mục 1
        var nguoi_lap_bien_ky = "";
        var nguoi_lap_bien_ho_ten = "";

        var nguoi_kiem_tra_bien_ky = "";
        var nguoi_kiem_tra_bien_ho_ten = "";

        var thu_truong_ky = "";
        var thu_truong_ho_ten = "";
        var thu_truong_dong_dau = "";

        var pageSizes3 = new List<(string content1, string content2, string content3, string content4, string content5, string content6, string content7, string content8)>();
        // Xuat quy trinh 1 -> có 5 bước
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;


       
        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;

               
                    if (data1.d != null)
                    {
                        foreach (var items in data1.d)
                    {
                       
                            string NoiDung;
                            NoiDung = items.tt + ' ' + items.NoiDung;
                            pageSizes3.Add((
                                          NoiDung,
                                          items.MaSo ?? "",
                                          items.Tong ?? "",
                                          items.TongSo_Nu ?? "",
                                          items.TienHanh_TrongNam ?? "",
                                          items.TienHanh_NamTruoc ?? "",
                                          items.NghiemThu ?? "",
                                          items.UngDung ?? ""

                            ));

                        }
                    }

                 

                    don_vi_bao_bao = data1.DonVi;

                    nguoi_lap_bien_ho_ten = data1.NguoiLapBieu.NguoiKy;
                    nguoi_kiem_tra_bien_ho_ten = data1.NguoiKiemTraBieu.NguoiKy;
                    thu_truong_ho_ten = data1.ThuTruongDonVi.NguoiKy;
                    thu_truong_ho_ten = data1.ThuTruongDonVi.NguoiKy;

                    string date = data1.ThuTruongDonVi.KyNgay;
                    string[] ngayThangNam = date.Split(' ');

                    date = ngayThangNam[0];

                    ngayThangNam = date.Split('/');

                    ngay = ngayThangNam[0];
                    thang = ngayThangNam[1];
                    nam = ngayThangNam[2];
                }

            }
          
        }

        QuestPDF.Fluent.Document
            .Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(40);
                            });

                            table.Cell().Row(1).Column(1).Text(Text =>
                            {
                                Text.Span("Biểu 04/KHCN-NV").Bold().FontSize(14);
                                Text.Span("Ban hành kèm theo Thông tư số 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018").FontSize(14);
                                Text.Span("\nNgày nhận báo cáo: Ngày 15/02 năm sau").FontSize(14);
                            });
                            table.Cell().Row(1).Column(2).AlignCenter().Text(Text =>
                            {
                                Text.Span("NHIỆM VỤ KHOA HỌC VÀ CÔNG NGHỆ").Bold().FontSize(14);
                                Text.Span("\n(Từ ngày 01/01 đến ngày\r\n31/12 năm " + nam + ")").FontSize(14);
                            });
                            table.Cell().Row(1).Column(3).AlignLeft().Text(Text =>
                            {
                                Text.Span("- Đơn vị báo cáo:").Bold().FontSize(14);
                                Text.Span("\n" + don_vi_bao_bao).FontSize(14);
                                Text.Span("\n- Đơn vị nhận báo cáo:").Bold().FontSize(14);
                                Text.Span("\nCục Thông tin KH&CN quốc gia").FontSize(14);
                            });
                        });
                        column.Item().AlignRight().PaddingBottom(10).Text("Đơn vị tính: Nhiệm vụ").Italic().FontSize(14);
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(2);
                                columns.ConstantColumn(30);
                                columns.ConstantColumn(40);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });
                            table.Cell().Row(1).Column(1).RowSpan(3).Element(BlockHead).Text("").FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(3).Element(BlockHead).Text("Mã số").FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(3).Element(BlockHead).Text("Tổng số").FontSize(14);
                            table.Cell().Row(1).Column(4).RowSpan(3).Element(BlockHead).Text("Trong đó: số nhiệm vụ KH&CN chủ nhiệm là nữ").FontSize(14);
                            table.Cell().Row(1).Column(5).ColumnSpan(4).Element(BlockHead).Text("Tình trạng tiến hành").FontSize(14);

                            table.Cell().Row(2).Column(5).ColumnSpan(2).Element(BlockHead).Text("Số đang tiến hành").FontSize(14);
                            table.Cell().Row(2).Column(7).RowSpan(2).Element(BlockHead).Text("Số được nghiệm thu").FontSize(14);
                            table.Cell().Row(2).Column(8).RowSpan(2).Element(BlockHead).Text("Số đã đưa vào ứng dụng").FontSize(14);

                            table.Cell().Row(3).Column(5).Element(BlockHead).Text("Số phê duyệt mới trong năm").FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockHead).Text("Số, chuyển tiếp từ năm trước").FontSize(14);

                            table.Cell().Row(4).Column(1).Element(BlockTT).Text("A").FontSize(14);
                            table.Cell().Row(4).Column(2).Element(BlockTT).Text("B").FontSize(14);
                            table.Cell().Row(4).Column(3).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(4).Column(4).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(4).Column(5).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(4).Column(6).Element(BlockTT).Text("4").FontSize(14);
                            table.Cell().Row(4).Column(7).Element(BlockTT).Text("5").FontSize(14);
                            table.Cell().Row(4).Column(8).Element(BlockTT).Text("6").FontSize(14);

                            foreach (var items in pageSizes3)
                            {
                                string[] check = { "1 Tổng số nhiệm vụ KH&CN", "2 Chia theo cấp quản lý", "3 Chia theo lĩnh vực nghiên cứu", "4 Chia theo mục tiêu kinh tế-xã hội" };

                                if (check.Contains(items.content1)) { table.Cell().Element(BlockItem).Text(items.content1).Bold().FontSize(14); }
                                else { table.Cell().Element(BlockItem).Text(items.content1).FontSize(14); }
                                table.Cell().Element(BlockTT).Text(items.content2).FontSize(14);
                                table.Cell().Element(BlockTT).Text(items.content3).FontSize(14);
                                table.Cell().Element(BlockTT).Text(items.content4).FontSize(14);
                                table.Cell().Element(BlockTT).Text(items.content5).FontSize(14);
                                table.Cell().Element(BlockTT).Text(items.content6).FontSize(14);
                                table.Cell().Element(BlockTT).Text(items.content7).FontSize(14);
                                table.Cell().Element(BlockTT).Text(items.content8).FontSize(14);
                            }
                           
                            //

                        });
                        column.Item().PaddingBottom(20).PaddingTop(10).Text("");
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(40);
                            });

                            table.Cell().Row(1).Column(1).AlignCenter().Text(Text =>
                            {
                                Text.Span("").FontSize(9);
                                Text.Span("Người lập biểu").Bold().FontSize(14);
                                Text.Span("\n(ký, ghi rõ họ tên)").Italic().FontSize(14);
                                Text.Span("\n" + nguoi_lap_bien_ky).FontSize(14);
                                Text.Span("\n" + nguoi_lap_bien_ho_ten).FontSize(14);
                            });
                            table.Cell().Row(1).Column(2).AlignCenter().Text(Text =>
                            {
                                Text.Span("").FontSize(9);
                                Text.Span("Người kiểm tra biểu").Bold().FontSize(14);
                                Text.Span("\n(ký, ghi rõ họ tên)").Italic().FontSize(14);
                                Text.Span("\n" + nguoi_kiem_tra_bien_ky).FontSize(14);
                                Text.Span("\n" + nguoi_kiem_tra_bien_ho_ten).FontSize(14);
                            });
                            table.Cell().Row(1).Column(3).AlignCenter().Text(Text =>
                            {
                              
                                Text.Span("Ngày " + ngay + ", tháng " + thang + ", năm " + nam).FontSize(9);
                                Text.Span("\nThủ trưởng đơn vị").Bold().FontSize(14);
                                Text.Span("\n(Ký, ghi rõ họ tên và đóng dấu)").Italic().FontSize(14);
                                Text.Span("\n" + thu_truong_ky).FontSize(14);
                                Text.Span("\n" + thu_truong_ho_ten).FontSize(14);
                                Text.Span("\n" + thu_truong_dong_dau).FontSize(14);
                            });
                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
              .GeneratePdf(path);
        return path;
    }

    public string XuatMau05TT15(string path, Workflow workflow)
    {
        var ngay = "";
        var thang = "";
        var nam = "";

        var don_vi_bao_bao = "";


      





        var nguoi_lap_bien_ky = "";
        var nguoi_lap_bien_ho_ten = "";

        var nguoi_kiem_tra_bien_ky = "";
        var nguoi_kiem_tra_bien_ho_ten = "";

        var thu_truong_ky = "";
        var thu_truong_ho_ten = "";
        var thu_truong_dong_dau = "";


        // Xuat quy trinh 1 -> có 5 bước
        List<WorkflowStep> steps = workflow.WorkflowSteps;
        dynamic? step1;
        dynamic dataTable = null;

        foreach (WorkflowStep workflowStep in steps)
        {
            if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
            {
                step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                if (step1 != null)
                {
                    dynamic? data1 = step1.form.data;

                   if(data1.d != null)
                    {
                        dataTable = data1.d;
                    }
                  

                     don_vi_bao_bao = data1.DonVi;

                    nguoi_lap_bien_ho_ten = data1.NguoiLapBieu.NguoiKy;
                    nguoi_kiem_tra_bien_ho_ten = data1.NguoiKiemTraBieu.NguoiKy;
                    thu_truong_ho_ten = data1.DonViThuTruong.NguoiKy;
                    thu_truong_ho_ten = data1.DonViThuTruong.NguoiKy;

                    string date = data1.DonViThuTruong.KyNgay;
                    string[] ngayThangNam = date.Split(' ');

                    date = ngayThangNam[0];

                    ngayThangNam = date.Split('/');

                    ngay = ngayThangNam[0];
                    thang = ngayThangNam[1];
                    nam = ngayThangNam[2];
                }

            }
         
        }
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(40);
                            });

                            table.Cell().Row(1).Column(1).Text(Text =>
                            {
                                Text.Span("Biểu 05/KHCN-NV").Bold().FontSize(14);
                                Text.Span("Ban hành kèm theo Thông tư số 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018").FontSize(14);
                                Text.Span("\nNgày nhận báo cáo: Ngày 15/02 năm sau").FontSize(14);
                            });
                            table.Cell().Row(1).Column(2).AlignCenter().Text(Text =>
                            {
                                Text.Span("HỢP TÁC QUỐC TẾ VỀ KHOA HỌC VÀ CÔNG NGHỆ").Bold().FontSize(14);
                                Text.Span("\n(Từ ngày 01/01 đến ngày\r\n31/12 năm " + nam + ")").FontSize(14);
                            });
                            table.Cell().Row(1).Column(3).AlignLeft().Text(Text =>
                            {
                                Text.Span("- Đơn vị báo cáo:").Bold().FontSize(14);
                                Text.Span("\n" + don_vi_bao_bao).FontSize(14);
                                Text.Span("\n- Đơn vị nhận báo cáo:").Bold().FontSize(14);
                                Text.Span("\nCục Thông tin KH&CN quốc gia").FontSize(14);
                            });
                        });
                        column.Item().PaddingTop(40).Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(4);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("").FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Mã số").FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Đơn vị tính").FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Tổng số").FontSize(14);
                            table.Cell().Row(1).Column(5).Element(BlockHead).Text("Tổng kinh phí (triệu đồng)").FontSize(14);

                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("A").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockTT).Text("B").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text("C").FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(2).Column(5).Element(BlockTT).Text("2").FontSize(14);


                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTable)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;
                                    string dataNoiDung = item.tt + ' ' + item.NoiDung;
                                   
                                    string NoiDung = dataNoiDung;
                                    string MaSo = item.MaSo.ToString();
                                    string DonViTinh = item.DonViTinh.ToString();
                                    string Tong = item.Tong.ToString();
                                    string TongKinhPhi = item.TongKinhPhi.ToString();
                                    string[] check = { "1 Số nhiệm vụ hợp tác quốc tế về KH&CN", "1.1 Chia theo lĩnh vực nghiên cứu", "1.2 Chia theo hình thức hợp tác", "1.3 Chia theo đối tác quốc tế", "1.4 Chia theo nguồn cấp kinh phí",
                                    "1.5 Chia theo cấp quản lý","2 Số điều ước, thỏa thuận quốc tế về KH$CN được ký kết","2.1 Chia theo lĩnh vực nghiên cứu","2.2 Chia theo đối tác quốc tế",
                                    "3 Số đoàn ra về KH&CN","3.1 Chia theo nước đến nghiên cứu","3.2 Chia theo nguồn cấp kinh phí thực hiện","4 Số đoàn vào về KH&CN","4.1 Chia theo nước cử đến nghiên cứu","4.2 Chia theo nguồn cấp kinh phí thực hiện"};

                                    if (check.Contains(NoiDung)) { table.Cell().Row(rowIndex).Column(1).Element(BlockItem).Text(NoiDung).FontSize(14).Bold(); }
                                    else { table.Cell().Row(rowIndex).Column(1).Element(BlockItem).Text(NoiDung).FontSize(14); }
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockTT).Text(MaSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockTT).Text(DonViTinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(Tong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockTT).Text(TongKinhPhi).FontSize(14);
                                  

                                    i++;
                                }
                            }

                        });
                        column.Item().PaddingBottom(20).PaddingTop(10).Text("");
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(40);
                            });

                            table.Cell().Row(1).Column(1).AlignCenter().Text(Text =>
                            {
                                Text.Span("").FontSize(9);
                                Text.Span("Người lập biểu").Bold().FontSize(14);
                                Text.Span("\n(ký, ghi rõ họ tên)").Italic().FontSize(14);
                                Text.Span("\n" + nguoi_lap_bien_ky).FontSize(14);
                                Text.Span("\n" + nguoi_lap_bien_ho_ten).FontSize(14);
                            });
                            table.Cell().Row(1).Column(2).AlignCenter().Text(Text =>
                            {
                                Text.Span("").FontSize(9);
                                Text.Span("Người kiểm tra biểu").Bold().FontSize(14);
                                Text.Span("\n(ký, ghi rõ họ tên)").Italic().FontSize(14);
                                Text.Span("\n" + nguoi_kiem_tra_bien_ky).FontSize(14);
                                Text.Span("\n" + nguoi_kiem_tra_bien_ho_ten).FontSize(14);
                            });
                            table.Cell().Row(1).Column(3).AlignCenter().Text(Text =>
                            {
                                Text.Span("Ngày " + ngay + ", tháng " + thang + ", năm " + nam).FontSize(9);
                                Text.Span("\nThủ trưởng đơn vị").Bold().FontSize(14);
                                Text.Span("\n(Ký, ghi rõ họ tên và đóng dấu)").Italic().FontSize(14);
                                Text.Span("\n" + thu_truong_ky).FontSize(14);
                                Text.Span("\n" + thu_truong_ho_ten).FontSize(14);
                                Text.Span("\n" + thu_truong_dong_dau).FontSize(14);
                            });
                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
                .GeneratePdf(path);
        return path;
    }

    public string XuatMau06TT15(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var ngay = "";
                var thang = "";
                var nam = "";

                var don_vi_bao_bao = "";


              


                var nguoi_lap_bien_ky = "";
                var nguoi_lap_bien_ho_ten = "";

                var nguoi_kiem_tra_bien_ky = "";
                var nguoi_kiem_tra_bien_ho_ten = "";

                var thu_truong_ky = "";
                var thu_truong_ho_ten = "";
                var thu_truong_dong_dau = "";

                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic dataTable = null;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                          if(data1 != null)
                            {
                                dataTable = data1.d;
                            }
                         

                            don_vi_bao_bao = data1.DonVi;

                            nguoi_lap_bien_ho_ten = data1.NguoiLapBieu.NguoiKy;
                            nguoi_kiem_tra_bien_ho_ten = data1.NguoiKiemTraBieu.NguoiKy;
                            thu_truong_ho_ten = data1.ThuTruongDonVi.NguoiKy;
                            thu_truong_ho_ten = data1.ThuTruongDonVi.NguoiKy;

                            string date = data1.ThuTruongDonVi.KyNgay;
                            string[] ngayThangNam = date.Split(' ');

                            date = ngayThangNam[0];

                            ngayThangNam = date.Split('/');

                            ngay = ngayThangNam[0];
                            thang = ngayThangNam[1];
                            nam = ngayThangNam[2];
                        }

                    }
                 
                }


                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(40);
                            });

                            table.Cell().Row(1).Column(1).Text(Text =>
                            {
                                Text.Span("Biểu 06/KHCN-CG").Bold().FontSize(14);
                                Text.Span("Ban hành kèm theo Thông tư số 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018").FontSize(14);
                                Text.Span("\nNgày nhận báo cáo: Ngày 15/02 năm sau").FontSize(14);
                            });
                            table.Cell().Row(1).Column(2).AlignCenter().Text(Text =>
                            {
                                Text.Span("CHUYỂN GIAO CÔNG NGHỆ").Bold().FontSize(14);
                                Text.Span("\n(Từ ngày 01/01 đến ngày\r\n31/12 năm " + nam + ")").FontSize(14);
                            });
                            table.Cell().Row(1).Column(3).AlignLeft().Text(Text =>
                            {
                                Text.Span("- Đơn vị báo cáo:").Bold().FontSize(14);
                                Text.Span("\n" + don_vi_bao_bao).FontSize(14);
                                Text.Span("\n- Đơn vị nhận báo cáo:").Bold().FontSize(14);
                                Text.Span("\nCục Thông tin KH&CN quốc gia").FontSize(14);
                            });
                        });
                        column.Item().PaddingTop(40).Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(4);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).Element(BlockHead).Text("").Bold().FontSize(14);
                            table.Cell().Row(1).Column(2).Element(BlockHead).Text("Mã số").Bold().FontSize(14);
                            table.Cell().Row(1).Column(3).Element(BlockHead).Text("Đơn vị tính").Bold().FontSize(14);
                            table.Cell().Row(1).Column(4).Element(BlockHead).Text("Tổng số").Bold().FontSize(14);


                            table.Cell().Row(2).Column(1).Element(BlockTT).Text("A").FontSize(14);
                            table.Cell().Row(2).Column(2).Element(BlockTT).Text("B").FontSize(14);
                            table.Cell().Row(2).Column(3).Element(BlockTT).Text("C").FontSize(14);
                            table.Cell().Row(2).Column(4).Element(BlockTT).Text("1").FontSize(14);

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTable)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;
                                    string dataNoiDung = item.tt + ' ' + item.NoiDung;

                                    string NoiDung = dataNoiDung;
                                    string MaSo = item.MaSo.ToString();
                                    string DonViTinh = item.DonViTinh.ToString();
                                    string Tong = item.Tong.ToString();

                                    string[] check = { "1 Số hợp đồng chuyển giao công nghệ đã được đăng ký", "2 Số hợp đồng chuyển giao công nghệ đã được cấp phép", "3 Số hợp đồng chuyển giao công nghệ được thực hiện", "3.1 Chia theo ngành kinh tế (*)", "3.2 Chia theo loại hình kinh tế",
                                    "3.3 Chia theo hình thức chuyển giao","4 Tổng giá trị hợp đồng chuyển giao công nghệ","4.1 Chia theo ngành kinh tế","4.2 Chia theo loại hình kinh tế","4.3 Chia theo loại hình kinh tế","4.4 Chia theo nguồn cấp kinh phí","5 Số dự án đầu tư được thẩm định công nghệ","5.1 Chia theo ngành kinh tế","5.2 Chia theo loại hình kinh tế","5.3 Chia theo nước đầu tư"
                                    };

                                    if (check.Contains(NoiDung)) { table.Cell().Row(rowIndex).Column(1).Element(BlockItem).Text(NoiDung).FontSize(14).Bold(); }
                                    else { table.Cell().Row(rowIndex).Column(1).Element(BlockItem).Text(NoiDung).FontSize(14); }
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockTT).Text(MaSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockTT).Text(DonViTinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(Tong).FontSize(14);
                             


                                    i++;
                                }
                            }

                        });
                        column.Item().PaddingBottom(20).PaddingTop(10).Text("(*) Ghi theo cấp 1 của bảng Hệ thống ngành kinh tế Việt Nam theo Quyết định " +
                            "số 27/2018/QĐ-TTg về Hệ thống ngành kinh tế Việt Nam");
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(40);
                            });

                            table.Cell().Row(1).Column(1).AlignCenter().Text(Text =>
                            {
                                Text.Span("Người lập biểu").Bold().FontSize(14);
                                Text.Span("\n(ký, ghi rõ họ tên)").Italic().FontSize(14);
                                Text.Span("\n" + nguoi_lap_bien_ky).FontSize(14);
                                Text.Span("\n" + nguoi_lap_bien_ho_ten).FontSize(14);
                            });
                            table.Cell().Row(1).Column(2).AlignCenter().Text(Text =>
                            {
                                Text.Span("Người kiểm tra biểu").Bold().FontSize(14);
                                Text.Span("\n(ký, ghi rõ họ tên)").Italic().FontSize(14);
                                Text.Span("\n" + nguoi_kiem_tra_bien_ky).FontSize(14);
                                Text.Span("\n" + nguoi_kiem_tra_bien_ho_ten).FontSize(14);
                            });
                            table.Cell().Row(1).Column(3).AlignCenter().Text(Text =>
                            {
                                Text.Span("Ngày " + ngay + ", tháng " + thang + ", năm " + nam).FontSize(9);
                                Text.Span("\nThủ trưởng đơn vị").Bold().FontSize(14);
                                Text.Span("\n(Ký, ghi rõ họ tên và đóng dấu)").Italic().FontSize(14);
                                Text.Span("\n" + thu_truong_ky).FontSize(14);
                                Text.Span("\n" + thu_truong_ho_ten).FontSize(14);
                                Text.Span("\n" + thu_truong_dong_dau).FontSize(14);
                            });
                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5)
                                .AlignMiddle();
                        }
                    });


                    //    page.Footer()
                    //        .AlignCenter()
                    //        .Text(x =>
                    //        {
                    //            x.Span("Trang ");
                    //            x.CurrentPageNumber();
                    //       });
                });
            })
             .GeneratePdf(path);
        return path;
    }

    public string XuatMau07TT15(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {

                var don_vi_bao_cao = "";
                var den_nam = "";

                var thu = "";
                var ngay = "";
                var thang = "";
                var nam = "";

               

                var chu_ky_nguoi_lap = "";
                var chu_ky_nguoi_kiem_tra = "";
                var thu_truong_don_vi = "";

                var ten_nguoi_lap = "";
                var ten_nguoi_kiem_tra = "";
                var ten_thu_truong_don_vi = "";

                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic dataTable = null;


                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {

                            dynamic? data1 = step1.form.data;
                           
                            if(data1.d != null)
                            {
                                dataTable = data1.d;
                            }    

                            //chu_ky_nguoi_lap = data1.NguoiLapBieu.MaChuKy;
                            //chu_ky_nguoi_kiem_tra = data1.NguoiKiemTraBieu.MaChuKy;
                            //thu_truong_don_vi = data1.ThuTruongDonVi.MaChuKy;

                            ten_nguoi_lap = data1.NguoiLapBieu.NguoiKy;
                            ten_nguoi_kiem_tra = data1.NguoiKiemTraBieu.NguoiKy;
                            ten_thu_truong_don_vi = data1.ThuTruongDonVi.NguoiKy;

                            string ngaythangnam = data1.ThuTruongDonVi.KyNgay.ToString();
                            string[] thoiGian = ngaythangnam.Split(' ');
                            ngaythangnam = thoiGian[0];
                            string[] ThoiGian = ngaythangnam.Split('/');
                            ngay = ThoiGian[0];
                            thang = ThoiGian[1];
                            nam = ThoiGian[2];

                        }

                    }

                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(150);
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 07/KHCN-DN").Bold();
                            //table.Cell().Row(1).Column(2).Element(Center).Text("").Bold();
                            table.Cell().Row(1).Column(3).Text("- Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("Ban hành kèm theo Thông tư 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018");
                            table.Cell().Row(2).Column(2).Element(Center).Text("DOANH NGIỆP VÀ THỊ TRƯỜNG KHOA HỌC VÀ CÔNG NGHỆ").Bold();
                            table.Cell().Row(2).Column(3).Text(don_vi_bao_cao);

                            table.Cell().Row(3).Column(1).Text("Ngày nhận báo cáo: Ngày 15/02 năm sau");
                            table.Cell().Row(3).Column(2).Element(Center).Text("(Có đến ngày 31/12 năm" + den_nam + ")");
                            table.Cell().Row(3).Column(3).Text("- Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("").Italic();
                            table.Cell().Row(4).Column(3).Text("Cục Thông tin KH & CN quốc gia");


                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                               .AlignLeft();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(8)
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(170);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().RowSpan(2).Row(1).Column(1).Element(Title).Text("");
                            table.Cell().RowSpan(2).Row(1).Column(2).Element(Title).Text("Mã số");
                            table.Cell().RowSpan(2).Column(3).Element(Title).Text("Đơn vị tính");
                            table.Cell().RowSpan(2).Column(4).Element(Title).Text("Tổng số");
                            table.Cell().ColumnSpan(3).Row(1).Column(5).Element(Title).Text("Loại hình kinh tế");

                            table.Cell().Row(2).Column(5).Element(Title).Text("Nhà nước");
                            table.Cell().Row(2).Column(6).Element(Title).Text("Ngoài nhà nước");
                            table.Cell().Row(2).Column(7).Element(Title).Text("Có vốn đầu tư nước ngoài");

                            table.Cell().Row(3).Column(1).Element(Title).Text("A");
                            table.Cell().Row(3).Column(2).Element(Title).Text("B");
                            table.Cell().Row(3).Column(3).Element(Title).Text("C");
                            table.Cell().Row(3).Column(4).Element(Title).Text("1");
                            table.Cell().Row(3).Column(5).Element(Title).Text("2");
                            table.Cell().Row(3).Column(6).Element(Title).Text("3");
                            table.Cell().Row(3).Column(7).Element(Title).Text("4");

                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTable)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;
                                    string dataNoiDung = item.tt + ' ' + item.NoiDung;

                                    string NoiDung = dataNoiDung;
                                    string MaSo = item.MaSo.ToString();
                                    string DonViTinh = item.DonViTinh.ToString();
                                    string Tong = item.Tong.ToString();
                                    string KinhTe_NhaNuoc = item.KinhTe_NhaNuoc.ToString();
                                    string KinhTe_NgoaiNhaNuoc = item.KinhTe_NgoaiNhaNuoc.ToString();
                                    string KinhTe_VonDauTu = item.KinhTe_VonDauTu.ToString();

                                    string[] check = { "1 Doanh nghiệp KH&CN", "1.1 Số doanh nghiệp KH&CN đang hoạt động", "1.2 Chia theo ngành kinh tế (*)", "1.3 Số doanh nghiệp KH&CN giải thể/ngừng hoạt động/bị thu hồi Giấy chứng nhận", "1.4 Chia theo hình thức thành lập",
                                    "2 Số tổ chức trung gian của thị trường khoa học và công nghệ (Chia theo loại hình tổ chức)","3 Giá trị giao dịch của thị trường KH&CN","3.1 Chia theo ngành kinh tế (*)","3.2 Chia theo nước/vùng lãnh thổ","3.3 Chia theo hình thức"
                                    };

                                    if (check.Contains(NoiDung)) { table.Cell().Row(rowIndex).Column(1).Element(Block).Text(NoiDung).FontSize(14).Bold(); }
                                    else { table.Cell().Row(rowIndex).Column(1).Element(Block).Text(NoiDung).FontSize(14); }
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(MaSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(DonViTinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(Tong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(KinhTe_NhaNuoc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(Title).Text(KinhTe_NgoaiNhaNuoc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(Title).Text(KinhTe_VonDauTu).FontSize(14);



                                    i++;
                                }
                            }


                        });

                        column.Item().PaddingTop(15).PaddingBottom(10).AlignLeft().Text("* Ghi theo cấp 1 của bảng Hệ thống ngành kinh tế Việt Nam theo Quyết định số 27/2018/QĐ-TTg về Hệ thống ngành kinh tế Việt Nam").Italic().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Center).Text("Người lập biểu").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("Người kiểm tra biểu").Bold();
                            table.Cell().Row(1).Column(3).Element(Center).Text(thu + " , ngày " + ngay + " tháng " + thang + " năm " + nam).Italic();

                            table.Cell().Row(2).Column(1).Element(Center).Text("(ký, ghi rõ họ tên)").Italic();
                            table.Cell().Row(2).Column(2).Element(Center).Text("(ký, ghi rõ họ tên)").Italic();
                            table.Cell().Row(2).Column(3).Element(Center).Text("Thủ trưởng đơn vị").Bold();

                            table.Cell().Row(3).Column(1).Element(Center).Text("");
                            table.Cell().Row(3).Column(2).Element(Center).Text("");
                            table.Cell().Row(3).Column(3).Element(Center).Text("(Ký, ghi rõ họ tên và đóng dấu)").Italic();

                            //table.Cell().Row(4).Column(1).Element(Center).Text(chu_ky_nguoi_lap);
                            //table.Cell().Row(4).Column(2).Element(Center).Text(chu_ky_nguoi_kiem_tra);
                            //table.Cell().Row(4).Column(3).Element(Center).Text(thu_truong_don_vi);

                            table.Cell().Row(5).Column(1).Element(Center).Text(ten_nguoi_lap);
                            table.Cell().Row(5).Column(2).Element(Center).Text(ten_nguoi_kiem_tra);
                            table.Cell().Row(5).Column(3).Element(Center).Text(ten_thu_truong_don_vi);

                        });

                    });
                });
            })
                .GeneratePdf(path);
        return path;
    }

    public string XuatMau08TT15(string path, Workflow workflow)
    {


        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam_den = "";
                var thu = "";
                var ngay = "";
                var thang = "";
                var nam = "";

                var M_1_1 = "";
                var M_1_2 = "";
                var M_1_3 = "";
                var M_1_4 = "";
                var M_1_5 = "";
                var M_1_6 = "";
                var M_1_7 = "";
                var M_1_8 = "";

                var M_2_1 = "";
                var M_2_2 = "";
                var M_2_3 = "";
                var M_2_4 = "";
                var M_2_5 = "";
                var M_2_6 = "";
                var M_2_7 = "";
                var M_2_8 = "";

                var M_3_1 = "";
                var M_3_2 = "";
                var M_3_3 = "";
                var M_3_4 = "";
                var M_3_5 = "";
                var M_3_6 = "";
                var M_3_7 = "";
                var M_3_8 = "";

                var M_4_1 = "";
                var M_4_2 = "";
                var M_4_3 = "";
                var M_4_4 = "";
                var M_4_5 = "";
                var M_4_6 = "";
                var M_4_7 = "";
                var M_4_8 = "";

                var M_5_1 = "";
                var M_5_2 = "";
                var M_5_3 = "";
                var M_5_4 = "";
                var M_5_5 = "";
                var M_5_6 = "";
                var M_5_7 = "";
                var M_5_8 = "";

                var M_6_1 = "";
                var M_6_2 = "";
                var M_6_3 = "";
                var M_6_4 = "";
                var M_6_5 = "";
                var M_6_6 = "";
                var M_6_7 = "";
                var M_6_8 = "";

                var M_7_1 = "";
                var M_7_2 = "";
                var M_7_3 = "";
                var M_7_4 = "";
                var M_7_5 = "";
                var M_7_6 = "";
                var M_7_7 = "";
                var M_7_8 = "";

                var M_8_1 = "";
                var M_8_2 = "";
                var M_8_3 = "";
                var M_8_4 = "";
                var M_8_5 = "";
                var M_8_6 = "";
                var M_8_7 = "";
                var M_8_8 = "";

                var M_9_1 = "";
                var M_9_2 = "";
                var M_9_3 = "";
                var M_9_4 = "";
                var M_9_5 = "";
                var M_9_6 = "";
                var M_9_7 = "";
                var M_9_8 = "";

                var M_10_1 = "";
                var M_10_2 = "";
                var M_10_3 = "";
                var M_10_4 = "";
                var M_10_5 = "";
                var M_10_6 = "";
                var M_10_7 = "";
                var M_10_8 = "";

                var M_11_1 = "";
                var M_11_2 = "";
                var M_11_3 = "";
                var M_11_4 = "";
                var M_11_5 = "";
                var M_11_6 = "";
                var M_11_7 = "";
                var M_11_8 = "";

                var M_12_1 = "";
                var M_12_2 = "";
                var M_12_3 = "";
                var M_12_4 = "";
                var M_12_5 = "";
                var M_12_6 = "";
                var M_12_7 = "";
                var M_12_8 = "";

                var M_13_1 = "";
                var M_13_2 = "";
                var M_13_3 = "";
                var M_13_4 = "";
                var M_13_5 = "";
                var M_13_6 = "";
                var M_13_7 = "";
                var M_13_8 = "";

                var M_14_1 = "";
                var M_14_2 = "";
                var M_14_3 = "";
                var M_14_4 = "";
                var M_14_5 = "";
                var M_14_6 = "";
                var M_14_7 = "";
                var M_14_8 = "";

                var M_15_1 = "";
                var M_15_2 = "";
                var M_15_3 = "";
                var M_15_4 = "";
                var M_15_5 = "";
                var M_15_6 = "";
                var M_15_7 = "";
                var M_15_8 = "";

                var M_16_1 = "";
                var M_16_2 = "";
                var M_16_3 = "";
                var M_16_4 = "";
                var M_16_5 = "";
                var M_16_6 = "";
                var M_16_7 = "";
                var M_16_8 = "";

                var M_17_1 = "";
                var M_17_2 = "";
                var M_17_3 = "";
                var M_17_4 = "";
                var M_17_5 = "";
                var M_17_6 = "";
                var M_17_7 = "";
                var M_17_8 = "";

                var A_2 = "";
                var A_3 = "";
                var A_5 = "";
                var A_6 = "";
                var A_8 = "";
                var A_9 = "";

                var chu_ky_nguoi_lap = "";
                var chu_ky_nguoi_kiem_tra = "";
                var thu_truong_don_vi = "";

                var ten_nguoi_lap = "";
                var ten_nguoi_kiem_tra = "";
                var ten_thu_truong_don_vi = "";

                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
               
                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;
                            M_1_1 = data1.d[0].Tong;
                            M_1_2 = data1.d[0].Loai_SangChe;
                            M_1_3 = data1.d[0].Loai_GiaiPhap;
                            M_1_4 = data1.d[0].Loai_KieuDang;
                            M_1_5 = data1.d[0].Loai_ThietKe;
                            M_1_6 = data1.d[0].NhanHieu_QuocGia;
                            M_1_7 = data1.d[0].NhanHieu_VietNam;
                            M_1_8 = data1.d[0].Loai_ChiDan;

                            M_2_1 = data1.d[1].Tong;
                            M_2_2 = data1.d[1].Loai_SangChe;
                            M_2_3 = data1.d[1].Loai_GiaiPhap;
                            M_2_4 = data1.d[1].Loai_KieuDang;
                            M_2_5 = data1.d[1].Loai_ThietKe;
                            M_2_6 = data1.d[1].NhanHieu_QuocGia;
                            M_2_7 = data1.d[1].NhanHieu_VietNam;
                            M_2_8 = data1.d[1].Loai_ChiDan;

                            M_3_1 = data1.d[2].Tong;
                            M_3_2 = data1.d[2].Loai_SangChe;
                            M_3_3 = data1.d[2].Loai_GiaiPhap;
                            M_3_4 = data1.d[2].Loai_KieuDang;
                            M_3_5 = data1.d[2].Loai_ThietKe;
                            M_3_6 = data1.d[2].NhanHieu_QuocGia;
                            M_3_7 = data1.d[2].NhanHieu_VietNam;
                            M_3_8 = data1.d[2].Loai_ChiDan;

                            M_4_1 = data1.d[3].Tong;
                            M_4_2 = data1.d[3].Loai_SangChe;
                            M_4_3 = data1.d[3].Loai_GiaiPhap;
                            M_4_4 = data1.d[3].Loai_KieuDang;
                            M_4_5 = data1.d[3].Loai_ThietKe;
                            M_4_6 = data1.d[3].NhanHieu_QuocGia;
                            M_4_7 = data1.d[3].NhanHieu_VietNam;
                            M_4_8 = data1.d[3].Loai_ChiDan;

                            M_5_1 = data1.d[4].Tong;
                            M_5_2 = data1.d[4].Loai_SangChe;
                            M_5_3 = data1.d[4].Loai_GiaiPhap;
                            M_5_4 = data1.d[4].Loai_KieuDang;
                            M_5_5 = data1.d[4].Loai_ThietKe;
                            M_5_6 = data1.d[4].NhanHieu_QuocGia;
                            M_5_7 = data1.d[4].NhanHieu_VietNam;
                            M_5_8 = data1.d[4].Loai_ChiDan;

                            M_6_1 = data1.d[5].Tong;
                            M_6_2 = data1.d[5].Loai_SangChe;
                            M_6_3 = data1.d[5].Loai_GiaiPhap;
                            M_6_4 = data1.d[5].Loai_KieuDang;
                            M_6_5 = data1.d[5].Loai_ThietKe;
                            M_6_6 = data1.d[5].NhanHieu_QuocGia;
                            M_6_7 = data1.d[5].NhanHieu_VietNam;
                            M_6_8 = data1.d[5].Loai_ChiDan;

                            M_7_1 = data1.d[6].Tong;
                            M_7_2 = data1.d[6].Loai_SangChe;
                            M_7_3 = data1.d[6].Loai_GiaiPhap;
                            M_7_4 = data1.d[6].Loai_KieuDang;
                            M_7_5 = data1.d[6].Loai_ThietKe;
                            M_7_6 = data1.d[6].NhanHieu_QuocGia;
                            M_7_7 = data1.d[6].NhanHieu_VietNam;
                            M_7_8 = data1.d[6].Loai_ChiDan;

                            M_8_1 = data1.d[7].Tong;
                            M_8_2 = data1.d[7].Loai_SangChe;
                            M_8_3 = data1.d[7].Loai_GiaiPhap;
                            M_8_4 = data1.d[7].Loai_KieuDang;
                            M_8_5 = data1.d[7].Loai_ThietKe;
                            M_8_6 = data1.d[7].NhanHieu_QuocGia;
                            M_8_7 = data1.d[7].NhanHieu_VietNam;
                            M_8_8 = data1.d[7].Loai_ChiDan;

                            M_9_1 = data1.d[8].Tong;
                            M_9_2 = data1.d[8].Loai_SangChe;
                            M_9_3 = data1.d[8].Loai_GiaiPhap;
                            M_9_4 = data1.d[8].Loai_KieuDang;
                            M_9_5 = data1.d[8].Loai_ThietKe;
                            M_9_6 = data1.d[8].NhanHieu_QuocGia;
                            M_9_7 = data1.d[8].NhanHieu_VietNam;
                            M_9_8 = data1.d[8].Loai_ChiDan;

                            M_10_1 = data1.d[9].Tong;
                            M_10_2 = data1.d[9].Loai_SangChe;
                            M_10_3 = data1.d[9].Loai_GiaiPhap;
                            M_10_4 = data1.d[9].Loai_KieuDang;
                            M_10_5 = data1.d[9].Loai_ThietKe;
                            M_10_6 = data1.d[9].NhanHieu_QuocGia;
                            M_10_7 = data1.d[9].NhanHieu_VietNam;
                            M_10_8 = data1.d[9].Loai_ChiDan;

                            M_11_1 = data1.d[10].Tong;
                            M_11_2 = data1.d[10].Loai_SangChe;
                            M_11_3 = data1.d[10].Loai_GiaiPhap;
                            M_11_4 = data1.d[10].Loai_KieuDang;
                            M_11_5 = data1.d[10].Loai_ThietKe;
                            M_11_6 = data1.d[10].NhanHieu_QuocGia;
                            M_11_7 = data1.d[10].NhanHieu_VietNam;
                            M_11_8 = data1.d[10].Loai_ChiDan;

                            M_12_1 = data1.d[11].Tong;
                            M_12_2 = data1.d[11].Loai_SangChe;
                            M_12_3 = data1.d[11].Loai_GiaiPhap;
                            M_12_4 = data1.d[11].Loai_KieuDang;
                            M_12_5 = data1.d[11].Loai_ThietKe;
                            M_12_6 = data1.d[11].NhanHieu_QuocGia;
                            M_12_7 = data1.d[11].NhanHieu_VietNam;
                            M_12_8 = data1.d[11].Loai_ChiDan;

                            M_13_1 = data1.d[12].Tong;
                            M_13_2 = data1.d[12].Loai_SangChe;
                            M_13_3 = data1.d[12].Loai_GiaiPhap;
                            M_13_4 = data1.d[12].Loai_KieuDang;
                            M_13_5 = data1.d[12].Loai_ThietKe;
                            M_13_6 = data1.d[12].NhanHieu_QuocGia;
                            M_13_7 = data1.d[12].NhanHieu_VietNam;
                            M_13_8 = data1.d[12].Loai_ChiDan;

                            M_14_1 = data1.d[13].Tong;
                            M_14_2 = data1.d[13].Loai_SangChe;
                            M_14_3 = data1.d[13].Loai_GiaiPhap;
                            M_14_4 = data1.d[13].Loai_KieuDang;
                            M_14_5 = data1.d[13].Loai_ThietKe;
                            M_14_6 = data1.d[13].NhanHieu_QuocGia;
                            M_14_7 = data1.d[13].NhanHieu_VietNam;
                            M_14_8 = data1.d[13].Loai_ChiDan;

                            M_15_1 = data1.d[14].Tong;
                            M_15_2 = data1.d[14].Loai_SangChe;
                            M_15_3 = data1.d[14].Loai_GiaiPhap;
                            M_15_4 = data1.d[14].Loai_KieuDang;
                            M_15_5 = data1.d[14].Loai_ThietKe;
                            M_15_6 = data1.d[14].NhanHieu_QuocGia;
                            M_15_7 = data1.d[14].NhanHieu_VietNam;
                            M_15_8 = data1.d[14].Loai_ChiDan;

                            M_16_1 = data1.d[15].Tong;
                            M_16_2 = data1.d[15].Loai_SangChe;
                            M_16_3 = data1.d[15].Loai_GiaiPhap;
                            M_16_4 = data1.d[15].Loai_KieuDang;
                            M_16_5 = data1.d[15].Loai_ThietKe;
                            M_16_6 = data1.d[15].NhanHieu_QuocGia;
                            M_16_7 = data1.d[15].NhanHieu_VietNam;
                            M_16_8 = data1.d[15].Loai_ChiDan;

                            M_17_1 = data1.d[16].Tong;
                            M_17_2 = data1.d[16].Loai_SangChe;
                            M_17_3 = data1.d[16].Loai_GiaiPhap;
                            M_17_4 = data1.d[16].Loai_KieuDang;
                            M_17_5 = data1.d[16].Loai_ThietKe;
                            M_17_6 = data1.d[16].NhanHieu_QuocGia;
                            M_17_7 = data1.d[16].NhanHieu_VietNam;
                            M_17_8 = data1.d[16].Loai_ChiDan;

                            chu_ky_nguoi_lap = data1.NguoiLapBieu.MaChuKy;
                            chu_ky_nguoi_kiem_tra = data1.NguoiKiemTraBieu.MaChuKy;
                            thu_truong_don_vi = data1.ThuTruongDonVi.MaChuKy;

                            ten_nguoi_lap = data1.NguoiLapBieu.NguoiKy;
                            ten_nguoi_kiem_tra = data1.NguoiKiemTraBieu.NguoiKy;
                            ten_thu_truong_don_vi = data1.ThuTruongDonVi.NguoiKy;

                            string ngaythangnam = data1.ThuTruongDonVi.KyNgay.ToString();
                            string[] thoiGian = ngaythangnam.Split(' ');
                            ngaythangnam = thoiGian[0];
                            string[] ThoiGian = ngaythangnam.Split('/');
                            ngay = ThoiGian[0];
                            thang = ThoiGian[1];
                            nam = ThoiGian[2];


                        }
                    }

                }



                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(150);
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 08/KHCN-SHTT").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("SỞ HỮU TRÍ TUỆ").Bold();
                            table.Cell().Row(1).Column(3).Text("- Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("Ban hành kèm theo Thông tư 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018");
                            table.Cell().Row(2).Column(2).Text("(Có đến ngày 01/01 đến ngày 31/12 năm ..." + nam_den + ")");
                            table.Cell().Row(2).Column(3).Text("Cực Sở hữu trí tuệ");

                            table.Cell().Row(3).Column(1).Text("Ngày nhận báo cáo: Ngày 15/02 năm sau");
                            table.Cell().Row(3).Column(2).Text("");
                            table.Cell().Row(3).Column(3).Text("- Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("").Bold();
                            table.Cell().Row(4).Column(2).Element(Center).Text("").Italic();
                            table.Cell().Row(4).Column(3).Text("Cục Thông tin KH & CN quốc gia");


                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(8)
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(100);
                                columns.RelativeColumn();
                                columns.ConstantColumn(60);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });

                            //row 1
                            table.Cell().RowSpan(3).Row(1).Column(1).Element(Title).Text("");
                            table.Cell().RowSpan(3).Row(1).Column(2).Element(Title).Text("Mã số");
                            table.Cell().RowSpan(3).Column(3).Element(Title).Text("Đơn vị tính");
                            table.Cell().RowSpan(3).Column(4).Element(Title).Text("Tổng số");
                            table.Cell().ColumnSpan(7).Row(1).Column(5).Element(Title).Text("Loại hình đơn/ văn bằng");

                            table.Cell().RowSpan(2).Row(2).Column(5).Element(Title).Text("Sáng chế");
                            table.Cell().RowSpan(2).Row(2).Column(6).Element(Title).Text("Giải pháp hữu ích");
                            table.Cell().RowSpan(2).Row(2).Column(7).Element(Title).Text("Kiểu dáng công nghiệp");
                            table.Cell().RowSpan(2).Row(2).Column(8).Element(Title).Text("Thiết kế bố trí mạch tích hợp bán dẫn");
                            table.Cell().ColumnSpan(2).Row(2).Column(9).Element(Title).Text("Nhãn hiệu");
                            table.Cell().RowSpan(2).Row(2).Column(11).Element(Title).Text("Chỉ dẫn địa lý");

                            table.Cell().Row(3).Column(9).Element(Title).Text("Nhãn hiệu đăng ký quốc gia");
                            table.Cell().Row(3).Column(10).Element(Title).Text("Nhãn hiệu đăng ký quốc tế chỉ định Việt Nam");


                            table.Cell().Row(4).Column(1).Element(Title).Text("A");
                            table.Cell().Row(4).Column(2).Element(Title).Text("B");
                            table.Cell().Row(4).Column(3).Element(Title).Text("C");
                            table.Cell().Row(4).Column(4).Element(Title).Text("1");
                            table.Cell().Row(4).Column(5).Element(Title).Text("2");
                            table.Cell().Row(4).Column(6).Element(Title).Text("3");
                            table.Cell().Row(4).Column(7).Element(Title).Text("4");
                            table.Cell().Row(4).Column(8).Element(Title).Text("5");
                            table.Cell().Row(4).Column(9).Element(Title).Text("6");
                            table.Cell().Row(4).Column(10).Element(Title).Text("7");
                            table.Cell().Row(4).Column(11).Element(Title).Text("8");

                            table.Cell().Row(5).Column(1).Element(Block).Text("1. Số đơn đăng ký xác lập quyền sở hữu công nghiệp tại Việt Nam").Bold();
                            table.Cell().Row(5).Column(2).Element(Title).Text("01");
                            table.Cell().Row(5).Column(3).Element(Title).Text("Đơn").Italic();
                            table.Cell().Row(5).Column(4).Element(Title).Text(M_1_1);
                            table.Cell().Row(5).Column(5).Element(Title).Text(M_1_2);
                            table.Cell().Row(5).Column(6).Element(Title).Text(M_1_3);
                            table.Cell().Row(5).Column(7).Element(Title).Text(M_1_4);
                            table.Cell().Row(5).Column(8).Element(Title).Text(M_1_5);
                            table.Cell().Row(5).Column(9).Element(Title).Text(M_1_6);
                            table.Cell().Row(5).Column(10).Element(Title).Text(M_1_7);
                            table.Cell().Row(5).Column(11).Element(Title).Text(M_1_8);

                            table.Cell().Row(6).Column(1).Element(Block).Text("Chia theo quốc tịch người nộp đơn: \n - Nước " + A_2).Italic();
                            table.Cell().Row(6).Column(2).Element(Title).Text("02");
                            table.Cell().Row(6).Column(3).Element(Title).Text("Đơn").Italic();
                            table.Cell().Row(6).Column(4).Element(Title).Text(M_2_1);
                            table.Cell().Row(6).Column(5).Element(Title).Text(M_2_2);
                            table.Cell().Row(6).Column(6).Element(Title).Text(M_2_3);
                            table.Cell().Row(6).Column(7).Element(Title).Text(M_2_4);
                            table.Cell().Row(6).Column(8).Element(Title).Text(M_2_5);
                            table.Cell().Row(6).Column(9).Element(Title).Text(M_2_6);
                            table.Cell().Row(6).Column(10).Element(Title).Text(M_2_7);
                            table.Cell().Row(6).Column(11).Element(Title).Text(M_2_8);

                            table.Cell().Row(7).Column(1).Element(Block).Text("- Nước " + A_3).Italic();
                            table.Cell().Row(7).Column(2).Element(Title).Text("03");
                            table.Cell().Row(7).Column(3).Element(Title).Text("Đơn").Italic();
                            table.Cell().Row(7).Column(4).Element(Title).Text(M_3_1);
                            table.Cell().Row(7).Column(5).Element(Title).Text(M_3_2);
                            table.Cell().Row(7).Column(6).Element(Title).Text(M_3_3);
                            table.Cell().Row(7).Column(7).Element(Title).Text(M_3_4);
                            table.Cell().Row(7).Column(8).Element(Title).Text(M_3_5);
                            table.Cell().Row(7).Column(9).Element(Title).Text(M_3_6);
                            table.Cell().Row(7).Column(10).Element(Title).Text(M_3_7);
                            table.Cell().Row(7).Column(11).Element(Title).Text(M_3_8);

                            table.Cell().Row(8).Column(1).Element(Block).Text("2. Số văn bằng bảo hộ quyền Sở hữu công nghiệp tại Việt Nam").Bold();
                            table.Cell().Row(8).Column(2).Element(Title).Text("04");
                            table.Cell().Row(8).Column(3).Element(Title).Text("Văn bằng").Italic();
                            table.Cell().Row(8).Column(4).Element(Title).Text(M_4_1);
                            table.Cell().Row(8).Column(5).Element(Title).Text(M_4_2);
                            table.Cell().Row(8).Column(6).Element(Title).Text(M_4_3);
                            table.Cell().Row(8).Column(7).Element(Title).Text(M_4_4);
                            table.Cell().Row(8).Column(8).Element(Title).Text(M_4_5);
                            table.Cell().Row(8).Column(9).Element(Title).Text(M_4_6);
                            table.Cell().Row(8).Column(10).Element(Title).Text(M_4_7);
                            table.Cell().Row(8).Column(11).Element(Title).Text(M_4_8);

                            table.Cell().Row(9).Column(1).Element(Block).Text("Chia theo quốc tịch chủ văn bằng: \n - Nước" + A_5).Italic();
                            table.Cell().Row(9).Column(2).Element(Title).Text("05");
                            table.Cell().Row(9).Column(3).Element(Title).Text("Văn bằng").Italic();
                            table.Cell().Row(9).Column(4).Element(Title).Text(M_5_1);
                            table.Cell().Row(9).Column(5).Element(Title).Text(M_5_2);
                            table.Cell().Row(9).Column(6).Element(Title).Text(M_5_3);
                            table.Cell().Row(9).Column(7).Element(Title).Text(M_5_4);
                            table.Cell().Row(9).Column(8).Element(Title).Text(M_5_5);
                            table.Cell().Row(9).Column(9).Element(Title).Text(M_5_6);
                            table.Cell().Row(9).Column(10).Element(Title).Text(M_5_7);
                            table.Cell().Row(9).Column(11).Element(Title).Text(M_5_8);

                            table.Cell().Row(10).Column(1).Element(Block).Text("- Nước " + A_6).Italic();
                            table.Cell().Row(10).Column(2).Element(Title).Text("06");
                            table.Cell().Row(10).Column(3).Element(Title).Text("Văn bằng").Italic();
                            table.Cell().Row(10).Column(4).Element(Title).Text(M_6_1);
                            table.Cell().Row(10).Column(5).Element(Title).Text(M_6_2);
                            table.Cell().Row(10).Column(6).Element(Title).Text(M_6_3);
                            table.Cell().Row(10).Column(7).Element(Title).Text(M_6_4);
                            table.Cell().Row(10).Column(8).Element(Title).Text(M_6_5);
                            table.Cell().Row(10).Column(9).Element(Title).Text(M_6_6);
                            table.Cell().Row(10).Column(10).Element(Title).Text(M_6_7);
                            table.Cell().Row(10).Column(11).Element(Title).Text(M_6_8);

                            table.Cell().Row(11).Column(1).Element(Block).Text("3. Số đơn đăng ký quốc tế đối tượng sở hữu công nghiệp của tổ chức, cá nhân trong nước").Italic().Bold();
                            table.Cell().Row(11).Column(2).Element(Title).Text("07");
                            table.Cell().Row(11).Column(3).Element(Title).Text("Đơn").Italic();
                            table.Cell().Row(11).Column(4).Element(Title).Text(M_7_1);
                            table.Cell().Row(11).Column(5).Element(Title).Text(M_7_2);
                            table.Cell().Row(11).Column(6).Element(Title).Text(M_7_3);
                            table.Cell().Row(11).Column(7).Element(Title).Text(M_7_4);
                            table.Cell().Row(11).Column(8).Element(Title).Text(M_7_5);
                            table.Cell().Row(11).Column(9).Element(Title).Text(M_7_6);
                            table.Cell().Row(11).Column(10).Element(Title).Text(M_7_7);
                            table.Cell().Row(11).Column(11).Element(Title).Text(M_7_8);

                            table.Cell().Row(12).Column(1).Element(Block).Text("Chia theo nước/khu vực nhận đơn: \n -Nước/khu vực " + A_8).Italic();
                            table.Cell().Row(12).Column(2).Element(Title).Text("08");
                            table.Cell().Row(12).Column(3).Element(Title).Text("Đơn").Italic();
                            table.Cell().Row(12).Column(4).Element(Title).Text(M_8_1);
                            table.Cell().Row(12).Column(5).Element(Title).Text(M_8_2);
                            table.Cell().Row(12).Column(6).Element(Title).Text(M_8_3);
                            table.Cell().Row(12).Column(7).Element(Title).Text(M_8_4);
                            table.Cell().Row(12).Column(8).Element(Title).Text(M_8_5);
                            table.Cell().Row(12).Column(9).Element(Title).Text(M_8_6);
                            table.Cell().Row(12).Column(10).Element(Title).Text(M_8_7);
                            table.Cell().Row(12).Column(11).Element(Title).Text(M_8_8);

                            table.Cell().Row(13).Column(1).Element(Block).Text("- Nước/ khu vực" + A_9);
                            table.Cell().Row(13).Column(2).Element(Title).Text("09");
                            table.Cell().Row(13).Column(3).Element(Title).Text("Đơn").Italic();
                            table.Cell().Row(13).Column(4).Element(Title).Text(M_9_1);
                            table.Cell().Row(13).Column(5).Element(Title).Text(M_9_2);
                            table.Cell().Row(13).Column(6).Element(Title).Text(M_9_3);
                            table.Cell().Row(13).Column(7).Element(Title).Text(M_9_4);
                            table.Cell().Row(13).Column(8).Element(Title).Text(M_9_5);
                            table.Cell().Row(13).Column(9).Element(Title).Text(M_9_6);
                            table.Cell().Row(13).Column(10).Element(Title).Text(M_9_7);
                            table.Cell().Row(13).Column(11).Element(Title).Text(M_9_8);

                            table.Cell().Row(14).Column(1).Element(Block).Text("4. Số chủ thể trong nước được cấp văn bằng bảo hộ sở hữu công nghiệp tại Việt Nam").Bold();
                            table.Cell().Row(14).Column(2).Element(Title).Text("10");
                            table.Cell().Row(14).Column(3).Element(Title).Text("Cá nhân/tổ chức").Italic();
                            table.Cell().Row(14).Column(4).Element(Title).Text(M_10_1);
                            table.Cell().Row(14).Column(5).Element(Title).Text(M_10_2);
                            table.Cell().Row(14).Column(6).Element(Title).Text(M_10_3);
                            table.Cell().Row(14).Column(8).Element(Title).Text(M_10_4);
                            table.Cell().Row(14).Column(5).Element(Title).Text(M_10_5);
                            table.Cell().Row(14).Column(9).Element(Title).Text(M_10_6);
                            table.Cell().Row(14).Column(10).Element(Title).Text(M_10_7);
                            table.Cell().Row(14).Column(11).Element(Title).Text(M_10_8);

                            table.Cell().Row(15).Column(1).Element(Block).Text("Chia theo đối tượng: - Cá nhân");
                            table.Cell().Row(15).Column(2).Element(Title).Text("11");
                            table.Cell().Row(15).Column(3).Element(Title).Text("Cá nhân").Italic();
                            table.Cell().Row(15).Column(4).Element(Title).Text(M_11_1);
                            table.Cell().Row(15).Column(5).Element(Title).Text(M_11_2);
                            table.Cell().Row(15).Column(6).Element(Title).Text(M_11_3);
                            table.Cell().Row(15).Column(7).Element(Title).Text(M_11_4);
                            table.Cell().Row(15).Column(8).Element(Title).Text(M_11_5);
                            table.Cell().Row(15).Column(9).Element(Title).Text(M_11_6);
                            table.Cell().Row(15).Column(10).Element(Title).Text(M_11_7);
                            table.Cell().Row(15).Column(11).Element(Title).Text(M_11_8);

                            table.Cell().Row(16).Column(1).Element(Block).Text("- Tổ chức");
                            table.Cell().Row(16).Column(2).Element(Title).Text("12");
                            table.Cell().Row(16).Column(3).Element(Title).Text("Tổ chức").Italic();
                            table.Cell().Row(16).Column(4).Element(Title).Text(M_12_1);
                            table.Cell().Row(16).Column(5).Element(Title).Text(M_12_2);
                            table.Cell().Row(16).Column(6).Element(Title).Text(M_12_3);
                            table.Cell().Row(16).Column(7).Element(Title).Text(M_12_4);
                            table.Cell().Row(16).Column(8).Element(Title).Text(M_12_5);
                            table.Cell().Row(16).Column(9).Element(Title).Text(M_12_6);
                            table.Cell().Row(16).Column(10).Element(Title).Text(M_12_7);
                            table.Cell().Row(16).Column(11).Element(Title).Text(M_12_8);

                            table.Cell().Row(17).Column(1).Element(Block).Text("5. Số hợp đồng chuyển giao quyền sở hữu công nghiệp đã đăng ký").Bold();
                            table.Cell().Row(17).Column(2).Element(Title).Text("13");
                            table.Cell().Row(17).Column(3).Element(Title).Text("Hợp đồng").Italic();
                            table.Cell().Row(17).Column(4).Element(Title).Text(M_13_1);
                            table.Cell().Row(17).Column(5).Element(Title).Text(M_13_2);
                            table.Cell().Row(17).Column(6).Element(Title).Text(M_13_3);
                            table.Cell().Row(17).Column(7).Element(Title).Text(M_13_4);
                            table.Cell().Row(17).Column(8).Element(Title).Text(M_13_5);
                            table.Cell().Row(17).Column(9).Element(Title).Text(M_13_6);
                            table.Cell().Row(17).Column(10).Element(Title).Text(M_13_7);
                            table.Cell().Row(17).Column(11).Element(Title).Text(M_13_8);

                            table.Cell().Row(18).Column(1).Element(Block).Text("- Chia theo quốc tịch bên giao/bên nhận: \n - Việt Nam/Việt Nam").Italic();
                            table.Cell().Row(18).Column(2).Element(Title).Text("14");
                            table.Cell().Row(18).Column(3).Element(Title).Text("Hợp đồng").Italic();
                            table.Cell().Row(18).Column(4).Element(Title).Text(M_14_1);
                            table.Cell().Row(18).Column(5).Element(Title).Text(M_14_2);
                            table.Cell().Row(18).Column(6).Element(Title).Text(M_14_3);
                            table.Cell().Row(18).Column(7).Element(Title).Text(M_14_4);
                            table.Cell().Row(18).Column(8).Element(Title).Text(M_14_5);
                            table.Cell().Row(18).Column(9).Element(Title).Text(M_14_6);
                            table.Cell().Row(18).Column(10).Element(Title).Text(M_14_7);
                            table.Cell().Row(18).Column(11).Element(Title).Text(M_14_8);

                            table.Cell().Row(19).Column(1).Element(Block).Text("- Việt Nam/Nước ngoài").Italic();
                            table.Cell().Row(19).Column(2).Element(Title).Text("15");
                            table.Cell().Row(19).Column(3).Element(Title).Text("Hợp đồng").Italic();
                            table.Cell().Row(19).Column(4).Element(Title).Text(M_15_1);
                            table.Cell().Row(19).Column(5).Element(Title).Text(M_15_2);
                            table.Cell().Row(19).Column(6).Element(Title).Text(M_15_3);
                            table.Cell().Row(19).Column(7).Element(Title).Text(M_15_4);
                            table.Cell().Row(19).Column(8).Element(Title).Text(M_15_5);
                            table.Cell().Row(19).Column(9).Element(Title).Text(M_15_6);
                            table.Cell().Row(19).Column(10).Element(Title).Text(M_15_7);
                            table.Cell().Row(19).Column(11).Element(Title).Text(M_15_8);

                            table.Cell().Row(20).Column(1).Element(Block).Text("- Nước ngoài/Việt Nam").Italic();
                            table.Cell().Row(20).Column(2).Element(Title).Text("16");
                            table.Cell().Row(20).Column(3).Element(Title).Text("Hợp đồng").Italic();
                            table.Cell().Row(20).Column(4).Element(Title).Text(M_16_1);
                            table.Cell().Row(20).Column(5).Element(Title).Text(M_16_2);
                            table.Cell().Row(20).Column(6).Element(Title).Text(M_16_3);
                            table.Cell().Row(20).Column(7).Element(Title).Text(M_16_4);
                            table.Cell().Row(20).Column(8).Element(Title).Text(M_16_5);
                            table.Cell().Row(20).Column(9).Element(Title).Text(M_16_6);
                            table.Cell().Row(20).Column(10).Element(Title).Text(M_16_7);
                            table.Cell().Row(20).Column(11).Element(Title).Text(M_16_8);

                            table.Cell().Row(21).Column(1).Element(Block).Text("- Việt Nam/Nước ngoài").Italic();
                            table.Cell().Row(21).Column(2).Element(Title).Text("17");
                            table.Cell().Row(21).Column(3).Element(Title).Text("Hợp đồng").Italic();
                            table.Cell().Row(21).Column(4).Element(Title).Text(M_17_1);
                            table.Cell().Row(21).Column(5).Element(Title).Text(M_17_2);
                            table.Cell().Row(21).Column(6).Element(Title).Text(M_17_3);
                            table.Cell().Row(21).Column(7).Element(Title).Text(M_17_4);
                            table.Cell().Row(21).Column(8).Element(Title).Text(M_17_5);
                            table.Cell().Row(21).Column(9).Element(Title).Text(M_17_6);
                            table.Cell().Row(21).Column(10).Element(Title).Text(M_17_7);
                            table.Cell().Row(21).Column(11).Element(Title).Text(M_17_8);
                        });

                        column.Item().PaddingTop(15).PaddingBottom(5).AlignLeft().Text("").Italic().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Center).Text("Người lập biểu").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("Người kiểm tra biểu").Bold();
                            table.Cell().Row(1).Column(3).Element(Center).Text(thu + " , ngày " + ngay + " tháng " + thang + " năm " + nam).Italic();

                            table.Cell().Row(2).Column(1).Element(Center).Text("(ký, ghi rõ họ tên)").Italic();
                            table.Cell().Row(2).Column(2).Element(Center).Text("(ký, ghi rõ họ tên)").Italic();
                            table.Cell().Row(2).Column(3).Element(Center).Text("Thủ trưởng đơn vị").Bold();

                            table.Cell().Row(3).Column(1).Element(Center).Text("");
                            table.Cell().Row(3).Column(2).Element(Center).Text("");
                            table.Cell().Row(3).Column(3).Element(Center).Text("(Ký, ghi rõ họ tên và đóng dấu)").Italic();

                            table.Cell().Row(4).Column(1).Element(Center).Text(chu_ky_nguoi_lap);
                            table.Cell().Row(4).Column(2).Element(Center).Text(chu_ky_nguoi_kiem_tra);
                            table.Cell().Row(4).Column(3).Element(Center).Text(thu_truong_don_vi);

                            table.Cell().Row(5).Column(1).Element(Center).Text(ten_nguoi_lap);
                            table.Cell().Row(5).Column(2).Element(Center).Text(ten_nguoi_kiem_tra);
                            table.Cell().Row(5).Column(3).Element(Center).Text(ten_thu_truong_don_vi);

                        });

                    });
                });
            })
              .GeneratePdf(path);
        return path;
    }

    public string XuatMau09TT15(string path, Workflow workflow)
    {


        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var nam_den = "2024";
                var don_vi_bao_cao = "Bộ Công Thương";

                var thu = "";
                var ngay = "";
                var thang = "";
                var nam = "";

                
              

                var chu_ky_nguoi_lap = "";
                var chu_ky_nguoi_kiem_tra = "";
                var thu_truong_don_vi = "";

                var ten_nguoi_lap = "";
                var ten_nguoi_kiem_tra = "";
                var ten_thu_truong_don_vi = "";


                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic dataTable = null;

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {

                            dynamic? data1 = step1.form.data;

                           if(data1.d != null)
                            {
                                dataTable = data1.d;
                            }

                            //chu_ky_nguoi_lap = data1.NguoiLapBieu.MaChuKy;
                            //chu_ky_nguoi_kiem_tra = data1.NguoiKiemTraBieu.MaChuKy;
                            //thu_truong_don_vi = data1.ThuTruongDonVi.MaChuKy;

                            ten_nguoi_lap = data1.NguoiLapBieu.NguoiKy;
                            ten_nguoi_kiem_tra = data1.NguoiKiemTraBieu.NguoiKy;
                            ten_thu_truong_don_vi = data1.ThuTruongDonVi.NguoiKy;

                            string ngaythangnam = data1.ThuTruongDonVi.KyNgay.ToString();
                            string[] thoiGian = ngaythangnam.Split(' ');
                            ngaythangnam = thoiGian[0];
                            string[] ThoiGian = ngaythangnam.Split('/');
                            ngay = ThoiGian[0];
                            thang = ThoiGian[1];
                            nam = ThoiGian[2];


                        }

                    }

                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()

                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.ConstantColumn(150);
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Text("Biểu số 09/KHCN-TĐC").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("TIÊU CHUẨN ĐO ").Bold();
                            table.Cell().Row(1).Column(3).Text("- Đơn vị báo cáo: ").Bold();

                            table.Cell().Row(2).Column(1).Text("");
                            table.Cell().Row(2).Column(2).Text("LƯỜNG CHẤT LƯỢNG").Bold();
                            table.Cell().Row(2).Column(3).Text(don_vi_bao_cao);

                            table.Cell().Row(3).Column(1).Text("Ban hành kèm theo Thông tư 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018");
                            table.Cell().Row(3).Column(2).Text("(Có đến ngày 01/01 đến ngày 31/12 năm " + nam_den + ")");
                            table.Cell().Row(3).Column(3).Text("- Đơn vị nhận báo cáo: ").Bold();

                            table.Cell().Row(4).Column(1).Text("Ngày nhận báo cáo: Ngày 15/02 năm sau");
                            table.Cell().Row(4).Column(2).Text("");
                            table.Cell().Row(4).Column(3).Text("Cục Thông tin KH & CN quốc gia");

                            table.Cell().Row(5).Column(1).Text("").Bold();
                            table.Cell().Row(5).Column(2).Element(Center).Text("").Italic();
                            table.Cell().Row(5).Column(3).Text("");
                        });

                        column.Item().PaddingTop(18).PaddingBottom(10).AlignLeft().Text("").Bold().FontSize(12);

                        static IContainer Center(IContainer container)
                        {
                            return container
                                .Background(Colors.White)
                                .ShowOnce()
                                .AlignCenter()
                                .AlignMiddle();
                        }

                        static IContainer Block(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(50)
                                .MinHeight(30)
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .AlignMiddle();
                        }

                        static IContainer Title(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .PaddingLeft(5)
                                .PaddingRight(5)
                                .PaddingTop(5)
                                .PaddingBottom(5)
                                .MinHeight(8)
                                .AlignCenter()
                                .AlignMiddle();
                        }


                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(230);
                                columns.ConstantColumn(50);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Title).Text("");
                            table.Cell().Row(1).Column(2).Element(Title).Text("Mã số");
                            table.Cell().Row(1).Column(3).Element(Title).Text("Đơn vị tính");
                            table.Cell().Row(1).Column(4).Element(Title).Text("Tổng số");
                            table.Cell().Row(1).Column(5).Element(Title).Text("Trong kỳ báo cáo");

                            table.Cell().Row(2).Column(1).Element(Title).Text("A");
                            table.Cell().Row(2).Column(2).Element(Title).Text("B");
                            table.Cell().Row(2).Column(3).Element(Title).Text("C");
                            table.Cell().Row(2).Column(4).Element(Title).Text("1");
                            table.Cell().Row(2).Column(5).Element(Title).Text("2");
                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTable)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;
                                    string dataNoiDung = item.tt + ' ' + item.NoiDung;

                                    string NoiDung = dataNoiDung;
                                    string MaSo = item.MaSo.ToString();
                                    string DonViTinh = item.DonViTinh.ToString();
                                    string Tong = item.Tong.ToString();
                                    string BaoCao = item.BaoCao.ToString();
                        

                                    string[] check = { "1 Số tiêu chuẩn quốc gia (TCVN) được công bố", "1.1 Chia theo loại tiêu chuẩn", "1.2 Chia theo lĩnh vực tiêu chuẩn", "2 Số quy chuẩn kỹ thuật quốc gia (QCVN) được ban hành", "2.1 Chia theo loại quy chuẩn kỹ thuật",
                                    "2.2 Chia theo lĩnh vực quy chuẩn kỹ thuật","3 Số quy chuẩn kỹ thuật địa phương","3.1 Chia theo loại quy chuẩn kỹ thuật","3.2 Chia theo lĩnh vực quy chuẩn kỹ thuật","4 Số doanh nghiệp, tổ chức đạt giải thưởng chất lượng quốc gia",
                                    "4.1 Chia theo loại hình doanh nghiệp, tổ chức","4.2 Hình thức giải thưởng","5 Số mẫu phương tiện đo được phê duyệt (Chia theo loại phương tiện đo)","6 Số tổ chức kiểm định, hiệu chuẩn, thử nghiệm phương tiện đo, chuẩn đo lường","7 Số phương tiện đo, chuẩn đo lường được kiểm định, hiệu chuẩn, thử nghiệm (Chia theo loại phương tiện đo)",
                                    "8 Số giấy chứng nhận về hệ thống quản lý cấp cho tổ chức, doanh nghiệp (Chia theo hệ thống quản lý)","9 Số doanh nghiệp, tổ chức đăng ký sử dụng mã vạch","10 Số phòng thử nghiệm, hiệu chuẩn được công nhận (Chia theo lĩnh vực thử nghiệm, hiệu chuẩn)","11 Số tổ chức đánh giá sự phù hợp đăng ký lĩnh vực hoạt động"
                                    };

                                    if (check.Contains(NoiDung)) { table.Cell().Row(rowIndex).Column(1).Element(Block).Text(NoiDung).FontSize(14).Bold(); }
                                    else { table.Cell().Row(rowIndex).Column(1).Element(Block).Text(NoiDung).FontSize(14); }
                                    table.Cell().Row(rowIndex).Column(2).Element(Title).Text(MaSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(Title).Text(DonViTinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(Title).Text(Tong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(Title).Text(BaoCao).FontSize(14);
                               
                                    i++;
                                }
                            }



                        });

                        column.Item().PaddingTop(15).PaddingBottom(5).AlignLeft().Text("").Italic().FontSize(12);

                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                            });

                            //row 1
                            table.Cell().Row(1).Column(1).Element(Center).Text("Người lập biểu").Bold();
                            table.Cell().Row(1).Column(2).Element(Center).Text("Người kiểm tra biểu").Bold();
                            table.Cell().Row(1).Column(3).Element(Center).Text(thu + ", ngày " + ngay + " tháng " + thang + " năm " + nam).Italic();

                            table.Cell().Row(2).Column(1).Element(Center).Text("(ký, ghi rõ họ tên)").Italic();
                            table.Cell().Row(2).Column(2).Element(Center).Text("(ký, ghi rõ họ tên)").Italic();
                            table.Cell().Row(2).Column(3).Element(Center).Text("Thủ trưởng đơn vị").Bold();

                            table.Cell().Row(3).Column(1).Element(Center).Text("");
                            table.Cell().Row(3).Column(2).Element(Center).Text("");
                            table.Cell().Row(3).Column(3).Element(Center).Text("(Ký, ghi rõ họ tên và đóng dấu)").Italic();

                            //table.Cell().Row(4).Column(1).Element(Center).Text(chu_ky_nguoi_lap);
                            //table.Cell().Row(4).Column(2).Element(Center).Text(chu_ky_nguoi_kiem_tra);
                            //table.Cell().Row(4).Column(3).Element(Center).Text(thu_truong_don_vi);

                            table.Cell().Row(5).Column(1).Element(Center).Text(ten_nguoi_lap);
                            table.Cell().Row(5).Column(2).Element(Center).Text(ten_nguoi_kiem_tra);
                            table.Cell().Row(5).Column(3).Element(Center).Text(ten_thu_truong_don_vi);

                        });

                    });
                });
            })
               .GeneratePdf(path);
        return path;
    }

    public string XuatMau10TT15(string path, Workflow workflow)
    {
        QuestPDF.Fluent.Document
            .Create(container =>
            {
                var ngay = "";
                var thang = "";
                var nam = "";

                var don_vi_bao_bao = "";


                // mục 1
           



                var nguoi_lap_bien_ky = "";
                var nguoi_lap_bien_ho_ten = "";

                var nguoi_kiem_tra_bien_ky = "";
                var nguoi_kiem_tra_bien_ho_ten = "";

                var thu_truong_ky = "";
                var thu_truong_ho_ten = "";
                var thu_truong_dong_dau = "";


                // Xuat quy trinh 1 -> có 5 bước
                List<WorkflowStep> steps = workflow.WorkflowSteps;
                dynamic? step1;
                dynamic dataTable = null; ;
               

                foreach (WorkflowStep workflowStep in steps)
                {
                    if (!workflowStep.NoiDung.IsNullOrEmpty() && workflowStep.Buoc == 1)
                    {
                        step1 = JsonConvert.DeserializeObject(workflowStep.NoiDung.ToString());
                        if (step1 != null)
                        {
                            dynamic? data1 = step1.form.data;

                           
                                if (data1.d != null)
                                {
                                    dataTable = data1.d;
                                }
                            
                            don_vi_bao_bao = data1.DonVi;

                            nguoi_lap_bien_ho_ten = data1.NguoiLapBieu.NguoiKy;
                            nguoi_kiem_tra_bien_ho_ten = data1.NguoiKiemTraBieu.NguoiKy;
                            thu_truong_ho_ten = data1.ThuTruongDonVi.NguoiKy;
                            thu_truong_ho_ten = data1.ThuTruongDonVi.NguoiKy;

                            string date = data1.ThuTruongDonVi.KyNgay;
                            string[] ngayThangNam = date.Split(' ');

                            date = ngayThangNam[0];

                            ngayThangNam = date.Split('/');

                            ngay = ngayThangNam[0];
                            thang = ngayThangNam[1];
                            nam = ngayThangNam[2];

                        }
                    }
                   
                }

                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.PageColor(Colors.White);
                    page.DefaultTextStyle(x => x.FontSize(20));
                    page.DefaultTextStyle(x => x.FontFamily("Times New Roman"));

                    page.Header()
                        .Column(column =>
                        {

                        });
                    page.Content()
                    .Column(column =>
                    {
                        column.Item().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(40);
                            });

                            table.Cell().Row(1).Column(1).Text(Text =>
                            {
                                Text.Span("Biểu 10/KHCN-NLAT").Bold().FontSize(14);
                                Text.Span("Ban hành kèm theo Thông tư số 15/2018/TT-BKHCN ngày 15 tháng 11 năm 2018").FontSize(14);
                                Text.Span("\nNgày nhận báo cáo: Ngày 15/02 năm sau").FontSize(14);
                            });
                            table.Cell().Row(1).Column(2).AlignCenter().Text(Text =>
                            {
                                Text.Span("NĂNG LƯỢNG NGUYÊN TỬ AN TOÀN BỨC XẠ VÀ HẠT NHÂN").Bold().FontSize(14);
                                Text.Span("\n(Có đến ngày 31/12 năm " + nam + ")").FontSize(14);
                            });
                            table.Cell().Row(1).Column(3).AlignLeft().Text(Text =>
                            {
                                Text.Span("- Đơn vị báo cáo:").Bold().FontSize(14);
                                Text.Span("\n" + don_vi_bao_bao).FontSize(14);
                                Text.Span("\n- Đơn vị nhận báo cáo:").Bold().FontSize(14);
                                Text.Span("\nCục Thông tin KH&CN quốc gia").FontSize(14);
                            });
                        });
                        column.Item().PaddingTop(40).Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(4);
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();

                            });
                            table.Cell().Row(1).Column(1).RowSpan(2).Element(BlockHead).Text("").FontSize(14);
                            table.Cell().Row(1).Column(2).RowSpan(2).Element(BlockHead).Text("Mã số").FontSize(14);
                            table.Cell().Row(1).Column(3).RowSpan(2).Element(BlockHead).Text("Đơn vị tính").FontSize(14);
                            table.Cell().Row(1).Column(4).RowSpan(2).Element(BlockHead).Text("Tổng cộng").FontSize(14);
                            table.Cell().Row(1).Column(5).ColumnSpan(3).Element(BlockHead).Text("Chia theo loại hình kinh tế").FontSize(14);

                            table.Cell().Row(2).Column(5).Element(BlockHead).Text("Nhà nước").FontSize(14);
                            table.Cell().Row(2).Column(6).Element(BlockHead).Text("Ngoài nhà nước").FontSize(14);
                            table.Cell().Row(2).Column(7).Element(BlockHead).Text("Có vốn đầu tư nước ngoài").FontSize(14);

                            table.Cell().Row(3).Column(1).Element(BlockTT).Text("A").FontSize(14);
                            table.Cell().Row(3).Column(2).Element(BlockTT).Text("B").FontSize(14);
                            table.Cell().Row(3).Column(3).Element(BlockTT).Text("C").FontSize(14);
                            table.Cell().Row(3).Column(4).Element(BlockTT).Text("1").FontSize(14);
                            table.Cell().Row(3).Column(5).Element(BlockTT).Text("2").FontSize(14);
                            table.Cell().Row(3).Column(6).Element(BlockTT).Text("3").FontSize(14);
                            table.Cell().Row(3).Column(7).Element(BlockTT).Text("4").FontSize(14);
                            uint rowIndex = 1;
                            uint i = 1;
                            foreach (var item in dataTable)
                            {
                                if (item != null)
                                {
                                    string index = i.ToString();
                                    rowIndex = i + 2;
                                    string dataNoiDung = item.tt + ' ' + item.NoiDung;

                                    string NoiDung = dataNoiDung;
                                    string MaSo = item.MaSo.ToString();
                                    string DonViTinh = item.DonViTinh.ToString();
                                    string Tong = item.Tong.ToString();
                                    string KinhTe_NhaNuoc = item.KinhTe_NhaNuoc.ToString();
                                    string KinhTe_NgoaiNhaNuoc = item.KinhTe_NgoaiNhaNuoc.ToString();
                                    string KinhTe_VonDauTu = item.KinhTe_VonDauTu.ToString();

                                    string[] check = { "1 Số người hoạt động trong lĩnh vực năng lượng nguyên tử", "1.1 (trong đó) Nữ", "1.2 Chia theo lĩnh vực KH&CN", "1.3 Chia theo trình độ chuyên môn", "1.4 Chia theo lĩnh vực hoạt động",
                                    "1.5 Chia theo lĩnh vực ứng dụng","2 Số tổ chức tiến hành công việc bức xạ","3 Số cá nhân tiến hành công việc bức xạ","4 Số nhân viên bức xạ","5 Số thiết bị bức xạ",
                                    "6 Số nguồn phóng xạ","7 Số giấy phép tiến hành công việc bức xạ được cấp"
                                    };

                                    if (check.Contains(NoiDung)) { table.Cell().Row(rowIndex).Column(1).Element(BlockItem).Text(NoiDung).FontSize(14).Bold(); }
                                    else { table.Cell().Row(rowIndex).Column(1).Element(BlockItem).Text(NoiDung).FontSize(14); }
                                    table.Cell().Row(rowIndex).Column(2).Element(BlockTT).Text(MaSo).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(3).Element(BlockTT).Text(DonViTinh).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(4).Element(BlockTT).Text(Tong).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(5).Element(BlockTT).Text(KinhTe_NhaNuoc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(6).Element(BlockTT).Text(KinhTe_NgoaiNhaNuoc).FontSize(14);
                                    table.Cell().Row(rowIndex).Column(7).Element(BlockTT).Text(KinhTe_VonDauTu).FontSize(14);

                                    i++;
                                }
                            }
                        });
                        column.Item().PaddingTop(30).Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(40);
                                columns.RelativeColumn(60);
                                columns.RelativeColumn(40);
                            });

                            table.Cell().Row(1).Column(1).AlignCenter().Text(Text =>
                            {
                                Text.Span("Người lập biểu").Bold().FontSize(14);
                                Text.Span("\n(ký, ghi rõ họ tên)").Italic().FontSize(14);
                                Text.Span("\n" + nguoi_lap_bien_ky).FontSize(14);
                                Text.Span("\n" + nguoi_lap_bien_ho_ten).FontSize(14);
                            });
                            table.Cell().Row(1).Column(2).AlignCenter().Text(Text =>
                            {
                                Text.Span("Người kiểm tra biểu").Bold().FontSize(14);
                                Text.Span("\n(ký, ghi rõ họ tên)").Italic().FontSize(14);
                                Text.Span("\n" + nguoi_kiem_tra_bien_ky).FontSize(14);
                                Text.Span("\n" + nguoi_kiem_tra_bien_ho_ten).FontSize(14);
                            });
                            table.Cell().Row(1).Column(3).AlignCenter().Text(Text =>
                            {
                                Text.Span("Ngày " + ngay + ", tháng " + thang + ", năm " + nam).FontSize(9);
                                Text.Span("\nThủ trưởng đơn vị").Bold().FontSize(14);
                                Text.Span("\n(Ký, ghi rõ họ tên và đóng dấu)").Italic().FontSize(14);
                                Text.Span("\n" + thu_truong_ky).FontSize(14);
                                Text.Span("\n" + thu_truong_ho_ten).FontSize(14);
                                Text.Span("\n" + thu_truong_dong_dau).FontSize(14);
                            });
                        });
                        static IContainer BlockTT(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockHead(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .Padding(5)
                                .AlignTop()
                                .AlignCenter()
                                .AlignMiddle();
                        }
                        static IContainer BlockItem(IContainer container)
                        {
                            return container
                                .Border(1)
                                .Background(Colors.White)
                                .ShowOnce()
                                .MinWidth(28)
                                .MinHeight(28)
                                .AlignLeft()
                                .PaddingLeft(5);
                            
                        }
                    });
                });
            })
              .GeneratePdf(path);
        return path;
    }
    #endregion

}