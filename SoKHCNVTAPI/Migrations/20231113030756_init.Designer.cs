// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SoKHCNVTAPI.Configurations;

#nullable disable

namespace SoKHCNVTAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231113030756_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Departments", "skhcn");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3203),
                            Description = "SỞ KHOA HỌC VÀ CÔNG NGHỆ TỈNH BÀ RỊA - VŨNG TÀU",
                            IsDeleted = false,
                            Name = "SỞ KHOA HỌC VÀ CÔNG NGHỆ TỈNH BÀ RỊA - VŨNG TÀU",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3204),
                            Description = "TRUNG TÂM THÔNG TIN VÀ ỨNG DỤNG KHOA HỌC & CÔNG NGHỆ TỈNH BÀ RỊA – VŨNG TÀU",
                            IsDeleted = false,
                            Name = "TRUNG TÂM THÔNG TIN VÀ ỨNG DỤNG KHOA HỌC & CÔNG NGHỆ TỈNH BÀ RỊA – VŨNG TÀU",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3205),
                            Description = "CHI CỤC TIÊU CHUẨN ĐO LƯỜNG CHẤT LƯỢNG",
                            IsDeleted = false,
                            Name = "CHI CỤC TIÊU CHUẨN ĐO LƯỜNG CHẤT LƯỢNG",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3206),
                            Description = "TRUNG TÂM KỸ THUẬT TIÊU CHUẨN ĐO LƯỜNG CHẤT LƯỢNG",
                            IsDeleted = false,
                            Name = "TRUNG TÂM KỸ THUẬT TIÊU CHUẨN ĐO LƯỜNG CHẤT LƯỢNG",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.ExpertIdentifier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ExpertIdentifiers", "skhcn");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "V.05.01.01",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3228),
                            Description = "định danh chuyên gia",
                            IsDeleted = false,
                            Name = "Nghiên cứu viên cao cấp (hạng I)",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 2L,
                            Code = "V.05.01.02",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3229),
                            Description = "Nghiên cứu viên chính (hạng II)",
                            IsDeleted = false,
                            Name = "Nghiên cứu viên chính (hạng II)",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 3L,
                            Code = "V.05.01.03",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3230),
                            Description = "Nghiên cứu viên (hạng III)",
                            IsDeleted = false,
                            Name = "Nghiên cứu viên (hạng III)",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 4L,
                            Code = "V.05.01.04",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3231),
                            Description = "Trợ lý nghiên cứu (hạng IV)",
                            IsDeleted = false,
                            Name = "Trợ lý nghiên cứu (hạng IV)",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 5L,
                            Code = "V.05.02.05",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3232),
                            Description = "Kỹ sư cao cấp (hạng I)",
                            IsDeleted = false,
                            Name = "Kỹ sư cao cấp (hạng I)",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 6L,
                            Code = "V.05.02.06",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3233),
                            Description = "Kỹ sư chính (hạng II)",
                            IsDeleted = false,
                            Name = "Kỹ sư chính (hạng II)",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 7L,
                            Code = "V.05.02.07",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3234),
                            Description = "Kỹ sư (hạng III)",
                            IsDeleted = false,
                            Name = "Kỹ sư (hạng III)",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 8L,
                            Code = "V.05.02.08",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3235),
                            Description = "Kỹ thuật viên",
                            IsDeleted = false,
                            Name = "Kỹ thuật viên",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.MissionIdentifier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MissionIdentifiers", "skhcn");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "CT",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3253),
                            Description = "CT là ký hiệu chung cho các chương trình khoa học và công nghệ cấp Bộ.",
                            IsDeleted = false,
                            Name = "CT",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 2L,
                            Code = "DT",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3254),
                            Description = "ĐT là ký hiệu chung cho các đề tài khoa học và công nghệ cấp Bộ.",
                            IsDeleted = false,
                            Name = "DT",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 3L,
                            Code = "DA",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3256),
                            Description = "DA là ký hiệu chung cho các dự án khoa học và công nghệ cấp Bộ.",
                            IsDeleted = false,
                            Name = "DA",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 4L,
                            Code = "NVK",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3256),
                            Description = "NVK là ký hiệu chung cho các nhiệm vụ khoa học và công nghệ cấp Bộ khác.",
                            IsDeleted = false,
                            Name = "NVK",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.MissionLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MissionLevels", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.MissionStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MissionStatuses", "skhcn");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3310),
                            Description = "Nháp",
                            IsDeleted = false,
                            Name = "Nháp",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3311),
                            Description = "Trình duyệt",
                            IsDeleted = false,
                            Name = "Trình duyệt",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3317),
                            Description = "Xác nhận đã nhận nhiêm vụ",
                            IsDeleted = false,
                            Name = "Xác nhận",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3326),
                            Description = "Đang xử lý",
                            IsDeleted = false,
                            Name = "Đang xử lý",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3341),
                            Description = "Hoàn thành",
                            IsDeleted = false,
                            Name = "Hoàn thành",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3341),
                            Description = "Huỷ",
                            IsDeleted = false,
                            Name = "Huỷ",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.MissionType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MissionTypes", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.Nationality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Nationalities", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.OwnershipForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("OwnershipForms", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.ParticipationRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ParticipationRoles", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.ProjectType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Provinces", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.PublicationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PublicationTypes", "skhcn");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3287),
                            Description = "Quốc tế",
                            IsDeleted = false,
                            Name = "Quốc tế",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3288),
                            Description = "Trong nước",
                            IsDeleted = false,
                            Name = "Trong nước",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.Title", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Titles", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.Ward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Wards", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(350)
                        .HasColumnType("character varying(350)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("character varying(350)");

                    b.Property<string>("Province")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Ward")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Companies", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Degree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Degrees", "skhcn");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3138),
                            Description = "Học vị 01",
                            IsDeleted = false,
                            Name = "Tú tài",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3155),
                            Description = "Cử nhân",
                            IsDeleted = false,
                            Name = "Cử nhân",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3156),
                            Description = "Giáo sư",
                            IsDeleted = false,
                            Name = "Giáo sư",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3158),
                            Description = "Phó giáo sư",
                            IsDeleted = false,
                            Name = "Phó giáo sư",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3159),
                            Description = "Tiến sĩ",
                            IsDeleted = false,
                            Name = "Tiến sĩ",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3160),
                            Description = "Thạc sĩ",
                            IsDeleted = false,
                            Name = "Thạc sĩ",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 650, DateTimeKind.Local).AddTicks(3161),
                            Description = "Kỹ sư",
                            IsDeleted = false,
                            Name = "Kỹ sư",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Documents", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.EducationLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("EducationLevels", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Expert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AcademicRank")
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Address")
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Degree")
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(250)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("character varying(250)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Phone")
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Province")
                        .HasColumnType("character varying(50)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Experts", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.FileStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("FileStatuss", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Groups", "skhcn");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 435, DateTimeKind.Local).AddTicks(8161),
                            Description = "Group Super Administrator",
                            IsDeleted = false,
                            Name = "Super Administrator",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 435, DateTimeKind.Local).AddTicks(8176),
                            Description = "Group Administrator",
                            IsDeleted = false,
                            Name = "Administrator",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Parent")
                        .HasColumnType("bigint");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Menus", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Mission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("AcceptanceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AnticipatedProduct")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationAddress")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ApplicationScopeAddress")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ConsolidatedFile")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DecisionCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EconomicEfficiency")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("GovernmentExpenses")
                        .HasColumnType("numeric");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Keywords")
                        .HasColumnType("text");

                    b.Property<long?>("MissionLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("MissionNumber")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("OtherExpenses")
                        .HasColumnType("numeric");

                    b.Property<long?>("ProjectTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReportCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReportingYear")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("ResearchFieldId")
                        .HasColumnType("bigint");

                    b.Property<string>("ResearchObjective")
                        .HasColumnType("text");

                    b.Property<string>("ResearchRegistrationNumber")
                        .HasColumnType("text");

                    b.Property<decimal?>("SelfExpenses")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<string>("SummaryFile")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalExpenses")
                        .HasColumnType("numeric");

                    b.Property<string>("TotalExpensesInWords")
                        .HasColumnType("text");

                    b.Property<int?>("TotalTimeWithMonth")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MissionLevelId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProjectTypeId");

                    b.HasIndex("ResearchFieldId");

                    b.ToTable("Tasks", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Officer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime>("JoinAd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<long>("Supervisor")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Officers", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.OfficerIdentifier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("OfficerIdentifiers", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<long>("OrganizationIdentifierId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganizationTypeId")
                        .HasColumnType("bigint");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationIdentifierId");

                    b.HasIndex("OrganizationTypeId");

                    b.ToTable("Organizations", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.OrganizationIdentifier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("OrganizationIdentifiers", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.OrganizationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("OrganizationTypes", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.OwnershipRepresentative", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ApprovedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ApprovedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("character varying(350)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OwnershipRepresentatives", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.ResearchField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<short?>("Status")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ResearchFieldIds", "skhcn");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<long?>("ExpertId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Position")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ResetPasswordCode")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("Token")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Ward")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ExpertId");

                    b.HasIndex("GroupId");

                    b.ToTable("Users", "skhcn");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "KHCN0000",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 435, DateTimeKind.Local).AddTicks(8354),
                            CreatedBy = 0L,
                            Email = "ntcnet@gmail.com",
                            FirstName = "Nguyen",
                            GroupId = 1L,
                            IsDeleted = false,
                            IsLocked = false,
                            LastName = "Cong",
                            NationalId = "1000000001",
                            Password = "$2b$10$YXobAn0trhOuZ8FX3oVxyu2m9jO8I7FOtkUXe5yAfRFwk5a35lzTi",
                            Phone = "+84986435388",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 2L,
                            Code = "KHCN0001",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 505, DateTimeKind.Local).AddTicks(5587),
                            CreatedBy = 0L,
                            Email = "hai.hoang.2762@gmail.com",
                            FirstName = "Hoang",
                            GroupId = 1L,
                            IsDeleted = false,
                            IsLocked = false,
                            LastName = "Hai",
                            NationalId = "1000000001",
                            Password = "$2b$10$snem90wg2w9DYO7HxD3touzHu.vPBSYJ2pL/Ui3rsgQC8tu53LWBm",
                            Phone = "+84379813013",
                            Status = (short)1
                        },
                        new
                        {
                            Id = 3L,
                            Code = "KHCN0003",
                            CreatedAt = new DateTime(2023, 11, 13, 10, 7, 56, 579, DateTimeKind.Local).AddTicks(2162),
                            CreatedBy = 0L,
                            Email = "thuyetlam@gmail.com",
                            FirstName = "Thuyet",
                            GroupId = 1L,
                            IsDeleted = false,
                            IsLocked = false,
                            LastName = "Lam",
                            NationalId = "1000000001",
                            Password = "$2b$10$sXY5sr7oIJ4pyu/iIZImnOWugBCVOGbPt6ZxUKFjvS1biwxZIf4XW",
                            Phone = "+84999999999",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.District", b =>
                {
                    b.HasOne("SoKHCNVTAPI.Entities.CommonCategories.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.Ward", b =>
                {
                    b.HasOne("SoKHCNVTAPI.Entities.CommonCategories.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Mission", b =>
                {
                    b.HasOne("SoKHCNVTAPI.Entities.CommonCategories.MissionLevel", "MissionLevel")
                        .WithMany()
                        .HasForeignKey("MissionLevelId");

                    b.HasOne("SoKHCNVTAPI.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("SoKHCNVTAPI.Entities.CommonCategories.ProjectType", "ProjectType")
                        .WithMany()
                        .HasForeignKey("ProjectTypeId");

                    b.HasOne("SoKHCNVTAPI.Entities.ResearchField", "ResearchField")
                        .WithMany()
                        .HasForeignKey("ResearchFieldId");

                    b.Navigation("MissionLevel");

                    b.Navigation("Organization");

                    b.Navigation("ProjectType");

                    b.Navigation("ResearchField");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Organization", b =>
                {
                    b.HasOne("SoKHCNVTAPI.Entities.OrganizationIdentifier", "OrganizationIdentifier")
                        .WithMany()
                        .HasForeignKey("OrganizationIdentifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoKHCNVTAPI.Entities.OrganizationType", "OrganizationType")
                        .WithMany()
                        .HasForeignKey("OrganizationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationIdentifier");

                    b.Navigation("OrganizationType");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.User", b =>
                {
                    b.HasOne("SoKHCNVTAPI.Entities.Expert", null)
                        .WithMany("User")
                        .HasForeignKey("ExpertId");

                    b.HasOne("SoKHCNVTAPI.Entities.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.District", b =>
                {
                    b.Navigation("Wards");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.CommonCategories.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Expert", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("SoKHCNVTAPI.Entities.Group", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
